{
  "version": 3,
  "sources": ["../../src/slider/index.tsx", "../../src/slider/internal.tsx", "../../src/slider/slider-labels.tsx", "../../@cloudscape-design/components/slider/styles.css.js", "../../src/slider/tick-marks.tsx", "../../src/slider/utils.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { SliderProps } from './interfaces';\nimport InternalSlider from './internal';\n\nexport { SliderProps };\n\nexport default function Slider({ tickMarks, hideFillLine, ...props }: SliderProps) {\n  const baseComponentProps = useBaseComponent('Slider', {\n    props: { tickMarks, hideFillLine, readOnly: props.readOnly },\n  });\n  return <InternalSlider tickMarks={tickMarks} hideFillLine={hideFillLine} {...props} {...baseComponentProps} />;\n}\napplyDisplayName(Slider, 'Slider');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component/index.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context.js';\nimport { fireNonCancelableEvent } from '../internal/events/index.js';\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index.js';\nimport { SliderProps } from './interfaces.js';\nimport SliderLabels from './slider-labels.js';\nimport SliderTickMarks from './tick-marks.js';\nimport {\n  findLowerAndHigherValues,\n  getPercent,\n  getStepArray,\n  THUMB_READONLY_SIZE,\n  THUMB_SIZE,\n  valuesAreValid,\n} from './utils.js';\n\nimport styles from './styles.css.js';\n\ninterface InternalSliderProps extends SliderProps, InternalBaseComponentProps {}\n\nexport default function InternalSlider({\n  value,\n  min,\n  max,\n  onChange,\n  step,\n  disabled,\n  readOnly,\n  ariaLabel,\n  ariaDescription,\n  referenceValues,\n  tickMarks,\n  hideFillLine,\n  valueFormatter,\n  i18nStrings,\n  __internalRootRef = null,\n  ...rest\n}: InternalSliderProps) {\n  const baseProps = getBaseProps(rest);\n  const i18n = useInternalI18n('slider');\n\n  const handleRef = useRef<HTMLDivElement>(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const labelsId = useUniqueId('labels');\n  const { ariaLabelledby, ariaDescribedby, controlId, invalid, warning } = useFormFieldContext(rest);\n\n  const showWarning = warning && !invalid;\n\n  if (referenceValues && valuesAreValid(referenceValues) === false) {\n    warnOnce('Slider', 'All reference values must be integers. Non-integer values will not be displayed.');\n  }\n\n  if (min >= max) {\n    warnOnce('Slider', 'The min value cannot be greater than the max value.');\n  }\n\n  if (step && step > max - min) {\n    warnOnce('Slider', 'The step value cannot be greater than the difference between the min and max.');\n  }\n\n  if (step && value !== undefined && (value - min) % step !== 0) {\n    warnOnce('Slider', 'Slider value must be a multiple of the step. The value will round to the nearest step value.');\n  }\n\n  const getValue = () => {\n    const stepIsValid = step && step < max - min && step > min;\n\n    if (value === undefined) {\n      // this is the default html input's fallback value\n      return max < min ? min : min + (max - min) / 2;\n    }\n\n    if (!step) {\n      return value;\n    }\n\n    // if the value is not a multiple of the step, then find the closest step\n    // and make that the value (this is also the native input behavior)\n    if (step && stepIsValid && (value - min) % step !== 0) {\n      const closest = getStepArray(step, [min, max]).reduce(function (prev, curr) {\n        return Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev;\n      });\n\n      return closest;\n    }\n\n    return value;\n  };\n\n  const sliderValue = getValue();\n  const percent = getPercent(Math.max(Math.min(sliderValue, max), min), [min, max]);\n\n  const getAriaValueText = () => {\n    if (valueFormatter && valueFormatter(sliderValue)) {\n      return valueFormatter(sliderValue);\n    }\n\n    if (valueFormatter && !valueFormatter(sliderValue)) {\n      const middleValues = referenceValues ? referenceValues : [];\n      const valueArray = [min, ...middleValues, sliderValue, max];\n      const prevAndNext = findLowerAndHigherValues(valueArray, sliderValue);\n      const previousValue = prevAndNext.lower ? valueFormatter(prevAndNext.lower) : valueFormatter(min);\n      const nextValue = prevAndNext.higher ? valueFormatter(prevAndNext.higher) : valueFormatter(max);\n      const value = sliderValue;\n\n      return i18n('i18nStrings.valueTextRange', i18nStrings?.valueTextRange(previousValue, value, nextValue), format =>\n        format({ value, previousValue, nextValue })\n      );\n    }\n\n    return undefined;\n  };\n\n  const thumbSize = readOnly ? THUMB_READONLY_SIZE : THUMB_SIZE;\n\n  return (\n    <div {...baseProps} ref={__internalRootRef} className={clsx(baseProps.className, styles.root)}>\n      {showTooltip && (\n        <Tooltip value={valueFormatter ? valueFormatter(sliderValue) : sliderValue} trackRef={handleRef} />\n      )}\n      <div\n        ref={handleRef}\n        className={clsx(styles['tooltip-thumb'], {\n          [styles.readonly]: readOnly,\n        })}\n        style={{\n          [customCssProps.sliderTooltipPosition]: `calc(${percent}% - ${thumbSize}px)`,\n        }}\n      />\n      <div className={styles.slider}>\n        <div\n          className={clsx(styles['slider-track'], {\n            [styles.disabled]: disabled,\n            [styles.readonly]: readOnly,\n          })}\n        />\n\n        {!hideFillLine && (\n          <div\n            className={clsx(styles['slider-range'], {\n              [styles.error]: invalid,\n              [styles.warning]: showWarning,\n              [styles.active]: isActive,\n              [styles['error-active']]: invalid && isActive,\n              [styles['warning-active']]: showWarning && isActive,\n              [styles.disabled]: disabled,\n              [styles.readonly]: readOnly,\n            })}\n            style={{ [customCssProps.sliderRangeInlineSize]: `${percent}%` }}\n          />\n        )}\n      </div>\n      {!!step && tickMarks && (\n        <SliderTickMarks\n          hideFillLine={hideFillLine}\n          disabled={disabled}\n          readOnly={readOnly}\n          invalid={invalid}\n          warning={warning}\n          isActive={isActive}\n          step={step}\n          min={min}\n          max={max}\n          value={sliderValue}\n        />\n      )}\n\n      <input\n        // we need to add this because input[type=range] isn't natively focusable in Safari.\n        tabIndex={0}\n        aria-label={ariaLabel}\n        // aria-labelledby has precedence over aria-label in accessible name calculation.\n        // When aria-label is provided for Input, it should override aria-labelledBy from form-field context.\n        // If both aria-label and aria-labelledby come from Input props, aria-labelledby will be used in accessible name\n        aria-labelledby={ariaLabel && !rest.ariaLabelledby ? undefined : ariaLabelledby}\n        // Slider labels, if present and something other than numbers, should be associated to the input with aria-describedby\n        aria-describedby={\n          valueFormatter ? (ariaDescribedby ? `${labelsId} ${ariaDescribedby}` : labelsId) : ariaDescribedby\n        }\n        aria-valuetext={getAriaValueText()}\n        aria-invalid={invalid ? 'true' : undefined}\n        aria-disabled={readOnly && !disabled ? 'true' : undefined}\n        id={controlId}\n        type=\"range\"\n        min={min}\n        max={max}\n        disabled={disabled}\n        onFocus={() => {\n          setShowTooltip(true);\n          setIsActive(true);\n        }}\n        onBlur={() => {\n          setShowTooltip(false);\n          setIsActive(false);\n        }}\n        onMouseEnter={() => {\n          setShowTooltip(true);\n        }}\n        onMouseLeave={() => {\n          setShowTooltip(false);\n        }}\n        onTouchStart={() => {\n          setShowTooltip(true);\n          setIsActive(true);\n        }}\n        onTouchEnd={() => {\n          setShowTooltip(false);\n          setIsActive(false);\n        }}\n        step={step}\n        value={sliderValue}\n        onChange={event => {\n          if (readOnly) {\n            return;\n          }\n\n          onChange && fireNonCancelableEvent(onChange, { value: Number(event.target.value) });\n        }}\n        className={clsx(styles.thumb, {\n          [styles.error]: invalid,\n          [styles.warning]: showWarning,\n          [styles.disabled]: disabled,\n          [styles.readonly]: readOnly,\n          [styles.min]: sliderValue <= min || max < min,\n          [styles.max]: sliderValue >= max && min < max,\n        })}\n      />\n\n      <SliderLabels\n        min={min}\n        max={max}\n        referenceValues={referenceValues}\n        valueFormatter={valueFormatter}\n        labelsId={labelsId}\n        ariaDescription={ariaDescription}\n      />\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { useMobile } from '../internal/hooks/use-mobile/index.js';\n\nimport styles from './styles.css.js';\n\ninterface SliderLabelProps {\n  min: number;\n  max: number;\n  referenceValues?: ReadonlyArray<number>;\n  valueFormatter?: (value: number) => string;\n  labelsId: string;\n  ariaDescription?: string;\n}\nexport default function SliderLabels({\n  min,\n  max,\n  referenceValues,\n  valueFormatter,\n  labelsId,\n  ariaDescription,\n}: SliderLabelProps) {\n  const isMobile = useMobile();\n  const MAX_LABEL_COUNT = isMobile ? 4 : 10;\n  const minDistance = (max - min) / MAX_LABEL_COUNT;\n\n  // Returns only values that have enough distance between them to show properly.\n  // We also remove non-integer values and any values outside of the slider range.\n  const getVisibleReferenceValues = () => {\n    if (!referenceValues || referenceValues.length === 0) {\n      return [];\n    }\n\n    const values: Array<number> = [];\n\n    let lastValue = min;\n    for (let i = 0; i <= referenceValues.length; i++) {\n      if (\n        referenceValues[i] > min &&\n        referenceValues[i] < max &&\n        Math.abs(referenceValues[i] - lastValue) >= minDistance &&\n        Math.abs(max - referenceValues[i]) >= minDistance &&\n        Number.isInteger(referenceValues[i])\n      ) {\n        values.push(referenceValues[i]);\n        lastValue = referenceValues[i];\n      }\n    }\n    return values;\n  };\n\n  function getLabelPosition(index: number) {\n    const colSpan = Math.floor(minDistance / 2);\n    const positionStart = index - colSpan;\n    const positionEnd = index + colSpan;\n\n    // We simplify label treatment if the range is less than the max label count.\n    // This is because we don't need to add extra grid columns for necessary width.\n    const hasSmallRange = max - min <= MAX_LABEL_COUNT;\n\n    if (hasSmallRange) {\n      return {\n        min: 1,\n        max: (max - min) * 2 - 1,\n        posStart: (index - min) * 2,\n        posEnd: (index - min) * 2,\n      };\n    }\n    const roundedHalfCol = Math.round(colSpan / 2);\n\n    return {\n      min: colSpan * 2 + roundedHalfCol,\n      max: (max - min - colSpan) * 2 - roundedHalfCol + 1,\n      // add one to center the label\n      posStart: (positionStart - min) * 2 + 1 + roundedHalfCol,\n      posEnd: (positionEnd - min) * 2 - roundedHalfCol,\n    };\n  }\n\n  return (\n    <>\n      <div\n        role=\"list\"\n        aria-hidden={!valueFormatter && !referenceValues ? 'true' : undefined}\n        className={clsx(styles.labels, {\n          [styles['labels-noref']]: getVisibleReferenceValues().length === 0,\n        })}\n        style={{\n          [customCssProps.sliderLabelCount]: getVisibleReferenceValues().length === 0 ? 2 : (max - min) * 2,\n        }}\n        id={!ariaDescription ? labelsId : undefined}\n      >\n        <span\n          role=\"listitem\"\n          className={clsx(styles.label, styles['labels-min'])}\n          style={{\n            [customCssProps.sliderMinEnd]: getLabelPosition(0).min,\n          }}\n        >\n          {valueFormatter ? valueFormatter(min) : min}\n        </span>\n        {getVisibleReferenceValues().map(step => {\n          return (\n            <span\n              role=\"listitem\"\n              key={step}\n              style={{\n                [customCssProps.sliderReferenceColumn]: getLabelPosition(step).posStart,\n                [customCssProps.sliderNextReferenceColumn]: getLabelPosition(step).posEnd,\n              }}\n              className={clsx(styles.label, styles['labels-reference'])}\n            >\n              {valueFormatter ? valueFormatter(step) : step}\n            </span>\n          );\n        })}\n        <span\n          role=\"listitem\"\n          className={clsx(styles.label, styles['labels-max'])}\n          style={{\n            [customCssProps.sliderMaxStart]: !referenceValues ? 2 : getLabelPosition(0).max,\n          }}\n        >\n          {valueFormatter ? valueFormatter(max) : max}\n        </span>\n      </div>\n      {ariaDescription && (\n        <div className={styles['labels-aria-description']} id={labelsId}>\n          {ariaDescription}\n        </div>\n      )}\n    </>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_pcgz5_3bv9o_153\",\n  \"slider\": \"awsui_slider_pcgz5_3bv9o_190\",\n  \"slider-track\": \"awsui_slider-track_pcgz5_3bv9o_194\",\n  \"slider-range\": \"awsui_slider-range_pcgz5_3bv9o_194\",\n  \"disabled\": \"awsui_disabled_pcgz5_3bv9o_209\",\n  \"readonly\": \"awsui_readonly_pcgz5_3bv9o_213\",\n  \"error\": \"awsui_error_pcgz5_3bv9o_222\",\n  \"warning\": \"awsui_warning_pcgz5_3bv9o_225\",\n  \"active\": \"awsui_active_pcgz5_3bv9o_228\",\n  \"error-active\": \"awsui_error-active_pcgz5_3bv9o_231\",\n  \"warning-active\": \"awsui_warning-active_pcgz5_3bv9o_234\",\n  \"labels\": \"awsui_labels_pcgz5_3bv9o_245\",\n  \"labels-noref\": \"awsui_labels-noref_pcgz5_3bv9o_251\",\n  \"labels-reference\": \"awsui_labels-reference_pcgz5_3bv9o_254\",\n  \"labels-min\": \"awsui_labels-min_pcgz5_3bv9o_261\",\n  \"labels-max\": \"awsui_labels-max_pcgz5_3bv9o_267\",\n  \"labels-aria-description\": \"awsui_labels-aria-description_pcgz5_3bv9o_275\",\n  \"ticks\": \"awsui_ticks_pcgz5_3bv9o_293\",\n  \"ticks-wrapper\": \"awsui_ticks-wrapper_pcgz5_3bv9o_299\",\n  \"tick\": \"awsui_tick_pcgz5_3bv9o_293\",\n  \"middle\": \"awsui_middle_pcgz5_3bv9o_314\",\n  \"filled\": \"awsui_filled_pcgz5_3bv9o_317\",\n  \"tooltip-thumb\": \"awsui_tooltip-thumb_pcgz5_3bv9o_345\",\n  \"thumb\": \"awsui_thumb_pcgz5_3bv9o_358\",\n  \"min\": \"awsui_min_pcgz5_3bv9o_394\",\n  \"max\": \"awsui_max_pcgz5_3bv9o_397\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { getStepArray } from './utils.js';\n\nimport styles from './styles.css.js';\n\ninterface SliderTicksProps {\n  hideFillLine?: boolean;\n  value: number;\n  isActive: boolean;\n  invalid?: boolean;\n  warning?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  min: number;\n  max: number;\n  step: number;\n}\n\ninterface SliderTickMarkProps extends SliderTicksProps {\n  type: 'min' | 'max' | 'step';\n}\n\nfunction TickMark(props: SliderTickMarkProps) {\n  const { hideFillLine, value, isActive, invalid, warning, disabled, type, min, max, step, readOnly } = props;\n\n  const showWarning = warning && !invalid;\n\n  const getType = () => {\n    if (type === 'min') {\n      return min;\n    }\n    if (type === 'max') {\n      return max;\n    }\n    return step;\n  };\n\n  return (\n    <div\n      className={clsx(styles.tick, {\n        [styles.filled]: !hideFillLine && value > getType(),\n        [styles.active]: !hideFillLine && isActive && value > getType(),\n        [styles.error]: invalid && !hideFillLine && value > getType(),\n        [styles.warning]: showWarning && !hideFillLine && value > getType(),\n        [styles['error-active']]: invalid && isActive && !hideFillLine && value > getType(),\n        [styles['warning-active']]: showWarning && isActive && !hideFillLine && value > getType(),\n        [styles.disabled]: disabled,\n        [styles.readonly]: readOnly,\n        [styles.middle]: type === 'step',\n      })}\n    />\n  );\n}\n\nexport default function SliderTickMarks(props: SliderTicksProps) {\n  const { min, max, step } = props;\n\n  return (\n    <div className={styles['ticks-wrapper']}>\n      <TickMark {...props} type=\"min\" />\n      <div\n        className={styles.ticks}\n        style={{\n          [customCssProps.sliderTickCount]: Math.round((max - min) / step),\n        }}\n      >\n        {getStepArray(step, [min, max]).map((step, index) => (\n          <TickMark {...props} type=\"step\" step={step} key={`step-${index}`} />\n        ))}\n      </div>\n      <TickMark {...props} type=\"max\" />\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function getPercent(value: number, range: [min: number, max: number]) {\n  return ((value - range[0]) / (range[1] - range[0])) * 100;\n}\n\nfunction countDecimals(value: number) {\n  if (Math.floor(value) === value) {\n    return 0;\n  }\n\n  const str = Math.abs(value).toString();\n  // very small numbers, e.g. 1e-9\n  if (str.indexOf('-') !== -1) {\n    return parseInt(str.split('-')[1], 10) || 0;\n  }\n  return str.split('.')[1]?.length || 0;\n}\n\nexport const getStepArray = (step: number, [min, max]: [min: number, max: number]) => {\n  const steps = [min];\n\n  // JS struggles with rounding errors when using decimals, so include a multiplier\n  // to make step calculations integer-based\n  const multiplier = Math.pow(10, countDecimals(step));\n\n  let currentStep = min;\n\n  while (currentStep < max) {\n    currentStep = (multiplier * currentStep + multiplier * step) / multiplier;\n    if (currentStep <= max) {\n      steps.push(currentStep);\n    }\n  }\n\n  return steps;\n};\n\nexport const findLowerAndHigherValues = <T extends number>(\n  array: ReadonlyArray<T>,\n  value: T\n): { lower: undefined | T; higher: undefined | T } => {\n  let sortedArray = [...array];\n  sortedArray = sortedArray.sort((a, b) => a - b);\n\n  const index = sortedArray.indexOf(value) || 0;\n  const lower = sortedArray[index - 1] || undefined;\n  const higher = sortedArray[index + 1] || undefined;\n\n  return { lower, higher };\n};\n\nexport const valuesAreValid = (referenceValues: ReadonlyArray<number>) => {\n  const valuesWithDecimals = referenceValues?.filter(value => !Number.isInteger(value));\n\n  return valuesWithDecimals.length === 0;\n};\n\nexport const THUMB_SIZE = 16;\nexport const THUMB_READONLY_SIZE = 12;\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "React", "import_react", "React", "step", "value", "React", "React"]
}
