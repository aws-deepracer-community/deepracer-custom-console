import {
  getFirstFocusable,
  getLastFocusable
} from "./chunk-OD24TJP5.js";
import {
  isDevelopment
} from "./chunk-2STP5MNB.js";
import {
  useFormFieldContext
} from "./chunk-42BEG66H.js";
import {
  useForwardFocus,
  useSingleTabStopNavigation
} from "./chunk-7I72EAPF.js";
import {
  fireNonCancelableEvent
} from "./chunk-T3BYYNEM.js";
import {
  calculateOnce,
  useUniqueId
} from "./chunk-MKRUABPM.js";
import {
  useMergeRefs
} from "./chunk-YL662TD3.js";
import {
  __rest,
  clsx_m_default,
  getBaseProps,
  useVisualRefresh,
  warnOnce
} from "./chunk-3NFHZQPK.js";
import {
  require_react_dom
} from "./chunk-HKXRFMQU.js";
import {
  require_react
} from "./chunk-WHMHD7EJ.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@cloudscape-design/components/internal/context/link-default-variant-context.js
var import_react = __toESM(require_react());
var defaultValue = {
  defaultVariant: "secondary"
};
var LinkDefaultVariantContext = (0, import_react.createContext)(defaultValue);

// node_modules/@cloudscape-design/components/internal/components/focus-lock/index.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/tab-trap/index.js
var import_react2 = __toESM(require_react());
function TabTrap({ focusNextCallback, disabled = false }) {
  return import_react2.default.createElement("div", { tabIndex: disabled ? -1 : 0, onFocus: focusNextCallback });
}

// node_modules/@cloudscape-design/components/internal/components/focus-lock/index.js
function FocusLock({ className, disabled, autoFocus, restoreFocus, children }, ref) {
  const returnFocusToRef = (0, import_react3.useRef)(null);
  const containerRef = (0, import_react3.useRef)(null);
  const focusFirst = () => {
    var _a;
    if (containerRef.current) {
      (_a = getFirstFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();
    }
  };
  const focusLast = () => {
    var _a;
    if (containerRef.current) {
      (_a = getLastFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();
    }
  };
  (0, import_react3.useEffect)(() => {
    if (autoFocus && !disabled) {
      returnFocusToRef.current = document.activeElement;
      focusFirst();
    }
  }, [autoFocus, disabled]);
  const [previouslyDisabled, setPreviouslyDisabled] = (0, import_react3.useState)(!!disabled);
  (0, import_react3.useEffect)(() => {
    var _a;
    if (previouslyDisabled !== !!disabled) {
      setPreviouslyDisabled(!!disabled);
      if (restoreFocus && disabled) {
        (_a = returnFocusToRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        returnFocusToRef.current = null;
      }
    }
  }, [previouslyDisabled, disabled, restoreFocus]);
  const restoreFocusHandler = (0, import_react3.useCallback)((elem) => {
    var _a;
    if (elem === null && restoreFocus) {
      (_a = returnFocusToRef.current) === null || _a === void 0 ? void 0 : _a.focus();
      returnFocusToRef.current = null;
    }
  }, [restoreFocus]);
  (0, import_react3.useImperativeHandle)(ref, () => ({ focusFirst }));
  const mergedRef = useMergeRefs(containerRef, restoreFocusHandler);
  return import_react3.default.createElement(
    import_react3.default.Fragment,
    null,
    import_react3.default.createElement(TabTrap, { disabled, focusNextCallback: focusLast }),
    import_react3.default.createElement("div", { className, ref: mergedRef }, children),
    import_react3.default.createElement(TabTrap, { disabled, focusNextCallback: focusFirst })
  );
}
var focus_lock_default = import_react3.default.forwardRef(FocusLock);

// node_modules/@cloudscape-design/components/internal/components/portal/index.js
var import_react4 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
function manageDefaultContainer(setState) {
  const newContainer = document.createElement("div");
  document.body.appendChild(newContainer);
  setState(newContainer);
  return () => {
    document.body.removeChild(newContainer);
  };
}
function manageAsyncContainer(getContainer, removeContainer, setState) {
  let newContainer;
  getContainer().then((container) => {
    newContainer = container;
    setState(container);
  }, (error) => {
    console.warn("[AwsUi] [portal]: failed to load portal root", error);
  });
  return () => {
    removeContainer(newContainer);
  };
}
function Portal({ container, getContainer, removeContainer, children }) {
  const [activeContainer, setActiveContainer] = (0, import_react4.useState)(container !== null && container !== void 0 ? container : null);
  (0, import_react4.useLayoutEffect)(() => {
    if (container) {
      setActiveContainer(container);
      return;
    }
    if (isDevelopment) {
      if (getContainer && !removeContainer) {
        warnOnce("portal", "`removeContainer` is required when `getContainer` is provided");
      }
      if (!getContainer && removeContainer) {
        warnOnce("portal", "`getContainer` is required when `removeContainer` is provided");
      }
    }
    if (getContainer && removeContainer) {
      return manageAsyncContainer(getContainer, removeContainer, setActiveContainer);
    }
    return manageDefaultContainer(setActiveContainer);
  }, [container, getContainer, removeContainer]);
  return activeContainer && (0, import_react_dom.createPortal)(children, activeContainer);
}

// node_modules/@cloudscape-design/components/internal/context/modal-context.js
var import_react5 = __toESM(require_react());
var ModalContext = (0, import_react5.createContext)({ isInModal: false });
var useModalContext = () => {
  const modalContext = (0, import_react5.useContext)(ModalContext);
  return modalContext;
};

// node_modules/@cloudscape-design/components/checkbox/internal.js
var import_react8 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js
var import_react6 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.scoped.css";
var styles_css_default = {
  "content": "awsui_content_1wepg_11g7b_99",
  "description": "awsui_description_1wepg_11g7b_100",
  "label": "awsui_label_1wepg_11g7b_101",
  "outline": "awsui_outline_1wepg_11g7b_109",
  "show-outline": "awsui_show-outline_1wepg_11g7b_112",
  "native-input": "awsui_native-input_1wepg_11g7b_116",
  "wrapper": "awsui_wrapper_1wepg_11g7b_120",
  "label-wrapper": "awsui_label-wrapper_1wepg_11g7b_126",
  "empty-content": "awsui_empty-content_1wepg_11g7b_137",
  "description-bottom-padding": "awsui_description-bottom-padding_1wepg_11g7b_147",
  "label-disabled": "awsui_label-disabled_1wepg_11g7b_155",
  "description-disabled": "awsui_description-disabled_1wepg_11g7b_156",
  "control": "awsui_control_1wepg_11g7b_161"
};

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js
function joinString(values) {
  return values.filter((value) => !!value).join(" ");
}
function AbstractSwitch(_a) {
  var { controlId, controlClassName, outlineClassName, showOutline, disabled, nativeControl, styledControl, label, description, descriptionBottomPadding, ariaLabel, ariaLabelledby, ariaDescribedby, ariaControls, onClick, __internalRootRef } = _a, rest = __rest(_a, ["controlId", "controlClassName", "outlineClassName", "showOutline", "disabled", "nativeControl", "styledControl", "label", "description", "descriptionBottomPadding", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "ariaControls", "onClick", "__internalRootRef"]);
  const uniqueId = useUniqueId();
  const id = controlId || uniqueId;
  const labelId = `${id}-label`;
  const descriptionId = `${id}-description`;
  const ariaLabelledByIds = [];
  if (label && !ariaLabel) {
    ariaLabelledByIds.push(labelId);
  }
  if (ariaLabelledby) {
    ariaLabelledByIds.push(ariaLabelledby);
  }
  const ariaDescriptions = [];
  if (ariaDescribedby) {
    ariaDescriptions.push(ariaDescribedby);
  }
  if (description) {
    ariaDescriptions.push(descriptionId);
  }
  return import_react6.default.createElement(
    "span",
    Object.assign({}, rest, { className: clsx_m_default(styles_css_default.wrapper, rest.className), ref: __internalRootRef }),
    import_react6.default.createElement(
      "span",
      { className: styles_css_default["label-wrapper"], "aria-disabled": disabled ? "true" : void 0, onClick: disabled ? void 0 : onClick },
      import_react6.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default.control, controlClassName) },
        styledControl,
        nativeControl({
          id,
          disabled,
          className: styles_css_default["native-input"],
          "aria-describedby": ariaDescriptions.length ? joinString(ariaDescriptions) : void 0,
          "aria-labelledby": ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : void 0,
          "aria-label": ariaLabel,
          "aria-controls": ariaControls
        }),
        import_react6.default.createElement("span", { className: clsx_m_default(styles_css_default.outline, outlineClassName, showOutline && styles_css_default["show-outline"]) })
      ),
      import_react6.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default.content, !label && !description && styles_css_default["empty-content"]) },
        label && import_react6.default.createElement("span", { id: labelId, className: clsx_m_default(styles_css_default.label, { [styles_css_default["label-disabled"]]: disabled }) }, label),
        description && import_react6.default.createElement("span", { id: descriptionId, className: clsx_m_default(styles_css_default.description, {
          [styles_css_default["description-disabled"]]: disabled,
          [styles_css_default["description-bottom-padding"]]: descriptionBottomPadding
        }) }, description)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/checkbox/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/checkbox/styles.scoped.css";
var styles_css_default2 = {
  "root": "awsui_root_k2y2q_16s24_99",
  "checkbox-control": "awsui_checkbox-control_k2y2q_16s24_135",
  "outline": "awsui_outline_k2y2q_16s24_143"
};

// node_modules/@cloudscape-design/components/internal/components/checkbox-icon/index.js
var import_react7 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/checkbox-icon/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/internal/components/checkbox-icon/styles.scoped.css";
var styles_css_default3 = {
  "root": "awsui_root_1fn7j_ayb8r_99",
  "styled-box": "awsui_styled-box_1fn7j_ayb8r_106",
  "styled-box-checked": "awsui_styled-box-checked_1fn7j_ayb8r_112",
  "styled-box-indeterminate": "awsui_styled-box-indeterminate_1fn7j_ayb8r_112",
  "styled-box-disabled": "awsui_styled-box-disabled_1fn7j_ayb8r_116",
  "styled-line": "awsui_styled-line_1fn7j_ayb8r_130",
  "styled-line-disabled": "awsui_styled-line-disabled_1fn7j_ayb8r_135"
};

// node_modules/@cloudscape-design/components/internal/components/checkbox-icon/index.js
var dimensionsByTheme = {
  default: {
    viewBox: "0 0 14 14",
    indeterminate: "2.5,7 11.5,7",
    checked: "2.5,7 6,10 11,3",
    xy: 0.5,
    r: 1.5,
    size: 13
  },
  refresh: {
    viewBox: "0 0 16 16",
    indeterminate: "3.5,8 12.5,8",
    checked: "3.5,8 7,11 12,4",
    xy: 1,
    r: 2,
    size: 14
  }
};
var CheckboxIcon = (_a) => {
  var { checked, indeterminate, disabled = false } = _a, restProps = __rest(_a, ["checked", "indeterminate", "disabled"]);
  const baseProps = getBaseProps(restProps);
  const theme = useVisualRefresh() ? "refresh" : "default";
  const dimensions = dimensionsByTheme[theme];
  return import_react7.default.createElement(
    "svg",
    Object.assign({ className: styles_css_default3.root, viewBox: dimensions.viewBox, "aria-hidden": "true", focusable: "false" }, baseProps),
    import_react7.default.createElement("rect", { className: clsx_m_default(styles_css_default3["styled-box"], {
      [styles_css_default3["styled-box-checked"]]: checked,
      [styles_css_default3["styled-box-indeterminate"]]: indeterminate,
      [styles_css_default3["styled-box-disabled"]]: disabled
    }), x: dimensions.xy, y: dimensions.xy, rx: dimensions.r, ry: dimensions.r, width: dimensions.size, height: dimensions.size }),
    checked || indeterminate ? import_react7.default.createElement("polyline", { className: clsx_m_default(styles_css_default3["styled-line"], { [styles_css_default3["styled-line-disabled"]]: disabled }), points: indeterminate ? dimensions.indeterminate : dimensions.checked }) : null
  );
};
var checkbox_icon_default = CheckboxIcon;

// node_modules/@cloudscape-design/components/checkbox/internal.js
var InternalCheckbox = import_react8.default.forwardRef((_a, ref) => {
  var { controlId, name, checked, disabled, ariaRequired, indeterminate, children, description, ariaLabel, onFocus, onBlur, onChange, tabIndex: explicitTabIndex, showOutline, ariaControls, __internalRootRef } = _a, rest = __rest(_a, ["controlId", "name", "checked", "disabled", "ariaRequired", "indeterminate", "children", "description", "ariaLabel", "onFocus", "onBlur", "onChange", "tabIndex", "showOutline", "ariaControls", "__internalRootRef"]);
  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);
  const baseProps = getBaseProps(rest);
  const checkboxRef = (0, import_react8.useRef)(null);
  useForwardFocus(ref, checkboxRef);
  (0, import_react8.useEffect)(() => {
    if (checkboxRef.current) {
      checkboxRef.current.indeterminate = Boolean(indeterminate);
    }
  });
  const { tabIndex } = useSingleTabStopNavigation(checkboxRef, { tabIndex: explicitTabIndex });
  return import_react8.default.createElement(AbstractSwitch, Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default2.root, baseProps.className), controlClassName: styles_css_default2["checkbox-control"], outlineClassName: styles_css_default2.outline, controlId, disabled, label: children, description, descriptionBottomPadding: true, ariaLabel, ariaLabelledby, ariaDescribedby, ariaControls, showOutline, nativeControl: (nativeControlProps) => import_react8.default.createElement("input", Object.assign({}, nativeControlProps, {
    ref: checkboxRef,
    type: "checkbox",
    checked,
    name,
    "aria-required": ariaRequired ? "true" : void 0,
    tabIndex,
    onFocus: () => fireNonCancelableEvent(onFocus),
    onBlur: () => fireNonCancelableEvent(onBlur),
    // empty handler to suppress React controllability warning
    onChange: () => {
    }
  })), onClick: () => {
    var _a2;
    (_a2 = checkboxRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    fireNonCancelableEvent(
      onChange,
      // for deterministic transitions "indeterminate" -> "checked" -> "unchecked"
      indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false }
    );
  }, styledControl: import_react8.default.createElement(checkbox_icon_default, { checked, indeterminate, disabled }), __internalRootRef }));
});
var internal_default = InternalCheckbox;

// node_modules/@cloudscape-design/components/radio-group/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/radio-group/styles.scoped.css";
var styles_css_default4 = {
  "root": "awsui_root_1mabk_kpa3a_99",
  "radio": "awsui_radio_1mabk_kpa3a_135",
  "radio--has-description": "awsui_radio--has-description_1mabk_kpa3a_143",
  "radio-control": "awsui_radio-control_1mabk_kpa3a_147",
  "outline": "awsui_outline_1mabk_kpa3a_155",
  "styled-circle-border": "awsui_styled-circle-border_1mabk_kpa3a_177",
  "styled-circle-disabled": "awsui_styled-circle-disabled_1mabk_kpa3a_181",
  "styled-circle-fill": "awsui_styled-circle-fill_1mabk_kpa3a_186",
  "styled-circle-checked": "awsui_styled-circle-checked_1mabk_kpa3a_192"
};

// node_modules/@cloudscape-design/components/radio-group/radio-button.js
var import_react9 = __toESM(require_react());
var radio_button_default = import_react9.default.forwardRef(function RadioButton({ name, label, value, checked, description, disabled, controlId, onChange }, ref) {
  const isVisualRefresh = useVisualRefresh();
  const radioButtonRef = (0, import_react9.useRef)(null);
  const mergedRefs = useMergeRefs(radioButtonRef, ref);
  const { tabIndex } = useSingleTabStopNavigation(radioButtonRef);
  return import_react9.default.createElement(AbstractSwitch, { className: clsx_m_default(styles_css_default4.radio, description && styles_css_default4["radio--has-description"]), controlClassName: styles_css_default4["radio-control"], outlineClassName: styles_css_default4.outline, label, description, disabled, controlId, nativeControl: (nativeControlProps) => import_react9.default.createElement("input", Object.assign({}, nativeControlProps, {
    tabIndex,
    type: "radio",
    ref: mergedRefs,
    name,
    value,
    checked,
    // empty handler to suppress React controllability warning
    onChange: () => {
    }
  })), onClick: () => {
    var _a;
    (_a = radioButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    if (checked) {
      return;
    }
    fireNonCancelableEvent(onChange, { value });
  }, styledControl: import_react9.default.createElement(
    "svg",
    { viewBox: "0 0 100 100", focusable: "false", "aria-hidden": "true" },
    import_react9.default.createElement("circle", { className: clsx_m_default(styles_css_default4["styled-circle-border"], { [styles_css_default4["styled-circle-disabled"]]: disabled }), strokeWidth: isVisualRefresh ? 12 : 8, cx: 50, cy: 50, r: isVisualRefresh ? 44 : 46 }),
    import_react9.default.createElement("circle", { className: clsx_m_default(styles_css_default4["styled-circle-fill"], {
      [styles_css_default4["styled-circle-disabled"]]: disabled,
      [styles_css_default4["styled-circle-checked"]]: checked
    }), strokeWidth: 30, cx: 50, cy: 50, r: 35 })
  ) });
});

// node_modules/@cloudscape-design/components/internal/utils/browser-scrollbar-size.js
var browserScrollbarSize = calculateOnce(() => {
  if (typeof document === "undefined") {
    return { width: 0, height: 0 };
  }
  const scrollDiv = document.createElement("div");
  scrollDiv.style.overflow = "scroll";
  scrollDiv.style.height = "100px";
  scrollDiv.style.width = "100px";
  scrollDiv.style.position = "absolute";
  scrollDiv.style.top = "-9999px";
  scrollDiv.style.left = "-9999px";
  document.body.appendChild(scrollDiv);
  const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  const height = scrollDiv.offsetHeight - scrollDiv.clientHeight;
  document.body.removeChild(scrollDiv);
  return { width, height };
});

export {
  defaultValue,
  LinkDefaultVariantContext,
  TabTrap,
  focus_lock_default,
  Portal,
  checkbox_icon_default,
  ModalContext,
  useModalContext,
  AbstractSwitch,
  internal_default,
  styles_css_default4 as styles_css_default,
  radio_button_default,
  browserScrollbarSize
};
//# sourceMappingURL=chunk-U74SLQDB.js.map
