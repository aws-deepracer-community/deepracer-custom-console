{
  "version": 3,
  "sources": ["../../src/table/index.tsx", "../../src/table/internal.tsx", "../../src/internal/components/visual-context/index.tsx", "../../src/container/internal.tsx", "../../src/internal/utils/global-flags.ts", "../../src/internal/utils/content-header-utils.ts", "../../src/internal/hooks/use-dynamic-overlap/index.ts", "../../src/internal/context/dynamic-overlap-context.ts", "../../@cloudscape-design/components/container/styles.css.js", "../../src/table/tools-header.tsx", "../../@cloudscape-design/components/table/styles.css.js", "../../src/table/thead.tsx", "../../src/table/selection/selection-control.tsx", "../../@cloudscape-design/components/table/selection/styles.css.js", "../../src/table/utils.ts", "../../src/table/selection/utils.ts", "../../src/table/selection/use-selection-focus-move.ts", "../../src/table/selection/use-selection.ts", "../../src/table/header-cell/index.tsx", "../../src/table/header-cell/utils.ts", "../../@cloudscape-design/components/table/header-cell/styles.css.js", "../../src/table/resizer/index.tsx", "../../@cloudscape-design/components/table/resizer/styles.css.js", "../../src/table/use-column-widths.tsx", "../../src/table/column-widths-utils.ts", "../../src/table/resizer/resizer-lookup.ts", "../../src/table/header-cell/th-element.tsx", "../../src/table/sticky-columns/use-sticky-columns.ts", "../../src/area-chart/async-store/index.ts", "../../src/internal/hooks/use-previous/index.ts", "../../src/table/sticky-columns/utils.ts", "../../src/table/table-role/table-role-helper.ts", "../../src/table/table-role/grid-navigation.tsx", "../../src/table/table-role/utils.ts", "../../@cloudscape-design/components/table/body-cell/styles.css.js", "../../src/table/body-cell/index.tsx", "../../src/table/body-cell/td-element.tsx", "../../src/table/expandable-rows/expand-toggle-button.tsx", "../../@cloudscape-design/components/table/expandable-rows/styles.css.js", "../../src/table/body-cell/inline-editor.tsx", "../../src/table/body-cell/click-away.tsx", "../../src/table/body-cell/disabled-inline-editor.tsx", "../../src/button-dropdown/utils/use-hidden-description.tsx", "../../src/popover/container.tsx", "../../@cloudscape-design/components/popover/styles.css.js", "../../src/popover/use-popover-position.ts", "../../src/popover/utils/positions.ts", "../../src/internal/direction.ts", "../../src/popover/body.tsx", "../../src/internal/hooks/use-portal-mode-classes/index.ts", "../../src/popover/arrow.tsx", "../../src/table/use-row-events.ts", "../../src/internal/hooks/use-scroll-sync/index.ts", "../../src/table/sticky-header.tsx", "../../src/table/use-sticky-header.ts", "../../src/table/sticky-scrolling.ts", "../../src/internal/hooks/use-mouse-down-target.ts", "../../src/table/use-table-focus-navigation.ts", "../../src/table/sticky-scrollbar/sticky-scrollbar.tsx", "../../src/table/sticky-scrollbar/use-sticky-scrollbar.ts", "../../@cloudscape-design/components/table/sticky-scrollbar/styles.css.js", "../../src/table/use-cell-editing.ts", "../../src/table/no-data-cell.tsx", "../../src/status-indicator/internal.tsx", "../../@cloudscape-design/components/status-indicator/styles.css.js", "../../src/table/expandable-rows/expandable-rows-utils.ts", "../../src/internal/analytics/components/analytics-funnel.tsx"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalTable, { InternalTableAsSubstep } from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\n\nexport { TableProps };\nconst Table = React.forwardRef(\n  <T,>(\n    { items = [], selectedItems = [], variant = 'container', contentDensity = 'comfortable', ...props }: TableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Table', {\n      props: {\n        contentDensity,\n        resizableColumns: props.resizableColumns,\n        selectionType: props.selectionType,\n        stickyHeader: props.stickyHeader,\n        stripedRows: props.stripedRows,\n        variant,\n        wrapLines: props.wrapLines,\n        enableKeyboardNavigation: props.enableKeyboardNavigation,\n      },\n      metadata: {\n        expandableRows: !!props.expandableRows,\n      },\n    });\n\n    const tableProps: Parameters<typeof InternalTable<T>>[0] = {\n      items,\n      selectedItems,\n      variant,\n      contentDensity,\n      ...props,\n      ...baseComponentProps,\n      ref,\n    };\n\n    if (variant === 'borderless' || variant === 'embedded') {\n      return <InternalTable {...tableProps} />;\n    }\n\n    return (\n      <AnalyticsFunnelSubStep>\n        <InternalTableAsSubstep {...tableProps} />\n      </AnalyticsFunnelSubStep>\n    );\n  }\n) as TableForwardRefType;\n\napplyDisplayName(Table, 'Table');\nexport default Table;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport InternalContainer, { InternalContainerProps } from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from './tools-header';\nimport Thead, { TheadProps } from './thead';\nimport { TableBodyCell } from './body-cell';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\nimport { useRowEvents } from './use-row-events';\nimport { SelectionControl, focusMarkers, useSelectionFocusMove, useSelection } from './selection';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development';\nimport { ColumnWidthDefinition, ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { ResizeTracker } from './resizer';\nimport styles from './styles.css.js';\nimport headerStyles from '../header/styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport LiveRegion from '../internal/components/live-region';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { SomeRequired } from '../internal/types';\nimport { TableTdElement } from './body-cell/td-element';\nimport { useStickyColumns } from './sticky-columns';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport {\n  GridNavigationProvider,\n  TableRole,\n  getTableRoleProps,\n  getTableRowRoleProps,\n  getTableWrapperRoleProps,\n} from './table-role';\nimport { useCellEditing } from './use-cell-editing';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { NoDataCell } from './no-data-cell';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { getContentHeaderClassName } from '../internal/utils/content-header-utils';\nimport { useExpandableTableProps } from './expandable-rows/expandable-rows-utils';\n\nconst GRID_NAVIGATION_PAGE_SIZE = 10;\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\n\ntype InternalTableProps<T> = SomeRequired<TableProps<T>, 'items' | 'selectedItems' | 'variant'> &\n  InternalBaseComponentProps & {\n    __funnelSubStepProps?: InternalContainerProps['__funnelSubStepProps'];\n  };\n\nexport const InternalTableAsSubstep = React.forwardRef(\n  <T,>(props: InternalTableProps<T>, ref: React.Ref<TableProps.Ref>) => {\n    const { funnelSubStepProps } = useFunnelSubStep();\n\n    const tableProps: InternalTableProps<T> = {\n      ...props,\n      __funnelSubStepProps: funnelSubStepProps,\n    };\n\n    return <InternalTable {...tableProps} ref={ref} />;\n  }\n) as TableForwardRefType;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      enableKeyboardNavigation,\n      expandableRows,\n      __funnelSubStepProps,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    // Keyboard navigation defaults to `true` for tables with expandable rows.\n    if (expandableRows && enableKeyboardNavigation === undefined) {\n      enableKeyboardNavigation = true;\n    }\n\n    const baseProps = getBaseProps(rest);\n    stickyHeader = stickyHeader && supportsStickyPosition();\n    const isMobile = useMobile();\n\n    const { isExpandable, allItems, getExpandableItemProps } = useExpandableTableProps({\n      items,\n      expandableRows,\n      trackBy,\n      ariaLabels,\n    });\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const wrapperMeasureRefObject = useRef(null);\n    const wrapperMeasureMergedRef = useMergeRefs(wrapperMeasureRef, wrapperMeasureRefObject);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const tableRefObject = useRef(null);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n    const { cancelEdit, ...cellEditing } = useCellEditing({ onCancel: onEditCancel, onSubmit: submitEdit });\n\n    usePerformanceMarks(\n      'table',\n      true,\n      tableRefObject,\n      () => {\n        const headerText =\n          toolsHeaderWrapper.current?.querySelector<HTMLElement>(`.${headerStyles['heading-text']}`)?.innerText ??\n          toolsHeaderWrapper.current?.innerText;\n\n        return {\n          loading: loading ?? false,\n          header: headerText,\n        };\n      },\n      [loading]\n    );\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined),\n        cancelEdit,\n      }),\n      [cancelEdit]\n    );\n\n    const wrapperRefObject = useRef(null);\n    const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useSelectionFocusMove(selectionType, allItems.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n\n    const visibleColumnDefinitions = getVisibleColumnDefinitions({\n      columnDefinitions,\n      columnDisplay,\n      visibleColumns,\n    });\n\n    const { isItemSelected, getSelectAllProps, getItemSelectionProps, updateShiftToggle } = useSelection({\n      items: allItems,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      loading,\n    });\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isVisualRefresh = useVisualRefresh();\n    const computedVariant = isVisualRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n      ? 'container'\n      : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n    const hasSelection = !!selectionType;\n    const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n    const hasFooter = !!footer || hasFooterPagination;\n\n    const headerIdRef = useRef<string | undefined>(undefined);\n    const isLabelledByHeader = !ariaLabels?.tableLabel && !!header;\n    const setHeaderRef = useCallback((id: string) => {\n      headerIdRef.current = id;\n    }, []);\n\n    const visibleColumnWidthsWithSelection: ColumnWidthDefinition[] = [];\n    const visibleColumnIdsWithSelection: PropertyKey[] = [];\n    if (hasSelection) {\n      visibleColumnWidthsWithSelection.push({ id: selectionColumnId, width: SELECTION_COLUMN_WIDTH });\n      visibleColumnIdsWithSelection.push(selectionColumnId);\n    }\n    for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n      const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n      visibleColumnWidthsWithSelection.push({ ...visibleColumnDefinitions[columnIndex], id: columnId });\n      visibleColumnIdsWithSelection.push(columnId);\n    }\n\n    const stickyState = useStickyColumns({\n      visibleColumns: visibleColumnIdsWithSelection,\n      stickyColumnsFirst: (stickyColumns?.first ?? 0) + (stickyColumns?.first && hasSelection ? 1 : 0),\n      stickyColumnsLast: stickyColumns?.last || 0,\n    });\n\n    const hasStickyColumns = !!((stickyColumns?.first ?? 0) + (stickyColumns?.last ?? 0) > 0);\n    const hasEditableCells = !!columnDefinitions.find(col => col.editConfig);\n\n    let tableRole: TableRole = 'table';\n    if (isExpandable) {\n      tableRole = 'treegrid';\n    } else if (enableKeyboardNavigation) {\n      tableRole = 'grid';\n    } else if (hasEditableCells) {\n      tableRole = 'grid-default';\n    }\n\n    const theadProps: TheadProps = {\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) =>\n            newWidth.get(getColumnKey(column, index)) || (column.width as number) || DEFAULT_COLUMN_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n      singleSelectionHeaderAriaLabel: ariaLabels?.selectionGroupLabel,\n      resizerRoleDescription: ariaLabels?.resizerRoleDescription,\n      stripedRows,\n      stickyState,\n      selectionColumnId,\n      tableRole,\n      isExpandable,\n    };\n\n    const wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n\n    const wrapperProps = getTableWrapperRoleProps({\n      tableRole,\n      isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n      ariaLabel: ariaLabels?.tableLabel,\n    });\n\n    const getMouseDownTarget = useMouseDownTarget();\n\n    const hasDynamicHeight = computedVariant === 'full-page';\n    const overlapElement = useDynamicOverlap({ disabled: !hasDynamicHeight });\n    useTableFocusNavigation({\n      enableKeyboardNavigation,\n      selectionType,\n      tableRoot: tableRefObject,\n      columnDefinitions: visibleColumnDefinitions,\n      numRows: allItems?.length,\n    });\n    const toolsHeaderWrapper = useRef<HTMLDivElement>(null);\n    // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n    const toolsHeaderHeight =\n      (toolsHeaderWrapper?.current as HTMLDivElement | null)?.getBoundingClientRect().height ?? 0;\n\n    const colIndexOffset = selectionType ? 1 : 0;\n    const totalColumnsCount = visibleColumnDefinitions.length + colIndexOffset;\n\n    return (\n      <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n        <ColumnWidthsProvider\n          visibleColumns={visibleColumnWidthsWithSelection}\n          resizableColumns={resizableColumns}\n          containerRef={wrapperMeasureRefObject}\n        >\n          <InternalContainer\n            {...baseProps}\n            __internalRootRef={__internalRootRef}\n            className={clsx(baseProps.className, styles.root)}\n            __funnelSubStepProps={__funnelSubStepProps}\n            header={\n              <>\n                {hasHeader && (\n                  <div\n                    ref={overlapElement}\n                    className={clsx(hasDynamicHeight && [styles['dark-header'], getContentHeaderClassName()])}\n                  >\n                    <div\n                      ref={toolsHeaderWrapper}\n                      className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}\n                    >\n                      <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                        <ToolsHeader\n                          header={header}\n                          filter={filter}\n                          pagination={pagination}\n                          preferences={preferences}\n                        />\n                      </CollectionLabelContext.Provider>\n                    </div>\n                  </div>\n                )}\n                {stickyHeader && (\n                  <StickyHeader\n                    ref={stickyHeaderRef}\n                    variant={computedVariant}\n                    theadProps={theadProps}\n                    wrapperRef={wrapperRefObject}\n                    theadRef={theadRef}\n                    secondaryWrapperRef={secondaryWrapperRef}\n                    tableRef={tableRefObject}\n                    onScroll={handleScroll}\n                    tableHasHeader={hasHeader}\n                    contentDensity={contentDensity}\n                    tableRole={tableRole}\n                  />\n                )}\n              </>\n            }\n            disableHeaderPaddings={true}\n            disableContentPaddings={true}\n            variant={toContainerVariant(computedVariant)}\n            __disableFooterPaddings={true}\n            __disableFooterDivider={true}\n            __disableStickyMobile={false}\n            footer={\n              hasFooter ? (\n                <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                  <div className={clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])}>\n                    {footer && <span>{footer}</span>}\n                    {hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n                  </div>\n                </div>\n              ) : null\n            }\n            __stickyHeader={stickyHeader}\n            __mobileStickyOffset={toolsHeaderHeight}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            {...focusMarkers.root}\n          >\n            <div\n              ref={wrapperRef}\n              className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n                [styles['has-footer']]: hasFooter,\n                [styles['has-header']]: hasHeader,\n              })}\n              style={stickyState.style.wrapper}\n              onScroll={handleScroll}\n              {...wrapperProps}\n            >\n              <div className={styles['wrapper-content-measure']} ref={wrapperMeasureMergedRef}></div>\n              {!!renderAriaLive && !!firstIndex && (\n                <LiveRegion>\n                  <span>\n                    {renderAriaLive({ totalItemsCount, firstIndex, lastIndex: firstIndex + items.length - 1 })}\n                  </span>\n                </LiveRegion>\n              )}\n              <GridNavigationProvider\n                keyboardNavigation={!!enableKeyboardNavigation}\n                pageSize={GRID_NAVIGATION_PAGE_SIZE}\n                getTable={() => tableRefObject.current}\n              >\n                <table\n                  ref={tableRef}\n                  className={clsx(\n                    styles.table,\n                    resizableColumns && styles['table-layout-fixed'],\n                    contentDensity === 'compact' && getVisualContextClassname('compact-table')\n                  )}\n                  {...getTableRoleProps({\n                    tableRole,\n                    totalItemsCount,\n                    totalColumnsCount: totalColumnsCount,\n                    ariaLabel: ariaLabels?.tableLabel,\n                    ariaLabelledBy: isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined,\n                  })}\n                >\n                  <Thead\n                    ref={theadRef}\n                    hidden={stickyHeader}\n                    onFocusedComponentChange={focusId => stickyHeaderRef.current?.setFocus(focusId)}\n                    {...theadProps}\n                  />\n                  <tbody>\n                    {loading || allItems.length === 0 ? (\n                      <tr>\n                        <NoDataCell\n                          totalColumnsCount={totalColumnsCount}\n                          hasFooter={hasFooter}\n                          loading={loading}\n                          loadingText={loadingText}\n                          empty={empty}\n                          tableRef={tableRefObject}\n                          containerRef={wrapperMeasureRefObject}\n                        />\n                      </tr>\n                    ) : (\n                      allItems.map((item, rowIndex) => {\n                        const isFirstRow = rowIndex === 0;\n                        const isLastRow = rowIndex === allItems.length - 1;\n                        const sharedCellProps = {\n                          isFirstRow,\n                          isLastRow,\n                          isVisualRefresh,\n                          isSelected: hasSelection && isItemSelected(item),\n                          isPrevSelected: hasSelection && !isFirstRow && isItemSelected(allItems[rowIndex - 1]),\n                          isNextSelected: hasSelection && !isLastRow && isItemSelected(allItems[rowIndex + 1]),\n                          isEvenRow: rowIndex % 2 === 0,\n                          hasFooter,\n                          stripedRows,\n                          stickyState,\n                          tableRole,\n                        };\n                        const expandableItemProps = getExpandableItemProps(item);\n                        return (\n                          <tr\n                            key={getItemKey(trackBy, item, rowIndex)}\n                            className={clsx(styles.row, sharedCellProps.isSelected && styles['row-selected'])}\n                            onFocus={({ currentTarget }) => {\n                              // When an element inside table row receives focus we want to adjust the scroll.\n                              // However, that behaviour is unwanted when the focus is received as result of a click\n                              // as it causes the click to never reach the target element.\n                              if (!currentTarget.contains(getMouseDownTarget())) {\n                                stickyHeaderRef.current?.scrollToRow(currentTarget);\n                              }\n                            }}\n                            {...focusMarkers.item}\n                            onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, item)}\n                            onContextMenu={\n                              onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, item)\n                            }\n                            {...getTableRowRoleProps({ tableRole, firstIndex, rowIndex, ...expandableItemProps })}\n                          >\n                            {hasSelection && (\n                              <TableTdElement\n                                {...sharedCellProps}\n                                className={clsx(styles['selection-control'])}\n                                wrapLines={false}\n                                hasSelection={true}\n                                columnId={selectionColumnId}\n                                colIndex={0}\n                              >\n                                <SelectionControl\n                                  onFocusDown={moveFocusDown}\n                                  onFocusUp={moveFocusUp}\n                                  onShiftToggle={updateShiftToggle}\n                                  {...getItemSelectionProps(item)}\n                                />\n                              </TableTdElement>\n                            )}\n\n                            {visibleColumnDefinitions.map((column, colIndex) => {\n                              const isEditing = cellEditing.checkEditing({ rowIndex, colIndex });\n                              const successfulEdit = cellEditing.checkLastSuccessfulEdit({ rowIndex, colIndex });\n                              const isEditable = !!column.editConfig && !cellEditing.isLoading;\n                              const expandableCellProps =\n                                isExpandable && colIndex === 0 ? expandableItemProps : undefined;\n                              return (\n                                <TableBodyCell\n                                  key={getColumnKey(column, colIndex)}\n                                  {...sharedCellProps}\n                                  style={\n                                    resizableColumns\n                                      ? {}\n                                      : {\n                                          width: column.width,\n                                          minWidth: column.minWidth,\n                                          maxWidth: column.maxWidth,\n                                        }\n                                  }\n                                  ariaLabels={ariaLabels}\n                                  column={column}\n                                  item={item}\n                                  wrapLines={wrapLines}\n                                  isEditable={isEditable}\n                                  isEditing={isEditing}\n                                  isRowHeader={column.isRowHeader}\n                                  successfulEdit={successfulEdit}\n                                  onEditStart={() => cellEditing.startEdit({ rowIndex, colIndex })}\n                                  onEditEnd={editCancelled =>\n                                    cellEditing.completeEdit({ rowIndex, colIndex }, editCancelled)\n                                  }\n                                  submitEdit={cellEditing.submitEdit}\n                                  columnId={column.id ?? colIndex}\n                                  colIndex={colIndex + colIndexOffset}\n                                  {...expandableCellProps}\n                                />\n                              );\n                            })}\n                          </tr>\n                        );\n                      })\n                    )}\n                  </tbody>\n                </table>\n              </GridNavigationProvider>\n\n              {resizableColumns && <ResizeTracker />}\n            </div>\n\n            <StickyScrollbar\n              ref={scrollbarRef}\n              wrapperRef={wrapperRefObject}\n              tableRef={tableRefObject}\n              onScroll={handleScroll}\n              hasStickyColumns={hasStickyColumns}\n            />\n          </InternalContainer>\n        </ColumnWidthsProvider>\n      </LinkDefaultVariantContext.Provider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useLayoutEffect, useState } from 'react';\nimport { findUpUntil } from '../../utils/dom';\n\ninterface VisualContextProps {\n  contextName: string;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst contextMatch = /awsui-context-([\\w-]+)/;\n\nexport function useVisualContext(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState('');\n\n  useLayoutEffect(() => {\n    if (elementRef.current) {\n      const contextParent = findUpUntil(elementRef.current, node => !!node.className.match(contextMatch));\n      setValue(contextParent?.className.match(contextMatch)![1] ?? '');\n    }\n  }, [elementRef]);\n\n  return value;\n}\n\n/**\n * This function returns only the className string needed to apply a\n * visual context to the DOM. It is used by the default export but\n * can also be imported directly for situations where the insertion\n * of a <div> node creates style problems.\n */\nexport function getVisualContextClassname(contextName: string) {\n  return `awsui-context-${contextName}`;\n}\n\nexport default function VisualContext({ contextName, className, children }: VisualContextProps) {\n  return <div className={clsx(getVisualContextClassname(contextName), className)}>{children}</div>;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef } from 'react';\nimport { ContainerProps } from './interfaces';\nimport { getBaseProps } from '../internal/base-component';\nimport { useAppLayoutContext } from '../internal/context/app-layout-context';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { getContentHeaderClassName } from '../internal/utils/content-header-utils';\nimport { StickyHeaderContext, useStickyHeader } from './use-sticky-header';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { useModalContext } from '../internal/context/modal-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { shouldRemoveHighContrastHeader } from '../internal/utils/content-header-utils';\n\nexport interface InternalContainerProps extends Omit<ContainerProps, 'variant'>, InternalBaseComponentProps {\n  __stickyHeader?: boolean;\n  __stickyOffset?: number;\n  __mobileStickyOffset?: number;\n  __disableFooterDivider?: boolean;\n  __disableFooterPaddings?: boolean;\n  __hiddenContent?: boolean;\n  __headerRef?: React.RefObject<HTMLDivElement>;\n  __darkHeader?: boolean;\n  __disableStickyMobile?: boolean;\n  /**\n   * Additional internal variant:\n   * * `embedded` - Use this variant within a parent container (such as a modal,\n   *                expandable section, container or split panel).\n   * * `full-page` – Only for internal use in table, cards and other components\n   */\n  variant?: ContainerProps['variant'] | 'embedded' | 'full-page' | 'cards';\n\n  __funnelSubStepProps?: ReturnType<typeof useFunnelSubStep>['funnelSubStepProps'];\n  __subStepRef?: ReturnType<typeof useFunnelSubStep>['subStepRef'];\n}\n\nexport function InternalContainerAsSubstep(props: InternalContainerProps) {\n  const { subStepRef, funnelSubStepProps } = useFunnelSubStep();\n  const modalContext = useModalContext();\n\n  return (\n    <InternalContainer\n      {...props}\n      __subStepRef={modalContext?.isInModal ? { current: null } : subStepRef}\n      __funnelSubStepProps={modalContext?.isInModal ? {} : funnelSubStepProps}\n    />\n  );\n}\n\nexport default function InternalContainer({\n  header,\n  footer,\n  children,\n  variant = 'default',\n  disableHeaderPaddings = false,\n  disableContentPaddings = false,\n  fitHeight,\n  media,\n  __stickyOffset,\n  __mobileStickyOffset,\n  __stickyHeader = false,\n  __internalRootRef = null,\n  __disableFooterDivider = false,\n  __disableFooterPaddings = false,\n  __hiddenContent = false,\n  __headerRef,\n  __darkHeader = false,\n  __disableStickyMobile = true,\n  __funnelSubStepProps,\n  __subStepRef,\n  ...restProps\n}: InternalContainerProps) {\n  const isMobile = useMobile();\n  const baseProps = getBaseProps(restProps);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const headerRef = useRef<HTMLDivElement>(null);\n  const { isSticky, isStuck, stickyStyles } = useStickyHeader(\n    rootRef,\n    headerRef,\n    __stickyHeader,\n    __stickyOffset,\n    __mobileStickyOffset,\n    __disableStickyMobile\n  );\n  const contentId = useUniqueId();\n  const { setHasStickyBackground } = useAppLayoutContext();\n  const isRefresh = useVisualRefresh();\n\n  const hasDynamicHeight = isRefresh && variant === 'full-page';\n  const overlapElement = useDynamicOverlap({ disabled: !hasDynamicHeight || !__darkHeader });\n\n  const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  const headerMergedRef = useMergeRefs(headerRef, overlapElement, __headerRef);\n\n  /**\n   * The visual refresh AppLayout component needs to know if a child component\n   * has a high contrast sticky header. This is to make sure the background element\n   * stays in the same vertical position as the header content.\n   */\n  useEffect(() => {\n    const shouldUpdateStickyBackground = isSticky && variant === 'full-page' && setHasStickyBackground;\n    if (shouldUpdateStickyBackground) {\n      setHasStickyBackground(true);\n    }\n\n    return () => {\n      if (shouldUpdateStickyBackground) {\n        setHasStickyBackground(false);\n      }\n    };\n  }, [isSticky, setHasStickyBackground, variant]);\n\n  // The container is only sticky on mobile if it is the header for the table.\n  // In this case we don't want the container to have sticky styles, as only the table header row will show as stuck on scroll.\n  const shouldHaveStickyStyles = isSticky && !isMobile;\n\n  const hasMedia = !!media?.content;\n  const mediaPosition = media?.position ?? 'top';\n  return (\n    <div\n      {...baseProps}\n      {...__funnelSubStepProps}\n      className={clsx(\n        baseProps.className,\n        styles.root,\n        styles[`variant-${variant}`],\n        fitHeight && styles['fit-height'],\n        hasMedia && (mediaPosition === 'side' ? styles['with-side-media'] : styles['with-top-media']),\n        shouldHaveStickyStyles && [styles['sticky-enabled']],\n        isRefresh && styles.refresh\n      )}\n      ref={mergedRef}\n    >\n      {hasMedia && (\n        <div\n          className={clsx(styles[`media-${mediaPosition === 'side' ? 'side' : 'top'}`], styles.media)}\n          style={mediaPosition === 'top' ? { height: media?.height || '' } : { width: media?.width || '' }}\n        >\n          {media.content}\n        </div>\n      )}\n      <div\n        id={contentId}\n        ref={__subStepRef}\n        className={clsx(styles['content-wrapper'], fitHeight && styles['content-wrapper-fit-height'])}\n      >\n        {header && (\n          <StickyHeaderContext.Provider value={{ isStuck }}>\n            <div\n              className={clsx(\n                isRefresh && styles.refresh,\n                styles.header,\n                styles[`header-variant-${variant}`],\n                shouldRemoveHighContrastHeader() && styles['remove-high-contrast-header'],\n                {\n                  [styles['header-sticky-disabled']]: __stickyHeader && !isSticky,\n                  [styles['header-sticky-enabled']]: isSticky,\n                  [styles['header-dynamic-height']]: hasDynamicHeight,\n                  [styles['header-stuck']]: isStuck,\n                  [styles['with-paddings']]: !disableHeaderPaddings,\n                  [styles['with-hidden-content']]: !children || __hiddenContent,\n                  [styles['header-with-media']]: hasMedia,\n                }\n              )}\n              {...stickyStyles}\n              ref={headerMergedRef}\n            >\n              {__darkHeader ? (\n                <div className={clsx(styles['dark-header'], getContentHeaderClassName())}>{header}</div>\n              ) : (\n                header\n              )}\n            </div>\n          </StickyHeaderContext.Provider>\n        )}\n        <div\n          className={clsx(\n            styles.content,\n            fitHeight && styles['content-fit-height'],\n            shouldRemoveHighContrastHeader() && styles['remove-high-contrast-header'],\n            {\n              [styles['with-paddings']]: !disableContentPaddings,\n            }\n          )}\n        >\n          {children}\n        </div>\n        {footer && (\n          <div\n            className={clsx(styles.footer, {\n              [styles['with-divider']]: !__disableFooterDivider,\n              [styles['with-paddings']]: !__disableFooterPaddings,\n            })}\n          >\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const awsuiGlobalFlagsSymbol = Symbol.for('awsui-global-flags');\n\ninterface GlobalFlags {\n  removeHighContrastHeader?: boolean;\n  appLayoutWidget?: boolean;\n}\n\nexport interface FlagsHolder {\n  [awsuiGlobalFlagsSymbol]?: GlobalFlags;\n}\n\nexport const getTopWindow = () => {\n  return window.top;\n};\n\nfunction getGlobal() {\n  return typeof window !== 'undefined' ? window : globalThis;\n}\n\nfunction readFlag(window: unknown, flagName: keyof GlobalFlags) {\n  const holder = window as FlagsHolder | null;\n  return holder?.[awsuiGlobalFlagsSymbol]?.[flagName];\n}\n\nexport const getGlobalFlag = (flagName: keyof GlobalFlags): GlobalFlags[keyof GlobalFlags] | undefined => {\n  try {\n    const ownFlag = readFlag(getGlobal(), flagName);\n    if (ownFlag !== undefined) {\n      return ownFlag;\n    }\n    return readFlag(getTopWindow(), flagName);\n  } catch (e) {\n    return undefined;\n  }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getGlobalFlag } from './global-flags';\n\nexport const shouldRemoveHighContrastHeader = (): boolean => !!getGlobalFlag('removeHighContrastHeader');\nexport const getContentHeaderClassName = (): string =>\n  shouldRemoveHighContrastHeader() ? '' : 'awsui-context-content-header';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useContext, useLayoutEffect } from 'react';\n\nimport { DynamicOverlapContext } from '../../context/dynamic-overlap-context';\nimport { useRef, useCallback } from 'react';\nimport { ContainerQueryEntry } from '@cloudscape-design/component-toolkit';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nexport interface UseDynamicOverlapProps {\n  /**\n   * Disables hook if not needed. By default, `false`.\n   */\n  disabled?: boolean;\n}\n\n/**\n * Observes the height of an element referenced by the returning ref and sets the value as overlapping\n * height for the surrounding AppLayout component.\n * @param props.disabled disables hook if not applicable\n * @returns ref to be measured as overlapping height\n */\nexport function useDynamicOverlap(props?: UseDynamicOverlapProps) {\n  const disabled = props?.disabled ?? false;\n  const setDynamicOverlapHeight = useContext(DynamicOverlapContext);\n  const overlapElementRef = useRef(null);\n\n  const getElement = useCallback(() => overlapElementRef.current, [overlapElementRef]);\n  const updateState = useCallback(\n    (entry: ContainerQueryEntry) => {\n      if (!disabled) {\n        setDynamicOverlapHeight(entry.contentBoxHeight);\n      }\n    },\n    [disabled, setDynamicOverlapHeight]\n  );\n\n  useResizeObserver(getElement, updateState);\n\n  useLayoutEffect(\n    function handleDynamicOverlapHeight() {\n      // Set overlap height back to 0 when unmounting\n      return () => {\n        if (!disabled) {\n          setDynamicOverlapHeight(0);\n        }\n      };\n    },\n    [disabled, setDynamicOverlapHeight]\n  );\n\n  return overlapElementRef;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext } from 'react';\n\nexport const DynamicOverlapContext = createContext<(overlapHeight: number) => void>(() => {});\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_14iqq_v4tpg_103\",\n  \"fit-height\": \"awsui_fit-height_14iqq_v4tpg_139\",\n  \"with-side-media\": \"awsui_with-side-media_14iqq_v4tpg_144\",\n  \"variant-default\": \"awsui_variant-default_14iqq_v4tpg_147\",\n  \"variant-stacked\": \"awsui_variant-stacked_14iqq_v4tpg_147\",\n  \"refresh\": \"awsui_refresh_14iqq_v4tpg_155\",\n  \"sticky-enabled\": \"awsui_sticky-enabled_14iqq_v4tpg_205\",\n  \"with-top-media\": \"awsui_with-top-media_14iqq_v4tpg_217\",\n  \"content-wrapper\": \"awsui_content-wrapper_14iqq_v4tpg_222\",\n  \"content-wrapper-fit-height\": \"awsui_content-wrapper-fit-height_14iqq_v4tpg_227\",\n  \"media\": \"awsui_media_14iqq_v4tpg_234\",\n  \"media-top\": \"awsui_media-top_14iqq_v4tpg_252\",\n  \"media-side\": \"awsui_media-side_14iqq_v4tpg_257\",\n  \"header\": \"awsui_header_14iqq_v4tpg_263\",\n  \"header-with-media\": \"awsui_header-with-media_14iqq_v4tpg_268\",\n  \"header-sticky-disabled\": \"awsui_header-sticky-disabled_14iqq_v4tpg_274\",\n  \"header-sticky-enabled\": \"awsui_header-sticky-enabled_14iqq_v4tpg_278\",\n  \"header-stuck\": \"awsui_header-stuck_14iqq_v4tpg_284\",\n  \"header-variant-cards\": \"awsui_header-variant-cards_14iqq_v4tpg_294\",\n  \"header-dynamic-height\": \"awsui_header-dynamic-height_14iqq_v4tpg_297\",\n  \"with-paddings\": \"awsui_with-paddings_14iqq_v4tpg_303\",\n  \"with-hidden-content\": \"awsui_with-hidden-content_14iqq_v4tpg_312\",\n  \"header-variant-full-page\": \"awsui_header-variant-full-page_14iqq_v4tpg_370\",\n  \"remove-high-contrast-header\": \"awsui_remove-high-contrast-header_14iqq_v4tpg_390\",\n  \"dark-header\": \"awsui_dark-header_14iqq_v4tpg_399\",\n  \"content\": \"awsui_content_14iqq_v4tpg_222\",\n  \"content-fit-height\": \"awsui_content-fit-height_14iqq_v4tpg_407\",\n  \"content-with-media\": \"awsui_content-with-media_14iqq_v4tpg_417\",\n  \"footer\": \"awsui_footer_14iqq_v4tpg_421\",\n  \"with-divider\": \"awsui_with-divider_14iqq_v4tpg_425\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport styles from './styles.css.js';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\ninterface ToolsHeaderProps {\n  header: React.ReactNode;\n  filter?: React.ReactNode;\n  pagination?: React.ReactNode;\n  preferences?: React.ReactNode;\n}\n\nexport default function ToolsHeader({ header, filter, pagination, preferences }: ToolsHeaderProps) {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const isHeaderString = typeof header === 'string';\n  const assignHeaderId = useContext(CollectionLabelContext).assignId;\n  const headingId = useUniqueId('heading');\n  if (assignHeaderId !== undefined && isHeaderString) {\n    assignHeaderId(headingId);\n  }\n  const isSmall = breakpoint === 'default';\n  const hasTools = filter || pagination || preferences;\n  return (\n    <>\n      {isHeaderString ? <span id={headingId}>{header}</span> : header}\n      {hasTools && (\n        <div ref={ref} className={clsx(styles.tools, isSmall && styles['tools-small'])}>\n          {filter && <div className={styles['tools-filtering']}>{filter}</div>}\n          <div className={styles['tools-align-right']}>\n            {pagination && <div className={styles['tools-pagination']}>{pagination}</div>}\n            {preferences && <div className={styles['tools-preferences']}>{preferences}</div>}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_wih1l_qzfuf_103\",\n  \"tools\": \"awsui_tools_wih1l_qzfuf_114\",\n  \"tools-filtering\": \"awsui_tools-filtering_wih1l_qzfuf_122\",\n  \"tools-align-right\": \"awsui_tools-align-right_wih1l_qzfuf_136\",\n  \"tools-pagination\": \"awsui_tools-pagination_wih1l_qzfuf_140\",\n  \"tools-preferences\": \"awsui_tools-preferences_wih1l_qzfuf_140\",\n  \"tools-small\": \"awsui_tools-small_wih1l_qzfuf_146\",\n  \"table\": \"awsui_table_wih1l_qzfuf_152\",\n  \"table-layout-fixed\": \"awsui_table-layout-fixed_wih1l_qzfuf_158\",\n  \"wrapper\": \"awsui_wrapper_wih1l_qzfuf_162\",\n  \"variant-stacked\": \"awsui_variant-stacked_wih1l_qzfuf_169\",\n  \"wrapper-content-measure\": \"awsui_wrapper-content-measure_wih1l_qzfuf_169\",\n  \"variant-container\": \"awsui_variant-container_wih1l_qzfuf_169\",\n  \"has-footer\": \"awsui_has-footer_wih1l_qzfuf_172\",\n  \"has-header\": \"awsui_has-header_wih1l_qzfuf_175\",\n  \"cell-merged\": \"awsui_cell-merged_wih1l_qzfuf_192\",\n  \"cell-merged-content\": \"awsui_cell-merged-content_wih1l_qzfuf_204\",\n  \"empty\": \"awsui_empty_wih1l_qzfuf_222\",\n  \"loading\": \"awsui_loading_wih1l_qzfuf_226\",\n  \"selection-control\": \"awsui_selection-control_wih1l_qzfuf_235\",\n  \"selection-control-header\": \"awsui_selection-control-header_wih1l_qzfuf_242\",\n  \"dark-header\": \"awsui_dark-header_wih1l_qzfuf_252\",\n  \"header-secondary\": \"awsui_header-secondary_wih1l_qzfuf_257\",\n  \"table-has-header\": \"awsui_table-has-header_wih1l_qzfuf_275\",\n  \"header-controls\": \"awsui_header-controls_wih1l_qzfuf_279\",\n  \"variant-full-page\": \"awsui_variant-full-page_wih1l_qzfuf_282\",\n  \"variant-embedded\": \"awsui_variant-embedded_wih1l_qzfuf_288\",\n  \"variant-borderless\": \"awsui_variant-borderless_wih1l_qzfuf_288\",\n  \"footer-wrapper\": \"awsui_footer-wrapper_wih1l_qzfuf_293\",\n  \"footer\": \"awsui_footer_wih1l_qzfuf_293\",\n  \"footer-with-pagination\": \"awsui_footer-with-pagination_wih1l_qzfuf_301\",\n  \"footer-pagination\": \"awsui_footer-pagination_wih1l_qzfuf_309\",\n  \"thead-active\": \"awsui_thead-active_wih1l_qzfuf_313\",\n  \"row\": \"awsui_row_wih1l_qzfuf_314\",\n  \"row-selected\": \"awsui_row-selected_wih1l_qzfuf_315\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { TableProps } from './interfaces';\nimport { SelectionControl, focusMarkers, SelectionProps } from './selection';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { getColumnKey } from './utils';\nimport { TableHeaderCell } from './header-cell';\nimport { useColumnWidths } from './use-column-widths';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport headerCellStyles from './header-cell/styles.css.js';\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { StickyColumnsModel } from './sticky-columns';\nimport { getTableHeaderRowRoleProps, TableRole } from './table-role';\nimport { TableThElement } from './header-cell/th-element';\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\nimport { Divider } from './resizer';\n\nexport interface TheadProps {\n  selectionType: TableProps.SelectionType | undefined;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>;\n  sortingColumn: TableProps.SortingColumn<any> | undefined;\n  sortingDescending: boolean | undefined;\n  sortingDisabled: boolean | undefined;\n  variant: TableProps.Variant;\n  wrapLines: boolean | undefined;\n  resizableColumns: boolean | undefined;\n  getSelectAllProps: () => SelectionProps;\n  onFocusMove: ((sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) => void) | undefined;\n  onResizeFinish: (newWidths: Map<PropertyKey, number>) => void;\n  onSortingChange: NonCancelableEventHandler<TableProps.SortingState<any>> | undefined;\n  sticky?: boolean;\n  hidden?: boolean;\n  stuck?: boolean;\n  singleSelectionHeaderAriaLabel?: string;\n  resizerRoleDescription?: string;\n  stripedRows?: boolean;\n  stickyState: StickyColumnsModel;\n  selectionColumnId: PropertyKey;\n  focusedComponent?: null | string;\n  onFocusedComponentChange?: (focusId: null | string) => void;\n  tableRole: TableRole;\n  isExpandable?: boolean;\n}\n\nconst Thead = React.forwardRef(\n  (\n    {\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      resizableColumns,\n      variant,\n      wrapLines,\n      onFocusMove,\n      onSortingChange,\n      onResizeFinish,\n      singleSelectionHeaderAriaLabel,\n      stripedRows,\n      sticky = false,\n      hidden = false,\n      stuck = false,\n      stickyState,\n      selectionColumnId,\n      focusedComponent,\n      onFocusedComponentChange,\n      tableRole,\n      resizerRoleDescription,\n      isExpandable,\n    }: TheadProps,\n    outerRef: React.Ref<HTMLTableRowElement>\n  ) => {\n    const isVisualRefresh = useVisualRefresh();\n\n    const headerCellClass = clsx(\n      headerCellStyles['header-cell'],\n      headerCellStyles[`header-cell-variant-${variant}`],\n      sticky && headerCellStyles['header-cell-sticky'],\n      stuck && headerCellStyles['header-cell-stuck'],\n      stripedRows && headerCellStyles['has-striped-rows'],\n      isVisualRefresh && headerCellStyles['is-visual-refresh']\n    );\n\n    const selectionCellClass = clsx(\n      styles['selection-control'],\n      styles['selection-control-header'],\n      isVisualRefresh && styles['is-visual-refresh']\n    );\n\n    const { getColumnStyles, columnWidths, updateColumn, setCell } = useColumnWidths();\n\n    return (\n      <thead className={clsx(!hidden && styles['thead-active'])}>\n        <tr\n          {...focusMarkers.all}\n          ref={outerRef}\n          aria-rowindex={1}\n          {...getTableHeaderRowRoleProps({ tableRole })}\n          onFocus={event => {\n            const focusControlElement = findUpUntil(event.target, element => !!element.getAttribute('data-focus-id'));\n            const focusId = focusControlElement?.getAttribute('data-focus-id') ?? null;\n            onFocusedComponentChange?.(focusId);\n          }}\n          onBlur={() => onFocusedComponentChange?.(null)}\n        >\n          {selectionType ? (\n            <TableThElement\n              className={clsx(headerCellClass, selectionCellClass, hidden && headerCellStyles['header-cell-hidden'])}\n              hidden={hidden}\n              tableRole={tableRole}\n              colIndex={0}\n              focusedComponent={focusedComponent}\n              columnId={selectionColumnId}\n              stickyState={stickyState}\n            >\n              {selectionType === 'multi' ? (\n                <SelectionControl\n                  onFocusDown={event => {\n                    onFocusMove!(event.target as HTMLElement, -1, +1);\n                  }}\n                  focusedComponent={focusedComponent}\n                  {...getSelectAllProps()}\n                  {...(sticky ? { tabIndex: -1 } : {})}\n                />\n              ) : (\n                <ScreenreaderOnly>{singleSelectionHeaderAriaLabel}</ScreenreaderOnly>\n              )}\n              <Divider className={styles['resize-divider']} />\n            </TableThElement>\n          ) : null}\n\n          {columnDefinitions.map((column, colIndex) => {\n            const columnId = getColumnKey(column, colIndex);\n            return (\n              <TableHeaderCell\n                key={columnId}\n                style={getColumnStyles(sticky, columnId)}\n                className={headerCellClass}\n                tabIndex={sticky ? -1 : 0}\n                focusedComponent={focusedComponent}\n                column={column}\n                activeSortingColumn={sortingColumn}\n                sortingDescending={sortingDescending}\n                sortingDisabled={sortingDisabled}\n                wrapLines={wrapLines}\n                hidden={hidden}\n                colIndex={selectionType ? colIndex + 1 : colIndex}\n                columnId={columnId}\n                updateColumn={updateColumn}\n                onResizeFinish={() => onResizeFinish(columnWidths)}\n                resizableColumns={resizableColumns}\n                onClick={detail => fireNonCancelableEvent(onSortingChange, detail)}\n                isEditable={!!column.editConfig}\n                stickyState={stickyState}\n                cellRef={node => setCell(sticky, columnId, node)}\n                tableRole={tableRole}\n                resizerRoleDescription={resizerRoleDescription}\n                // Expandable option is only applicable to the first data column of the table.\n                // When present, the header content receives extra padding to match the first offset in the data cells.\n                isExpandable={colIndex === 0 && isExpandable}\n              />\n            );\n          })}\n        </tr>\n      </thead>\n    );\n  }\n);\n\nexport default Thead;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { KeyboardEvent, KeyboardEventHandler, MouseEvent, useContext } from 'react';\nimport { KeyCode } from '../../internal/keycode';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport InternalCheckbox from '../../checkbox/internal';\nimport RadioButton from '../../radio-group/radio-button';\n\nimport styles from './styles.css.js';\nimport { SelectionProps } from './interfaces';\nimport { SingleTabStopNavigationContext } from '../../internal/context/single-tab-stop-navigation-context';\n\nexport interface SelectionControlProps extends SelectionProps {\n  onShiftToggle?(shiftPressed: boolean): void;\n  onFocusUp?: KeyboardEventHandler;\n  onFocusDown?: KeyboardEventHandler;\n  ariaLabel?: string;\n  tabIndex?: -1;\n  focusedComponent?: null | string;\n}\n\nexport function SelectionControl({\n  selectionType,\n  indeterminate = false,\n  onShiftToggle,\n  onFocusUp,\n  onFocusDown,\n  name,\n  ariaLabel,\n  focusedComponent,\n  ...sharedProps\n}: SelectionControlProps) {\n  const controlId = useUniqueId();\n  const isMultiSelection = selectionType === 'multi';\n  const { navigationActive } = useContext(SingleTabStopNavigationContext);\n\n  const setShiftState = (event: KeyboardEvent | MouseEvent) => {\n    if (isMultiSelection) {\n      onShiftToggle && onShiftToggle(event.shiftKey);\n    }\n  };\n\n  const onMouseDownHandler = (event: MouseEvent) => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      // To overcome an issue\n      // If you shift+click or ctrl+click on a label for a checkbox, checkbox is not checked.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=559506\n      event.preventDefault();\n    }\n  };\n\n  // native checkboxes do not have focus move via keyboard, we implement it here programmatically\n  const handleKeyDown = (event: KeyboardEvent) => {\n    setShiftState(event);\n    if (isMultiSelection && !navigationActive) {\n      if (event.keyCode === KeyCode.up) {\n        event.preventDefault();\n        onFocusUp && onFocusUp(event);\n      }\n      if (event.keyCode === KeyCode.down) {\n        event.preventDefault();\n        onFocusDown && onFocusDown(event);\n      }\n    }\n  };\n\n  const handleClick = (event: MouseEvent) => {\n    const target = event.currentTarget;\n    const nativeInput = (target.tagName === 'INPUT' ? target : target.querySelector('input')) as HTMLInputElement;\n    // Clicking on input, does not focus it on Firefox (AWSUI-11345)\n    nativeInput?.focus();\n  };\n\n  const selector = isMultiSelection ? (\n    <InternalCheckbox\n      {...sharedProps}\n      showOutline={focusedComponent === 'selection-control'}\n      controlId={controlId}\n      data-focus-id=\"selection-control\"\n      indeterminate={indeterminate}\n    />\n  ) : (\n    <RadioButton {...sharedProps} controlId={controlId} name={name} value={''} label={''} />\n  );\n\n  return (\n    <>\n      <label\n        onKeyDown={handleKeyDown}\n        onKeyUp={setShiftState}\n        onMouseDown={onMouseDownHandler}\n        onMouseUp={setShiftState}\n        onClick={handleClick}\n        htmlFor={controlId}\n        className={clsx(styles.label, styles.root)}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n      >\n        {selector}\n      </label>\n      {/* HACK: IE11 collapses td's height to 0, if it contains only an absolutely positioned label */}\n      <span className={clsx(styles.stud)} aria-hidden={true}>\n        &nbsp;\n      </span>\n    </>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1s55x_d36ci_99\",\n  \"label\": \"awsui_label_1s55x_d36ci_103\",\n  \"stud\": \"awsui_stud_1s55x_d36ci_117\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { InternalContainerProps } from '../container/internal';\nimport { StickyColumnsCellState } from './sticky-columns';\nimport { TableProps } from './interfaces';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nexport const applyTrackBy = <T>(trackBy: TableProps.TrackBy<T>, item: T) => {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return (item as any)[trackBy];\n};\n\nexport const getItemKey = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T, index: number) => {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getTrackableValue = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T) => {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getColumnKey = <T>(column: TableProps.ColumnDefinition<T>, index: number) => {\n  return column.id || index;\n};\n\nexport const toContainerVariant = (variant: TableProps.Variant | undefined): InternalContainerProps['variant'] => {\n  const isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant === 'borderless' ? 'embedded' : variant;\n};\n\nexport function checkSortingState<T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>,\n  sortingComparator: TableProps.SortingColumn<T>['sortingComparator']\n) {\n  const matchedColumn = columnDefinitions.filter(column => column.sortingComparator === sortingComparator)[0];\n  if (!matchedColumn) {\n    warnOnce(\n      'Table',\n      'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.'\n    );\n  }\n}\n\nexport function getVisibleColumnDefinitions<T>({\n  columnDisplay,\n  visibleColumns,\n  columnDefinitions,\n}: {\n  columnDisplay?: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  visibleColumns?: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  // columnsDisplay has a precedence over visibleColumns.\n  if (columnDisplay) {\n    return getVisibleColumnDefinitionsFromColumnDisplay({ columnDisplay, columnDefinitions });\n  } else if (visibleColumns) {\n    return getVisibleColumnDefinitionsFromVisibleColumns({ visibleColumns, columnDefinitions });\n  } else {\n    return columnDefinitions;\n  }\n}\n\nfunction getVisibleColumnDefinitionsFromColumnDisplay<T>({\n  columnDisplay,\n  columnDefinitions,\n}: {\n  columnDisplay: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const columnDefinitionsById: Record<string, TableProps.ColumnDefinition<T>> = columnDefinitions.reduce(\n    (accumulator, item) => (item.id === undefined ? accumulator : { ...accumulator, [item.id]: item }),\n    {}\n  );\n  return columnDisplay\n    .filter(item => item.visible)\n    .map(item => columnDefinitionsById[item.id])\n    .filter(Boolean);\n}\n\nfunction getVisibleColumnDefinitionsFromVisibleColumns<T>({\n  visibleColumns,\n  columnDefinitions,\n}: {\n  visibleColumns: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const ids = new Set(visibleColumns);\n  return columnDefinitions.filter(({ id }) => id !== undefined && ids.has(id));\n}\n\nexport function getStickyClassNames(styles: Record<string, string>, props: StickyColumnsCellState | null) {\n  return {\n    [styles['sticky-cell']]: !!props,\n    [styles['sticky-cell-pad-left']]: !!props?.padLeft,\n    [styles['sticky-cell-last-left']]: !!props?.lastLeft,\n    [styles['sticky-cell-last-right']]: !!props?.lastRight,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { TableProps } from '../interfaces';\nimport { getTrackableValue } from '../utils';\n\nexport const SELECTION_ITEM = 'selection-item';\nexport const SELECTION_ROOT = 'selection-root';\n\n// A set, that compares items by their \"trackables\" (the results of applying `trackBy` to them)\nexport class ItemSet<T> {\n  constructor(trackBy: TableProps.TrackBy<T> | undefined, items: ReadonlyArray<T>) {\n    this.trackBy = trackBy;\n    items.forEach(this.put);\n  }\n  private trackBy: TableProps.TrackBy<T> | undefined;\n  private map: Map<unknown, T> = new Map();\n  put = (item: T) => this.map.set.call(this.map, getTrackableValue(this.trackBy, item), item);\n  has = (item: T) => this.map.has.call(this.map, getTrackableValue(this.trackBy, item));\n  forEach = this.map.forEach.bind(this.map);\n}\n\nexport const focusMarkers = {\n  item: { ['data-' + SELECTION_ITEM]: 'item' },\n  all: { ['data-' + SELECTION_ITEM]: 'all' },\n  root: { ['data-' + SELECTION_ROOT]: 'true' },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyboardEvent } from 'react';\nimport { findUpUntil } from '../../internal/utils/dom';\nimport { TableProps } from '../interfaces';\nimport selectionStyles from './styles.css.js';\nimport { SELECTION_ITEM } from './utils';\n\n// The hooks moves focus between multi-selection checkboxes.\n// Not eligible for tables with grid navigation.\nexport function useSelectionFocusMove(selectionType: TableProps['selectionType'], totalItems: number) {\n  if (selectionType !== 'multi') {\n    return {};\n  }\n  function moveFocus(sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) {\n    let index = fromIndex;\n    const rootContainer = findRootContainer(sourceElement);\n\n    while (index >= -1 && index < totalItems) {\n      index += direction;\n      const control = findSelectionControlByIndex(rootContainer, index);\n      if (control && !control.disabled) {\n        control.focus();\n        break;\n      }\n    }\n  }\n  const [moveFocusDown, moveFocusUp] = ([1, -1] as const).map(direction => {\n    return (event: KeyboardEvent) => {\n      const target = event.currentTarget as HTMLElement;\n      const itemNode = findUpUntil(target, node => node.dataset.selectionItem === 'item')!;\n      const fromIndex = Array.prototype.indexOf.call(itemNode.parentElement!.children, itemNode);\n      moveFocus(target, fromIndex, direction);\n    };\n  });\n  return {\n    moveFocusDown,\n    moveFocusUp,\n    moveFocus,\n  };\n}\n\nfunction findSelectionControlByIndex(rootContainer: HTMLElement, index: number) {\n  if (index === -1) {\n    // find \"select all\" checkbox\n    return rootContainer.querySelector<HTMLInputElement>(\n      `[data-${SELECTION_ITEM}=\"all\"] .${selectionStyles.root} input`\n    );\n  }\n  return rootContainer.querySelectorAll<HTMLInputElement>(\n    `[data-${SELECTION_ITEM}=\"item\"] .${selectionStyles.root} input`\n  )[index];\n}\n\nfunction findRootContainer(element: HTMLElement) {\n  return findUpUntil(element, node => node.dataset.selectionRoot === 'true')!;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { TableProps } from '../interfaces';\nimport { getTrackableValue } from '../utils';\nimport { joinStrings } from '../../internal/utils/strings';\nimport { SelectionProps } from './interfaces';\nimport { ItemSet } from './utils';\n\nexport function useSelection<T>({\n  items,\n  selectedItems = [],\n  selectionType,\n  isItemDisabled = () => false,\n  trackBy,\n  onSelectionChange,\n  ariaLabels,\n  loading,\n}: Pick<\n  TableProps<T>,\n  | 'ariaLabels'\n  | 'items'\n  | 'selectedItems'\n  | 'selectionType'\n  | 'isItemDisabled'\n  | 'trackBy'\n  | 'onSelectionChange'\n  | 'loading'\n>) {\n  const [shiftPressed, setShiftPressed] = useState(false);\n  const [lastClickedItem, setLastClickedItem] = useState<T | null>(null);\n  const selectionName = useUniqueId();\n  const finalSelectedItems = selectionType === 'single' ? selectedItems.slice(0, 1) : selectedItems;\n  const selectedSet = new ItemSet(trackBy, finalSelectedItems);\n  const itemIndexesMap = new Map();\n  items.forEach((item, i) => itemIndexesMap.set(getTrackableValue(trackBy, item), i));\n  const isItemSelected = selectedSet.has.bind(selectedSet);\n  const getItemState = (item: T) => ({\n    disabled: isItemDisabled(item),\n    selected: isItemSelected(item),\n  });\n  const [allDisabled, allEnabledSelected] = selectionType\n    ? items.reduce(\n        ([allDisabled, allEnabledSelected], item) => {\n          const { disabled, selected } = getItemState(item);\n          return [\n            // all items are disabled (or none are present)\n            allDisabled && disabled,\n            // all enabled items are selected (or none are present)\n            allEnabledSelected && (selected || disabled),\n          ];\n        },\n        [true, true]\n      )\n    : [true, true];\n\n  // the page has at least one selected item\n  const hasSelected = finalSelectedItems.length > 0;\n\n  const handleToggleAll = () => {\n    const requestedItems = new ItemSet(trackBy, items);\n    const newSelectedItems = allEnabledSelected ? deselectItems(requestedItems) : selectItems(requestedItems);\n    fireNonCancelableEvent(onSelectionChange, { selectedItems: newSelectedItems });\n  };\n\n  const getRequestedItems = (item: T) => {\n    const requestedItems = new ItemSet(trackBy, [item]);\n    let lastClickedItemIndex = lastClickedItem ? itemIndexesMap.get(getTrackableValue(trackBy, lastClickedItem)) : -1;\n    if (lastClickedItemIndex === undefined) {\n      lastClickedItemIndex = -1;\n    }\n    // we use lastClickedItemIndex to determine if filtering/sorting/pagination\n    // made previously selected item invisible, therefore we reset state for shift-select\n    if (shiftPressed && lastClickedItemIndex !== -1) {\n      // item is always in items\n      const currentItemIndex = itemIndexesMap.get(getTrackableValue(trackBy, item)) as number;\n      const start = Math.min(currentItemIndex, lastClickedItemIndex);\n      const end = Math.max(currentItemIndex, lastClickedItemIndex);\n      items.slice(start, end + 1).forEach(item => requestedItems.put(item));\n    }\n    return requestedItems;\n  };\n\n  const deselectItems = (requestedItems: ItemSet<T>) => {\n    const newSelectedItems: Array<T> = [];\n    selectedItems.forEach(selectedItem => {\n      const toUnselect = requestedItems.has(selectedItem);\n      if (!toUnselect || isItemDisabled(selectedItem)) {\n        newSelectedItems.push(selectedItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  const selectItems = (requestedItems: ItemSet<T>) => {\n    const newSelectedItems = [...selectedItems];\n    requestedItems.forEach(newItem => {\n      const { selected, disabled } = getItemState(newItem);\n      if (!selected && !disabled) {\n        newSelectedItems.push(newItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  const handleToggleItem = (item: T) => () => {\n    const { disabled, selected } = getItemState(item);\n    if (disabled || (selectionType === 'single' && selected)) {\n      return;\n    }\n    if (selectionType === 'single') {\n      fireNonCancelableEvent(onSelectionChange, { selectedItems: [item] });\n    } else {\n      const requestedItems = getRequestedItems(item);\n      const selectedItems = selected ? deselectItems(requestedItems) : selectItems(requestedItems);\n      fireNonCancelableEvent(onSelectionChange, { selectedItems });\n      setLastClickedItem(item);\n    }\n  };\n\n  return {\n    isItemSelected,\n    getSelectAllProps: (): SelectionProps => {\n      if (!selectionType) {\n        throw new Error('Invariant violation: calling selection props with missing selection type.');\n      }\n      return {\n        name: selectionName,\n        disabled: allDisabled || !!loading,\n        selectionType: selectionType,\n        indeterminate: hasSelected && !allEnabledSelected,\n        checked: hasSelected && allEnabledSelected,\n        onChange: handleToggleAll,\n        ariaLabel: joinStrings(\n          ariaLabels?.selectionGroupLabel,\n          ariaLabels?.allItemsSelectionLabel?.({ selectedItems })\n        ),\n      };\n    },\n    getItemSelectionProps: (item: T): SelectionProps => {\n      if (!selectionType) {\n        throw new Error('Invariant violation: calling selection props with missing selection type.');\n      }\n      return {\n        name: selectionName,\n        selectionType: selectionType,\n        ariaLabel: joinStrings(\n          ariaLabels?.selectionGroupLabel,\n          ariaLabels?.itemSelectionLabel?.({ selectedItems }, item)\n        ),\n        onChange: handleToggleItem(item),\n        checked: isItemSelected(item),\n        disabled: isItemDisabled(item),\n      };\n    },\n    updateShiftToggle: (value: boolean) => {\n      setShiftPressed(value);\n    },\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport InternalIcon from '../../icon/internal';\nimport { KeyCode } from '../../internal/keycode';\nimport { TableProps } from '../interfaces';\nimport { getSortingIconName, getSortingStatus, isSorted } from './utils';\nimport styles from './styles.css.js';\nimport { Divider, Resizer } from '../resizer';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { useInternalI18n } from '../../i18n/context';\nimport { StickyColumnsModel } from '../sticky-columns';\nimport { TableRole } from '../table-role';\nimport { TableThElement } from './th-element';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\n\ninterface TableHeaderCellProps<ItemType> {\n  className?: string;\n  style?: React.CSSProperties;\n  tabIndex: number;\n  column: TableProps.ColumnDefinition<ItemType>;\n  activeSortingColumn?: TableProps.SortingColumn<ItemType>;\n  sortingDescending?: boolean;\n  sortingDisabled?: boolean;\n  wrapLines?: boolean;\n  hidden?: boolean;\n  onClick(detail: TableProps.SortingState<any>): void;\n  onResizeFinish: () => void;\n  colIndex: number;\n  updateColumn: (columnId: PropertyKey, newWidth: number) => void;\n  resizableColumns?: boolean;\n  isEditable?: boolean;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  cellRef: React.RefCallback<HTMLElement>;\n  focusedComponent?: null | string;\n  tableRole: TableRole;\n  resizerRoleDescription?: string;\n  isExpandable?: boolean;\n}\n\nexport function TableHeaderCell<ItemType>({\n  className,\n  style,\n  tabIndex,\n  column,\n  activeSortingColumn,\n  sortingDescending,\n  sortingDisabled,\n  wrapLines,\n  focusedComponent,\n  hidden,\n  onClick,\n  colIndex,\n  updateColumn,\n  resizableColumns,\n  onResizeFinish,\n  isEditable,\n  columnId,\n  stickyState,\n  cellRef,\n  tableRole,\n  resizerRoleDescription,\n  isExpandable,\n}: TableHeaderCellProps<ItemType>) {\n  const i18n = useInternalI18n('table');\n  const sortable = !!column.sortingComparator || !!column.sortingField;\n  const sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  const sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n  const handleClick = () =>\n    onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false,\n    });\n\n  // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n  const handleKeyPress = ({ nativeEvent: e }: React.KeyboardEvent) => {\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  const headerId = useUniqueId('table-header-');\n\n  const clickableHeaderRef = useRef<HTMLDivElement>(null);\n  const { tabIndex: clickableHeaderTabIndex } = useSingleTabStopNavigation(clickableHeaderRef, { tabIndex });\n\n  return (\n    <TableThElement\n      className={className}\n      style={style}\n      cellRef={cellRef}\n      sortingStatus={sortingStatus}\n      sortingDisabled={sortingDisabled}\n      focusedComponent={focusedComponent}\n      hidden={hidden}\n      colIndex={colIndex}\n      columnId={columnId}\n      stickyState={stickyState}\n      tableRole={tableRole}\n    >\n      <div\n        ref={clickableHeaderRef}\n        data-focus-id={`sorting-control-${String(columnId)}`}\n        className={clsx(styles['header-cell-content'], {\n          [styles['header-cell-fake-focus']]: focusedComponent === `sorting-control-${String(columnId)}`,\n          [styles['header-cell-content-expandable']]: isExpandable,\n        })}\n        aria-label={\n          column.ariaLabel\n            ? column.ariaLabel({\n                sorted: sorted,\n                descending: sorted && !!sortingDescending,\n                disabled: !!sortingDisabled,\n              })\n            : undefined\n        }\n        {...(sortingStatus && !sortingDisabled\n          ? {\n              onKeyPress: handleKeyPress,\n              tabIndex: clickableHeaderTabIndex,\n              role: 'button',\n              onClick: handleClick,\n            }\n          : {})}\n      >\n        <div className={clsx(styles['header-cell-text'], wrapLines && styles['header-cell-text-wrap'])} id={headerId}>\n          {column.header}\n          {isEditable && !isExpandable ? (\n            <span\n              className={styles['edit-icon']}\n              role=\"img\"\n              aria-label={i18n('columnDefinitions.editConfig.editIconAriaLabel', column.editConfig?.editIconAriaLabel)}\n            >\n              <InternalIcon name=\"edit\" />\n            </span>\n          ) : null}\n        </div>\n        {sortingStatus && (\n          <span className={styles['sorting-icon']}>\n            <InternalIcon name={getSortingIconName(sortingStatus)} />\n          </span>\n        )}\n      </div>\n      {resizableColumns ? (\n        <Resizer\n          tabIndex={tabIndex}\n          focusId={`resize-control-${String(columnId)}`}\n          showFocusRing={focusedComponent === `resize-control-${String(columnId)}`}\n          onWidthUpdate={newWidth => updateColumn(columnId, newWidth)}\n          onWidthUpdateCommit={onResizeFinish}\n          ariaLabelledby={headerId}\n          minWidth={typeof column.minWidth === 'string' ? parseInt(column.minWidth) : column.minWidth}\n          roleDescription={i18n('ariaLabels.resizerRoleDescription', resizerRoleDescription)}\n        />\n      ) : (\n        <Divider className={styles['resize-divider']} />\n      )}\n    </TableThElement>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { TableProps } from '../interfaces';\n\nexport type SortingStatus = 'sortable' | 'ascending' | 'descending';\nconst stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled',\n} as const;\n\nexport const getSortingStatus = (\n  sortable: boolean,\n  sorted: boolean,\n  descending: boolean,\n  disabled: boolean\n): SortingStatus | undefined => {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\n\nexport const getSortingIconName = (sortingState: SortingStatus) => stateToIcon[sortingState];\nexport const isSorted = <T>(column: TableProps.ColumnDefinition<T>, sortingColumn: TableProps.SortingColumn<T>) =>\n  column === sortingColumn ||\n  (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||\n  (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);\n", "\n    import './styles.scoped.css';\n    export default {\n  \"header-cell\": \"awsui_header-cell_1spae_1sbf1_99\",\n  \"header-cell-fake-focus\": \"awsui_header-cell-fake-focus_1spae_1sbf1_133\",\n  \"header-cell-sticky\": \"awsui_header-cell-sticky_1spae_1sbf1_154\",\n  \"header-cell-stuck\": \"awsui_header-cell-stuck_1spae_1sbf1_157\",\n  \"header-cell-variant-full-page\": \"awsui_header-cell-variant-full-page_1spae_1sbf1_157\",\n  \"header-cell-hidden\": \"awsui_header-cell-hidden_1spae_1sbf1_160\",\n  \"header-cell-sortable\": \"awsui_header-cell-sortable_1spae_1sbf1_163\",\n  \"sticky-cell\": \"awsui_sticky-cell_1spae_1sbf1_166\",\n  \"sticky-cell-pad-left\": \"awsui_sticky-cell-pad-left_1spae_1sbf1_174\",\n  \"has-selection\": \"awsui_has-selection_1spae_1sbf1_174\",\n  \"sticky-cell-last-left\": \"awsui_sticky-cell-last-left_1spae_1sbf1_177\",\n  \"resize-divider\": \"awsui_resize-divider_1spae_1sbf1_181\",\n  \"sticky-cell-last-right\": \"awsui_sticky-cell-last-right_1spae_1sbf1_184\",\n  \"sorting-icon\": \"awsui_sorting-icon_1spae_1sbf1_199\",\n  \"edit-icon\": \"awsui_edit-icon_1spae_1sbf1_207\",\n  \"header-cell-content\": \"awsui_header-cell-content_1spae_1sbf1_213\",\n  \"header-cell-content-expandable\": \"awsui_header-cell-content-expandable_1spae_1sbf1_219\",\n  \"header-cell-disabled\": \"awsui_header-cell-disabled_1spae_1sbf1_271\",\n  \"header-cell-sorted\": \"awsui_header-cell-sorted_1spae_1sbf1_271\",\n  \"header-cell-text\": \"awsui_header-cell-text_1spae_1sbf1_285\",\n  \"header-cell-text-wrap\": \"awsui_header-cell-text-wrap_1spae_1sbf1_289\",\n  \"header-cell-ascending\": \"awsui_header-cell-ascending_1spae_1sbf1_295\",\n  \"header-cell-descending\": \"awsui_header-cell-descending_1spae_1sbf1_296\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_1spae_1sbf1_306\",\n  \"has-striped-rows\": \"awsui_has-striped-rows_1spae_1sbf1_320\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { KeyCode } from '../../internal/keycode';\nimport { DEFAULT_COLUMN_WIDTH } from '../use-column-widths';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { getHeaderWidth, getResizerElements } from './resizer-lookup';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context.js';\n\ninterface ResizerProps {\n  onWidthUpdate: (newWidth: number) => void;\n  onWidthUpdateCommit: () => void;\n  ariaLabelledby?: string;\n  minWidth?: number;\n  tabIndex?: number;\n  focusId?: string;\n  showFocusRing?: boolean;\n  roleDescription?: string;\n}\n\nconst AUTO_GROW_START_TIME = 10;\nconst AUTO_GROW_INTERVAL = 10;\nconst AUTO_GROW_INCREMENT = 5;\n\nexport function Divider({ className }: { className?: string }) {\n  return <span className={clsx(styles.divider, styles['divider-disabled'], className)} />;\n}\n\nexport function Resizer({\n  onWidthUpdate,\n  onWidthUpdateCommit,\n  ariaLabelledby,\n  minWidth = DEFAULT_COLUMN_WIDTH,\n  tabIndex,\n  showFocusRing,\n  focusId,\n  roleDescription,\n}: ResizerProps) {\n  onWidthUpdate = useStableCallback(onWidthUpdate);\n  onWidthUpdateCommit = useStableCallback(onWidthUpdateCommit);\n\n  const separatorId = useUniqueId();\n  const resizerToggleRef = useRef<HTMLButtonElement>(null);\n  const resizerSeparatorRef = useRef<HTMLSpanElement>(null);\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [isKeyboardDragging, setIsKeyboardDragging] = useState(false);\n  const autoGrowTimeout = useRef<ReturnType<typeof setTimeout> | undefined>();\n  const [resizerHasFocus, setResizerHasFocus] = useState(false);\n  const [headerCellWidth, setHeaderCellWidth] = useState(0);\n\n  // Read header width after mounting for it to be available in the element's ARIA label before it gets focused.\n  useEffect(() => {\n    setHeaderCellWidth(getHeaderWidth(resizerToggleRef.current));\n  }, []);\n\n  useEffect(() => {\n    const elements = getResizerElements(resizerToggleRef.current);\n    if ((!isDragging && !resizerHasFocus) || !elements) {\n      return;\n    }\n\n    const { left: leftEdge, right: rightEdge } = elements.scrollParent.getBoundingClientRect();\n\n    const updateTrackerPosition = (newOffset: number) => {\n      const { left: scrollParentLeft } = elements.table.getBoundingClientRect();\n      elements.tracker.style.top = elements.header.getBoundingClientRect().height + 'px';\n      // minus one pixel to offset the cell border\n      elements.tracker.style.left = newOffset - scrollParentLeft - 1 + 'px';\n    };\n\n    const updateColumnWidth = (newWidth: number) => {\n      const { right, width } = elements.header.getBoundingClientRect();\n      const updatedWidth = newWidth < minWidth ? minWidth : newWidth;\n      updateTrackerPosition(right + updatedWidth - width);\n      if (newWidth >= minWidth) {\n        setHeaderCellWidth(newWidth);\n      }\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      onWidthUpdate(newWidth);\n    };\n\n    const resizeColumn = (offset: number) => {\n      if (offset > leftEdge) {\n        const cellLeft = elements.header.getBoundingClientRect().left;\n        const newWidth = offset - cellLeft;\n        // callbacks must be the last calls in the handler, because they may cause an extra update\n        updateColumnWidth(newWidth);\n      }\n    };\n\n    const onAutoGrow = () => {\n      const width = elements.header.getBoundingClientRect().width;\n      autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_INTERVAL);\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      updateColumnWidth(width + AUTO_GROW_INCREMENT);\n      elements.scrollParent.scrollLeft += AUTO_GROW_INCREMENT;\n    };\n\n    const onMouseMove = (event: MouseEvent) => {\n      clearTimeout(autoGrowTimeout.current);\n      const offset = event.pageX;\n      if (offset > rightEdge) {\n        autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_START_TIME);\n      } else {\n        resizeColumn(offset);\n      }\n    };\n\n    const onMouseUp = (event: MouseEvent) => {\n      resizeColumn(event.pageX);\n      setIsDragging(false);\n      onWidthUpdateCommit();\n      clearTimeout(autoGrowTimeout.current);\n    };\n\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (isKeyboardDragging) {\n        // Update width\n        if (event.keyCode === KeyCode.left) {\n          event.preventDefault();\n          updateColumnWidth(elements.header.getBoundingClientRect().width - 10);\n        }\n        if (event.keyCode === KeyCode.right) {\n          event.preventDefault();\n          updateColumnWidth(elements.header.getBoundingClientRect().width + 10);\n        }\n        // Exit keyboard dragging mode\n        if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space || event.keyCode === KeyCode.escape) {\n          event.preventDefault();\n          setIsKeyboardDragging(false);\n          resizerToggleRef.current?.focus();\n          // The onWidthUpdateCommit is fired from the separator's blur event handler.\n        }\n      }\n      // Enter keyboard dragging mode\n      else if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {\n        event.preventDefault();\n        setIsKeyboardDragging(true);\n        resizerSeparatorRef.current?.focus();\n      }\n    };\n\n    updateTrackerPosition(elements.header.getBoundingClientRect().right);\n\n    if (isDragging) {\n      document.body.classList.add(styles['resize-active']);\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', onMouseUp);\n    }\n    if (resizerHasFocus) {\n      document.body.classList.add(styles['resize-active-with-focus']);\n      elements.header.addEventListener('keydown', onKeyDown);\n    }\n    if (isKeyboardDragging) {\n      document.body.classList.add(styles['resize-active']);\n    }\n\n    return () => {\n      clearTimeout(autoGrowTimeout.current);\n      document.body.classList.remove(styles['resize-active']);\n      document.body.classList.remove(styles['resize-active-with-focus']);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      elements.header.removeEventListener('keydown', onKeyDown);\n    };\n  }, [minWidth, isDragging, isKeyboardDragging, resizerHasFocus, onWidthUpdate, onWidthUpdateCommit]);\n\n  const { tabIndex: resizerTabIndex } = useSingleTabStopNavigation(resizerToggleRef, { tabIndex });\n\n  return (\n    <>\n      <button\n        ref={resizerToggleRef}\n        className={clsx(\n          styles.resizer,\n          (resizerHasFocus || showFocusRing || isKeyboardDragging) && styles['has-focus']\n        )}\n        onMouseDown={event => {\n          if (event.button !== 0) {\n            return;\n          }\n          event.preventDefault();\n          setIsDragging(true);\n        }}\n        onClick={() => {\n          // Prevent mouse drag activation and activate keyboard dragging for VO+Space click.\n          setIsDragging(false);\n          setResizerHasFocus(true);\n          setIsKeyboardDragging(true);\n          resizerSeparatorRef.current?.focus();\n        }}\n        onFocus={() => {\n          setHeaderCellWidth(getHeaderWidth(resizerToggleRef.current));\n          setResizerHasFocus(true);\n        }}\n        onBlur={event => {\n          // Ignoring blur event when focus moves to the resizer separator element.\n          // (This focus transition is done programmatically when the resizer button is clicked).\n          if (event.relatedTarget !== resizerSeparatorRef.current) {\n            setResizerHasFocus(false);\n          }\n        }}\n        // Using a custom role-description to make the element's purpose better clear.\n        // The role-description must include the word \"button\" to imply the interaction model.\n        // See https://www.w3.org/TR/wai-aria-1.1/#aria-roledescription\n        aria-roledescription={roleDescription}\n        aria-labelledby={ariaLabelledby}\n        tabIndex={resizerTabIndex}\n        data-focus-id={focusId}\n      />\n      <span\n        className={clsx(styles.divider, isDragging && styles['divider-active'])}\n        data-awsui-table-suppress-navigation={true}\n        ref={resizerSeparatorRef}\n        id={separatorId}\n        role=\"separator\"\n        tabIndex={-1}\n        aria-hidden={!isKeyboardDragging}\n        aria-orientation=\"vertical\"\n        aria-valuenow={headerCellWidth}\n        // aria-valuetext is needed because the VO announces \"collapsed\" when only aria-valuenow set without aria-valuemax\n        aria-valuetext={headerCellWidth.toFixed(0)}\n        aria-valuemin={minWidth}\n        data-focus-id={focusId}\n        onBlur={() => {\n          setResizerHasFocus(false);\n          if (isKeyboardDragging) {\n            setIsKeyboardDragging(false);\n          }\n          onWidthUpdateCommit();\n        }}\n      />\n    </>\n  );\n}\n\nexport function ResizeTracker() {\n  return <span className={styles.tracker} />;\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"resize-active\": \"awsui_resize-active_x7peu_sqn6e_99\",\n  \"resize-active-with-focus\": \"awsui_resize-active-with-focus_x7peu_sqn6e_99\",\n  \"divider\": \"awsui_divider_x7peu_sqn6e_104\",\n  \"divider-disabled\": \"awsui_divider-disabled_x7peu_sqn6e_118\",\n  \"divider-active\": \"awsui_divider-active_x7peu_sqn6e_121\",\n  \"resizer\": \"awsui_resizer_x7peu_sqn6e_125\",\n  \"has-focus\": \"awsui_has-focus_x7peu_sqn6e_182\",\n  \"tracker\": \"awsui_tracker_x7peu_sqn6e_205\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useResizeObserver, useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport React, { useEffect, useRef, useState, createContext, useContext } from 'react';\nimport { setElementWidths } from './column-widths-utils';\n\nexport const DEFAULT_COLUMN_WIDTH = 120;\n\nexport interface ColumnWidthDefinition {\n  id: PropertyKey;\n  minWidth?: string | number;\n  maxWidth?: string | number;\n  width?: string | number;\n}\n\nfunction readWidths(\n  getCell: (columnId: PropertyKey) => null | HTMLElement,\n  visibleColumns: readonly ColumnWidthDefinition[]\n) {\n  const result = new Map<PropertyKey, number>();\n  for (let index = 0; index < visibleColumns.length; index++) {\n    const column = visibleColumns[index];\n    let width = (column.width as number) || 0;\n    const minWidth = (column.minWidth as number) || width || DEFAULT_COLUMN_WIDTH;\n    if (\n      !width && // read width from the DOM if it is missing in the config\n      index !== visibleColumns.length - 1 // skip reading for the last column, because it expands to fully fit the container\n    ) {\n      const colEl = getCell(column.id);\n      width = colEl?.getBoundingClientRect().width ?? DEFAULT_COLUMN_WIDTH;\n    }\n    result.set(column.id, Math.max(width, minWidth));\n  }\n  return result;\n}\n\nfunction updateWidths(\n  visibleColumns: readonly ColumnWidthDefinition[],\n  oldWidths: Map<PropertyKey, number>,\n  newWidth: number,\n  columnId: PropertyKey\n) {\n  const column = visibleColumns.find(column => column.id === columnId);\n  const minWidth = typeof column?.minWidth === 'number' ? column.minWidth : DEFAULT_COLUMN_WIDTH;\n  newWidth = Math.max(newWidth, minWidth);\n  if (oldWidths.get(columnId) === newWidth) {\n    return oldWidths;\n  }\n  const newWidths = new Map(oldWidths);\n  newWidths.set(columnId, newWidth);\n  return newWidths;\n}\n\ninterface WidthsContext {\n  getColumnStyles(sticky: boolean, columnId: PropertyKey): React.CSSProperties;\n  columnWidths: Map<PropertyKey, number>;\n  updateColumn: (columnId: PropertyKey, newWidth: number) => void;\n  setCell: (sticky: boolean, columnId: PropertyKey, node: null | HTMLElement) => void;\n}\n\nconst WidthsContext = createContext<WidthsContext>({\n  getColumnStyles: () => ({}),\n  columnWidths: new Map(),\n  updateColumn: () => {},\n  setCell: () => {},\n});\n\ninterface WidthProviderProps {\n  visibleColumns: readonly ColumnWidthDefinition[];\n  resizableColumns: boolean | undefined;\n  containerRef: React.RefObject<HTMLElement>;\n  children: React.ReactNode;\n}\n\nexport function ColumnWidthsProvider({ visibleColumns, resizableColumns, containerRef, children }: WidthProviderProps) {\n  const visibleColumnsRef = useRef<PropertyKey[] | null>(null);\n  const containerWidthRef = useRef(0);\n  const [columnWidths, setColumnWidths] = useState<null | Map<PropertyKey, number>>(null);\n\n  const cellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n  const stickyCellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n  const getCell = (columnId: PropertyKey): null | HTMLElement => cellsRef.current.get(columnId) ?? null;\n  const setCell = (sticky: boolean, columnId: PropertyKey, node: null | HTMLElement) => {\n    const ref = sticky ? stickyCellsRef : cellsRef;\n    if (node) {\n      ref.current.set(columnId, node);\n    } else {\n      ref.current.delete(columnId);\n    }\n  };\n\n  const getColumnStyles = (sticky: boolean, columnId: PropertyKey): React.CSSProperties => {\n    const column = visibleColumns.find(column => column.id === columnId);\n    if (!column) {\n      return {};\n    }\n\n    if (sticky) {\n      return { width: cellsRef.current.get(column.id)?.offsetWidth || (columnWidths?.get(column.id) ?? column.width) };\n    }\n\n    if (resizableColumns && columnWidths) {\n      const isLastColumn = column.id === visibleColumns[visibleColumns.length - 1]?.id;\n      const totalWidth = visibleColumns.reduce(\n        (sum, { id }) => sum + (columnWidths.get(id) || DEFAULT_COLUMN_WIDTH),\n        0\n      );\n      if (isLastColumn && containerWidthRef.current > totalWidth) {\n        return { width: 'auto', minWidth: column?.minWidth };\n      } else {\n        return { width: columnWidths.get(column.id), minWidth: column?.minWidth };\n      }\n    }\n    return {\n      width: column.width,\n      minWidth: column.minWidth,\n      maxWidth: !resizableColumns ? column.maxWidth : undefined,\n    };\n  };\n\n  // Imperatively sets width style for a cell avoiding React state.\n  // This allows setting the style as soon container's size change is observed.\n  const updateColumnWidths = useStableCallback(() => {\n    for (const { id } of visibleColumns) {\n      const element = cellsRef.current.get(id);\n      if (element) {\n        setElementWidths(element, getColumnStyles(false, id));\n      }\n    }\n    // Sticky column widths must be synchronized once all real column widths are assigned.\n    for (const { id } of visibleColumns) {\n      const element = stickyCellsRef.current.get(id);\n      if (element) {\n        setElementWidths(element, getColumnStyles(true, id));\n      }\n    }\n  });\n\n  // Observes container size and requests an update to the last cell width as it depends on the container's width.\n  useResizeObserver(containerRef, ({ contentBoxWidth: containerWidth }) => {\n    containerWidthRef.current = containerWidth;\n    updateColumnWidths();\n  });\n\n  // The widths of the dynamically added columns (after the first render) if not set explicitly\n  // will default to the DEFAULT_COLUMN_WIDTH.\n  useEffect(() => {\n    updateColumnWidths();\n\n    if (!resizableColumns) {\n      return;\n    }\n    let updated = false;\n    const newColumnWidths = new Map(columnWidths);\n    const lastVisible = visibleColumnsRef.current;\n    if (lastVisible) {\n      for (let index = 0; index < visibleColumns.length; index++) {\n        const column = visibleColumns[index];\n        if (!columnWidths?.get(column.id) && lastVisible.indexOf(column.id) === -1) {\n          updated = true;\n          newColumnWidths.set(column.id, (column.width as number) || DEFAULT_COLUMN_WIDTH);\n        }\n      }\n      if (updated) {\n        setColumnWidths(newColumnWidths);\n      }\n    }\n    visibleColumnsRef.current = visibleColumns.map(column => column.id);\n  }, [columnWidths, resizableColumns, visibleColumns, updateColumnWidths]);\n\n  // Read the actual column widths after the first render to employ the browser defaults for\n  // those columns without explicit width.\n  useEffect(() => {\n    if (!resizableColumns) {\n      return;\n    }\n    setColumnWidths(() => readWidths(getCell, visibleColumns));\n    // This code is intended to run only at the first render and should not re-run when table props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function updateColumn(columnId: PropertyKey, newWidth: number) {\n    setColumnWidths(columnWidths => updateWidths(visibleColumns, columnWidths ?? new Map(), newWidth, columnId));\n  }\n\n  return (\n    <WidthsContext.Provider value={{ getColumnStyles, columnWidths: columnWidths ?? new Map(), updateColumn, setCell }}>\n      {children}\n    </WidthsContext.Provider>\n  );\n}\n\nexport function useColumnWidths() {\n  return useContext(WidthsContext);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { TableProps } from './interfaces';\n\nexport function checkColumnWidths(columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>) {\n  for (const column of columnDefinitions) {\n    checkProperty(column, 'minWidth');\n    checkProperty(column, 'width');\n  }\n}\n\nexport function setElementWidths(element: HTMLElement, styles: React.CSSProperties) {\n  function setProperty(property: 'width' | 'minWidth' | 'maxWidth') {\n    const value = styles[property];\n    let widthCssValue = '';\n    if (typeof value === 'number') {\n      widthCssValue = value + 'px';\n    }\n    if (typeof value === 'string') {\n      widthCssValue = value;\n    }\n    if (element.style[property] !== widthCssValue) {\n      element.style[property] = widthCssValue;\n    }\n  }\n  setProperty('width');\n  setProperty('minWidth');\n  setProperty('maxWidth');\n}\n\nfunction checkProperty(column: TableProps.ColumnDefinition<any>, name: 'width' | 'minWidth') {\n  const value = column[name];\n  if (typeof value !== 'number' && typeof value !== 'undefined') {\n    warnOnce(\n      'Table',\n      `resizableColumns feature requires ${name} property to be a number, got ${value}. The component may work incorrectly.`\n    );\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\nimport tableStyles from '../styles.css.js';\nimport resizerStyles from './styles.css.js';\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers.js';\n\nexport function getResizerElements(resizerElement: null | HTMLElement) {\n  if (!resizerElement) {\n    return null;\n  }\n\n  const header = findUpUntil(resizerElement, element => element.tagName.toLowerCase() === 'th');\n  if (!header) {\n    return null;\n  }\n\n  const tableRoot = findUpUntil(header, element => element.className.indexOf(tableStyles.root) > -1);\n  if (!tableRoot) {\n    return null;\n  }\n\n  const table = tableRoot.querySelector<HTMLElement>(`table`);\n  if (!table) {\n    return null;\n  }\n\n  // tracker is rendered inside table wrapper to align with its size\n  const tracker = tableRoot.querySelector<HTMLElement>(`.${resizerStyles.tracker}`);\n  if (!tracker) {\n    return null;\n  }\n\n  const scrollParent = getOverflowParents(header)[0];\n  if (!scrollParent) {\n    return null;\n  }\n\n  return { header, table, tracker, scrollParent };\n}\n\nexport function getHeaderWidth(resizerElement: null | HTMLElement): number {\n  const header = resizerElement && findUpUntil(resizerElement, element => element.tagName.toLowerCase() === 'th');\n  return header?.getBoundingClientRect().width ?? 0;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport { SortingStatus } from './utils';\nimport styles from './styles.css.js';\nimport { getStickyClassNames } from '../utils';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { TableRole, getTableColHeaderRoleProps } from '../table-role';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\n\ninterface TableThElementProps {\n  className?: string;\n  style?: React.CSSProperties;\n  sortingStatus?: SortingStatus;\n  sortingDisabled?: boolean;\n  focusedComponent?: null | string;\n  hidden?: boolean;\n  colIndex: number;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  cellRef?: React.RefCallback<HTMLElement>;\n  tableRole: TableRole;\n  children: React.ReactNode;\n}\n\nexport function TableThElement({\n  className,\n  style,\n  sortingStatus,\n  sortingDisabled,\n  focusedComponent,\n  hidden,\n  colIndex,\n  columnId,\n  stickyState,\n  cellRef,\n  tableRole,\n  children,\n}: TableThElementProps) {\n  const stickyStyles = useStickyCellStyles({\n    stickyColumns: stickyState,\n    columnId,\n    getClassName: props => getStickyClassNames(styles, props),\n  });\n\n  const cellRefObject = useRef<HTMLTableCellElement>(null);\n  const mergedRef = useMergeRefs(stickyStyles.ref, cellRef, cellRefObject);\n  const { tabIndex: cellTabIndex } = useSingleTabStopNavigation(cellRefObject);\n\n  return (\n    <th\n      data-focus-id={`header-${String(columnId)}`}\n      className={clsx(\n        className,\n        {\n          [styles['header-cell-fake-focus']]: focusedComponent === `header-${String(columnId)}`,\n          [styles['header-cell-sortable']]: sortingStatus,\n          [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n          [styles['header-cell-disabled']]: sortingDisabled,\n          [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n          [styles['header-cell-descending']]: sortingStatus === 'descending',\n          [styles['header-cell-hidden']]: hidden,\n        },\n        stickyStyles.className\n      )}\n      style={{ ...style, ...stickyStyles.style }}\n      ref={mergedRef}\n      {...getTableColHeaderRoleProps({ tableRole, sortingStatus, colIndex })}\n      tabIndex={cellTabIndex}\n    >\n      {children}\n    </th>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport AsyncStore, { ReadonlyAsyncStore } from '../../area-chart/async-store';\nimport clsx from 'clsx';\nimport { useResizeObserver, useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport {\n  CellOffsets,\n  StickyColumnsCellState,\n  StickyColumnsProps,\n  StickyColumnsState,\n  StickyColumnsWrapperState,\n} from './interfaces';\nimport { isCellStatesEqual, isWrapperStatesEqual, updateCellOffsets } from './utils';\n\n// We allow the table to have a minimum of 148px of available space besides the sum of the widths of the sticky columns\n// This value is an UX recommendation and is approximately 1/3 of our smallest breakpoint (465px)\nconst MINIMUM_SCROLLABLE_SPACE = 148;\n\nexport interface StickyColumnsModel {\n  store: ReadonlyAsyncStore<StickyColumnsState>;\n  style: {\n    wrapper?: React.CSSProperties;\n  };\n  refs: {\n    table: React.RefCallback<HTMLElement>;\n    wrapper: React.RefCallback<HTMLElement>;\n    cell: (columnId: PropertyKey, node: null | HTMLElement) => void;\n  };\n}\n\nexport function useStickyColumns({\n  visibleColumns,\n  stickyColumnsFirst,\n  stickyColumnsLast,\n}: StickyColumnsProps): StickyColumnsModel {\n  const store = useMemo(() => new StickyColumnsStore(), []);\n  const wrapperRef = useRef<HTMLElement>(null) as React.MutableRefObject<null | HTMLElement>;\n  const tableRef = useRef<HTMLElement>(null) as React.MutableRefObject<null | HTMLElement>;\n  const cellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n\n  const hasStickyColumns = stickyColumnsFirst + stickyColumnsLast > 0;\n\n  const updateStickyStyles = useStableCallback(() => {\n    if (wrapperRef.current && tableRef.current) {\n      store.updateCellStyles({\n        wrapper: wrapperRef.current,\n        table: tableRef.current,\n        cells: cellsRef.current,\n        visibleColumns,\n        stickyColumnsFirst,\n        stickyColumnsLast,\n      });\n    }\n  });\n\n  useResizeObserver(wrapperRef, updateStickyStyles);\n\n  useResizeObserver(tableRef, updateStickyStyles);\n\n  useEffect(() => {\n    if (wrapperRef.current && tableRef.current) {\n      store.updateCellStyles({\n        wrapper: wrapperRef.current,\n        table: tableRef.current,\n        cells: cellsRef.current,\n        visibleColumns,\n        stickyColumnsFirst,\n        stickyColumnsLast,\n      });\n    }\n  }, [store, stickyColumnsFirst, stickyColumnsLast, visibleColumns]);\n\n  // Update wrapper styles imperatively to avoid unnecessary re-renders.\n  useEffect(() => {\n    if (!hasStickyColumns) {\n      return;\n    }\n\n    const selector = (state: StickyColumnsState) => state.wrapperState;\n\n    const updateWrapperStyles = (state: StickyColumnsWrapperState, prev: StickyColumnsWrapperState) => {\n      if (isWrapperStatesEqual(state, prev)) {\n        return;\n      }\n\n      if (wrapperRef.current) {\n        wrapperRef.current.style.scrollPaddingLeft = state.scrollPaddingLeft + 'px';\n        wrapperRef.current.style.scrollPaddingRight = state.scrollPaddingRight + 'px';\n      }\n    };\n\n    const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n      updateWrapperStyles(selector(newState), selector(prevState))\n    );\n    return unsubscribe;\n  }, [store, hasStickyColumns]);\n\n  const setWrapper = useCallback(\n    (node: null | HTMLElement) => {\n      if (wrapperRef.current) {\n        wrapperRef.current.removeEventListener('scroll', updateStickyStyles);\n      }\n      if (node && hasStickyColumns) {\n        node.addEventListener('scroll', updateStickyStyles);\n      }\n      wrapperRef.current = node;\n    },\n    [hasStickyColumns, updateStickyStyles]\n  );\n\n  const setTable = useCallback((node: null | HTMLElement) => {\n    tableRef.current = node;\n  }, []);\n\n  const setCell = useCallback((columnId: PropertyKey, node: null | HTMLElement) => {\n    if (node) {\n      cellsRef.current.set(columnId, node);\n    } else {\n      cellsRef.current.delete(columnId);\n    }\n  }, []);\n\n  return {\n    store,\n    style: {\n      // Provide wrapper styles as props so that a re-render won't cause invalidation.\n      wrapper: hasStickyColumns ? { ...store.get().wrapperState } : undefined,\n    },\n    refs: { wrapper: setWrapper, table: setTable, cell: setCell },\n  };\n}\n\ninterface UseStickyCellStylesProps {\n  stickyColumns: StickyColumnsModel;\n  columnId: PropertyKey;\n  getClassName: (styles: null | StickyColumnsCellState) => Record<string, boolean>;\n}\n\ninterface StickyCellStyles {\n  ref: React.RefCallback<HTMLElement>;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport function useStickyCellStyles({\n  stickyColumns,\n  columnId,\n  getClassName,\n}: UseStickyCellStylesProps): StickyCellStyles {\n  const setCell = stickyColumns.refs.cell;\n\n  // unsubscribeRef to hold the function to unsubscribe from the store's updates\n  const unsubscribeRef = useRef<null | (() => void)>(null);\n\n  // refCallback updates the cell ref and sets up the store subscription\n  const refCallback = useCallback(\n    (cellElement: null | HTMLElement) => {\n      if (unsubscribeRef.current) {\n        // Unsubscribe before we do any updates to avoid leaving any subscriptions hanging\n        unsubscribeRef.current();\n      }\n\n      // Update cellRef and the store's state to point to the new DOM node\n      setCell(columnId, cellElement);\n\n      // Update cell styles imperatively to avoid unnecessary re-renders.\n      const selector = (state: StickyColumnsState) => state.cellState.get(columnId) ?? null;\n\n      const updateCellStyles = (state: null | StickyColumnsCellState, prev: null | StickyColumnsCellState) => {\n        if (isCellStatesEqual(state, prev)) {\n          return;\n        }\n\n        const className = getClassName(state);\n        if (cellElement) {\n          Object.keys(className).forEach(key => {\n            if (className[key]) {\n              cellElement.classList.add(key);\n            } else {\n              cellElement.classList.remove(key);\n            }\n          });\n          cellElement.style.left = state?.offset.left !== undefined ? `${state.offset.left}px` : '';\n          cellElement.style.right = state?.offset.right !== undefined ? `${state.offset.right}px` : '';\n        }\n      };\n\n      // If the node is not null (i.e., the table cell is being mounted or updated, not unmounted),\n      // set up a new subscription to the store's updates\n      if (cellElement) {\n        unsubscribeRef.current = stickyColumns.store.subscribe(selector, (newState, prevState) => {\n          updateCellStyles(selector(newState), selector(prevState));\n        });\n      }\n    },\n\n    // getClassName is expected to be pure\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columnId, setCell, stickyColumns.store]\n  );\n\n  // Provide cell styles as props so that a re-render won't cause invalidation.\n  const cellStyles = stickyColumns.store.get().cellState.get(columnId);\n  return {\n    ref: refCallback,\n    className: cellStyles ? clsx(getClassName(cellStyles)) : undefined,\n    style: cellStyles?.offset ?? undefined,\n  };\n}\n\ninterface UpdateCellStylesProps {\n  wrapper: HTMLElement;\n  table: HTMLElement;\n  cells: Map<PropertyKey, HTMLElement>;\n  visibleColumns: readonly PropertyKey[];\n  stickyColumnsFirst: number;\n  stickyColumnsLast: number;\n}\n\nexport default class StickyColumnsStore extends AsyncStore<StickyColumnsState> {\n  private cellOffsets: CellOffsets = {\n    offsets: new Map(),\n    stickyWidthLeft: 0,\n    stickyWidthRight: 0,\n  };\n  private isStuckToTheLeft = false;\n  private isStuckToTheRight = false;\n  private padLeft = false;\n\n  constructor() {\n    super({ cellState: new Map(), wrapperState: { scrollPaddingLeft: 0, scrollPaddingRight: 0 } });\n  }\n\n  public updateCellStyles(props: UpdateCellStylesProps) {\n    const hasStickyColumns = props.stickyColumnsFirst + props.stickyColumnsLast > 0;\n    const hadStickyColumns = this.cellOffsets.offsets.size > 0;\n\n    if (hasStickyColumns || hadStickyColumns) {\n      this.updateScroll(props);\n      this.updateCellOffsets(props);\n      this.set(() => ({\n        cellState: this.generateCellStyles(props),\n        wrapperState: {\n          scrollPaddingLeft: this.cellOffsets.stickyWidthLeft,\n          scrollPaddingRight: this.cellOffsets.stickyWidthRight,\n        },\n      }));\n    }\n  }\n\n  private updateScroll(props: UpdateCellStylesProps) {\n    const wrapperScrollLeft = props.wrapper.scrollLeft;\n    const wrapperScrollWidth = props.wrapper.scrollWidth;\n    const wrapperClientWidth = props.wrapper.clientWidth;\n    const tablePaddingLeft = parseFloat(getComputedStyle(props.table).paddingLeft) || 0;\n    const tablePaddingRight = parseFloat(getComputedStyle(props.table).paddingRight) || 0;\n\n    this.isStuckToTheLeft = wrapperScrollLeft > tablePaddingLeft;\n\n    // Math.ceil() is used here to address an edge-case in certain browsers, where they return non-integer wrapperScrollLeft values\n    // which are lower than expected (sub-pixel difference), resulting in the table always being in the \"stuck to the right\" state\n    this.isStuckToTheRight = Math.ceil(wrapperScrollLeft) < wrapperScrollWidth - wrapperClientWidth - tablePaddingRight;\n\n    this.padLeft = tablePaddingLeft !== 0 && this.isStuckToTheLeft;\n  }\n\n  private generateCellStyles = (props: UpdateCellStylesProps): Map<PropertyKey, StickyColumnsCellState> => {\n    const isEnabled = this.isEnabled(props);\n    const lastLeftStickyColumnIndex = props.stickyColumnsFirst - 1;\n    const lastRightStickyColumnIndex = props.visibleColumns.length - props.stickyColumnsLast;\n\n    return props.visibleColumns.reduce((acc, columnId, index) => {\n      let stickySide = 'non-sticky';\n      if (index < props.stickyColumnsFirst) {\n        stickySide = 'left';\n      } else if (index >= props.visibleColumns.length - props.stickyColumnsLast) {\n        stickySide = 'right';\n      }\n\n      if (!isEnabled || stickySide === 'non-sticky') {\n        return acc;\n      }\n\n      // Determine the offset of the sticky column using the `cellOffsets` state object\n      const isFirstColumn = index === 0;\n      const stickyColumnOffsetLeft = this.cellOffsets.offsets.get(columnId)?.first ?? 0;\n      const stickyColumnOffsetRight = this.cellOffsets.offsets.get(columnId)?.last ?? 0;\n\n      acc.set(columnId, {\n        padLeft: isFirstColumn && this.padLeft,\n        lastLeft: this.isStuckToTheLeft && lastLeftStickyColumnIndex === index,\n        lastRight: this.isStuckToTheRight && lastRightStickyColumnIndex === index,\n        offset: {\n          left: stickySide === 'left' ? stickyColumnOffsetLeft : undefined,\n          right: stickySide === 'right' ? stickyColumnOffsetRight : undefined,\n        },\n      });\n      return acc;\n    }, new Map<PropertyKey, StickyColumnsCellState>());\n  };\n\n  private updateCellOffsets = (props: UpdateCellStylesProps): void => {\n    this.cellOffsets = updateCellOffsets(props.cells, props);\n  };\n\n  private isEnabled = (props: UpdateCellStylesProps): boolean => {\n    const noStickyColumns = props.stickyColumnsFirst + props.stickyColumnsLast === 0;\n    if (noStickyColumns) {\n      return false;\n    }\n\n    const wrapperWidth = props.wrapper.getBoundingClientRect().width;\n    const tableWidth = props.table.getBoundingClientRect().width;\n    const isWrapperScrollable = tableWidth > wrapperWidth;\n    if (!isWrapperScrollable) {\n      return false;\n    }\n\n    const totalStickySpace = this.cellOffsets.stickyWidthLeft + this.cellOffsets.stickyWidthRight;\n    const tablePaddingLeft = parseFloat(getComputedStyle(props.table).paddingLeft) || 0;\n    const tablePaddingRight = parseFloat(getComputedStyle(props.table).paddingRight) || 0;\n    const hasEnoughScrollableSpace =\n      totalStickySpace + MINIMUM_SCROLLABLE_SPACE + tablePaddingLeft + tablePaddingRight < wrapperWidth;\n    if (!hasEnoughScrollableSpace) {\n      return false;\n    }\n\n    return true;\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { usePrevious } from '../../internal/hooks/use-previous';\n\ntype Selector<S, R> = (state: S) => R;\ntype Listener<S> = (state: S, prevState: S) => void;\n\nexport interface ReadonlyAsyncStore<S> {\n  get(): S;\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void;\n  unsubscribe(listener: Listener<S>): void;\n}\n\nexport default class AsyncStore<S> implements ReadonlyAsyncStore<S> {\n  _state: S;\n  _listeners: [Selector<S, unknown>, Listener<S>][] = [];\n\n  constructor(state: S) {\n    this._state = state;\n  }\n\n  get(): S {\n    return this._state;\n  }\n\n  set(cb: (state: S) => S): void {\n    const prevState = this._state;\n    const newState = cb(prevState);\n\n    this._state = newState;\n\n    unstable_batchedUpdates(() => {\n      for (const [selector, listener] of this._listeners) {\n        if (selector(prevState) !== selector(newState)) {\n          listener(newState, prevState);\n        }\n      }\n    });\n  }\n\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void {\n    this._listeners.push([selector, listener]);\n\n    return () => this.unsubscribe(listener);\n  }\n\n  unsubscribe(listener: Listener<S>): void {\n    for (let index = 0; index < this._listeners.length; index++) {\n      const [, storedListener] = this._listeners[index];\n\n      if (storedListener === listener) {\n        this._listeners.splice(index, 1);\n        break;\n      }\n    }\n  }\n}\n\nexport function useReaction<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>, effect: Listener<R>): void {\n  useLayoutEffect(\n    () => {\n      const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n        effect(selector(newState), selector(prevState))\n      );\n      return unsubscribe;\n    },\n    // ignoring selector and effect as they are expected to stay constant\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [store]\n  );\n}\n\nexport function useSelector<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>): R {\n  const [state, setState] = useState<R>(selector(store.get()));\n\n  useReaction(store, selector, newState => {\n    setState(newState);\n  });\n\n  // When store changes we need the state to be updated synchronously to avoid inconsistencies.\n  const prevStore = usePrevious(store);\n  if (prevStore !== null && prevStore !== store) {\n    return selector(store.get());\n  }\n\n  return state;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\n\n/**\n * This hook gives the value of any variable from the previous render invocation\n */\nexport const usePrevious = <T>(value: T) => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { CellOffsets, StickyColumnsCellState, StickyColumnsProps, StickyColumnsWrapperState } from './interfaces';\n\nexport function isCellStatesEqual(s1: null | StickyColumnsCellState, s2: null | StickyColumnsCellState): boolean {\n  if (s1 && s2) {\n    return (\n      s1.padLeft === s2.padLeft &&\n      s1.lastLeft === s2.lastLeft &&\n      s1.lastRight === s2.lastRight &&\n      s1.offset.left === s2.offset.left &&\n      s1.offset.right === s2.offset.right\n    );\n  }\n  return s1 === s2;\n}\n\nexport function isWrapperStatesEqual(s1: StickyColumnsWrapperState, s2: StickyColumnsWrapperState): boolean {\n  return s1.scrollPaddingLeft === s2.scrollPaddingLeft && s1.scrollPaddingRight === s2.scrollPaddingRight;\n}\n\nexport function updateCellOffsets(cells: Map<PropertyKey, HTMLElement>, props: StickyColumnsProps): CellOffsets {\n  const totalColumns = props.visibleColumns.length;\n\n  const firstColumnsWidths: number[] = [];\n  for (let i = 0; i < Math.min(totalColumns, props.stickyColumnsFirst); i++) {\n    const element = cells.get(props.visibleColumns[i]);\n    const cellWidth = element?.getBoundingClientRect().width ?? 0;\n    firstColumnsWidths[i] = (firstColumnsWidths[i - 1] ?? 0) + cellWidth;\n  }\n\n  const lastColumnsWidths: number[] = [];\n  for (let i = 0; i < Math.min(totalColumns, props.stickyColumnsLast); i++) {\n    const element = cells.get(props.visibleColumns[totalColumns - 1 - i]);\n    const cellWidth = element?.getBoundingClientRect().width ?? 0;\n    lastColumnsWidths[i] = (lastColumnsWidths[i - 1] ?? 0) + cellWidth;\n  }\n\n  const stickyWidthLeft = firstColumnsWidths[props.stickyColumnsFirst - 1] ?? 0;\n  const stickyWidthRight = lastColumnsWidths[props.stickyColumnsLast - 1] ?? 0;\n  const offsets = props.visibleColumns.reduce(\n    (map, columnId, columnIndex) =>\n      map.set(columnId, {\n        first: firstColumnsWidths[columnIndex - 1] ?? 0,\n        last: lastColumnsWidths[totalColumns - 1 - columnIndex - 1] ?? 0,\n      }),\n    new Map()\n  );\n\n  return { offsets, stickyWidthLeft, stickyWidthRight };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { TableRole } from './interfaces';\n\ntype SortingStatus = 'sortable' | 'ascending' | 'descending';\n\nconst stateToAriaSort = {\n  sortable: 'none',\n  ascending: 'ascending',\n  descending: 'descending',\n} as const;\nconst getAriaSort = (sortingState: SortingStatus) => stateToAriaSort[sortingState];\n\n// Depending on its content the table can have different semantic representation which includes the\n// ARIA role of the table component (\"table\", \"grid\", \"treegrid\") but also roles and other semantic attributes\n// of the child elements. The TableRole helper encapsulates table's semantic structure.\n\nexport function getTableRoleProps(options: {\n  tableRole: TableRole;\n  ariaLabel?: string;\n  ariaLabelledBy?: string;\n  totalItemsCount?: number;\n  totalColumnsCount?: number;\n}): React.TableHTMLAttributes<HTMLTableElement> {\n  const nativeProps: React.TableHTMLAttributes<HTMLTableElement> = {};\n\n  // Browsers have weird mechanism to guess whether it's a data table or a layout table.\n  // If we state explicitly, they get it always correctly even with low number of rows.\n  nativeProps.role = options.tableRole === 'grid-default' ? 'grid' : options.tableRole;\n\n  nativeProps['aria-label'] = options.ariaLabel;\n  nativeProps['aria-labelledby'] = options.ariaLabelledBy;\n\n  // Incrementing the total count by one to account for the header row.\n  nativeProps['aria-rowcount'] = options.totalItemsCount ? options.totalItemsCount + 1 : -1;\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colcount'] = options.totalColumnsCount;\n  }\n\n  // Make table component programmatically focusable to attach focusin/focusout for keyboard navigation.\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps.tabIndex = -1;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableWrapperRoleProps(options: { tableRole: TableRole; isScrollable: boolean; ariaLabel?: string }) {\n  const nativeProps: React.HTMLAttributes<HTMLDivElement> = {};\n\n  // When the table is scrollable, the wrapper is made focusable so that keyboard users can scroll it horizontally with arrow keys.\n  if (options.isScrollable) {\n    nativeProps.role = 'region';\n    nativeProps.tabIndex = 0;\n    nativeProps['aria-label'] = options.ariaLabel;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableHeaderRowRoleProps(options: { tableRole: TableRole }) {\n  const nativeProps: React.HTMLAttributes<HTMLTableRowElement> = {};\n\n  // For grids headers are treated similar to data rows and are indexed accordingly.\n  if (options.tableRole === 'grid' || options.tableRole === 'grid-default' || options.tableRole === 'treegrid') {\n    nativeProps['aria-rowindex'] = 1;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableRowRoleProps(options: {\n  tableRole: TableRole;\n  rowIndex: number;\n  firstIndex?: number;\n  level?: number;\n  setSize?: number;\n  posInSet?: number;\n}) {\n  const nativeProps: React.HTMLAttributes<HTMLTableRowElement> = {};\n\n  // The data cell indices are incremented by 1 to account for the header cells.\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-rowindex'] = (options.firstIndex || 1) + options.rowIndex + 1;\n  }\n  // For tables indices are only added when the first index is not 0 (not the first page/frame).\n  else if (options.firstIndex !== undefined) {\n    nativeProps['aria-rowindex'] = options.firstIndex + options.rowIndex + 1;\n  }\n  if (options.tableRole === 'treegrid' && options.level && options.level !== 0) {\n    nativeProps['aria-level'] = options.level;\n  }\n  if (options.tableRole === 'treegrid' && options.setSize) {\n    nativeProps['aria-setsize'] = options.setSize;\n  }\n  if (options.tableRole === 'treegrid' && options.posInSet) {\n    nativeProps['aria-posinset'] = options.posInSet;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableColHeaderRoleProps(options: {\n  tableRole: TableRole;\n  colIndex: number;\n  sortingStatus?: SortingStatus;\n}) {\n  const nativeProps: React.ThHTMLAttributes<HTMLTableCellElement> = {};\n\n  nativeProps.scope = 'col';\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colindex'] = options.colIndex + 1;\n  }\n\n  if (options.sortingStatus) {\n    nativeProps['aria-sort'] = getAriaSort(options.sortingStatus);\n  }\n\n  return nativeProps;\n}\n\nexport function getTableCellRoleProps(options: { tableRole: TableRole; colIndex: number; isRowHeader?: boolean }) {\n  const nativeProps: React.TdHTMLAttributes<HTMLTableCellElement> = {};\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colindex'] = options.colIndex + 1;\n  }\n\n  if (options.isRowHeader) {\n    nativeProps.scope = 'row';\n  }\n\n  return nativeProps;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { useEffect, useMemo } from 'react';\nimport {\n  defaultIsSuppressed,\n  findTableRowByAriaRowIndex,\n  findTableRowCellByAriaColIndex,\n  getClosestCell,\n  isElementDisabled,\n  isTableCell,\n} from './utils';\nimport { FocusedCell, GridNavigationProps } from './interfaces';\nimport { KeyCode } from '../../internal/keycode';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { nodeBelongs } from '../../internal/utils/node-belongs';\nimport { getAllFocusables } from '../../internal/components/focus-lock/utils';\nimport {\n  SingleTabStopNavigationContext,\n  FocusableChangeHandler,\n} from '../../internal/context/single-tab-stop-navigation-context';\n\n/**\n * Makes table navigable with keyboard commands.\n * See grid-navigation.md\n */\nexport function GridNavigationProvider({ keyboardNavigation, pageSize, getTable, children }: GridNavigationProps) {\n  const gridNavigation = useMemo(() => new GridNavigationProcessor(), []);\n\n  const getTableStable = useStableCallback(getTable);\n\n  // Initialize the processor with the table container assuming it is mounted synchronously and only once.\n  useEffect(() => {\n    if (keyboardNavigation) {\n      const table = getTableStable();\n      table && gridNavigation.init(table);\n    }\n    return () => gridNavigation.cleanup();\n  }, [keyboardNavigation, gridNavigation, getTableStable]);\n\n  // Notify the processor of the props change.\n  useEffect(() => {\n    gridNavigation.update({ pageSize });\n  }, [gridNavigation, pageSize]);\n\n  // Notify the processor of the new render.\n  useEffect(() => {\n    if (keyboardNavigation) {\n      gridNavigation.refresh();\n    }\n  });\n\n  return (\n    <SingleTabStopNavigationContext.Provider\n      value={{\n        navigationActive: keyboardNavigation,\n        registerFocusable: gridNavigation.registerFocusable,\n      }}\n    >\n      {children}\n    </SingleTabStopNavigationContext.Provider>\n  );\n}\n\n/**\n * This helper encapsulates the grid navigation behaviors which are:\n * 1. Responding to keyboard commands and moving the focus accordingly;\n * 2. Muting table interactive elements for only one to be user-focusable at a time;\n * 3. Suppressing the above behaviors when focusing an element inside a dialog or when instructed explicitly.\n */\nclass GridNavigationProcessor {\n  // Props\n  private _pageSize = 0;\n  private _table: null | HTMLTableElement = null;\n\n  // State\n  private focusedCell: null | FocusedCell = null;\n  private keepUserIndex = false;\n  private focusables = new Set<Element>();\n  private focusHandlers = new Map<Element, FocusableChangeHandler>();\n  private focusablesState = new WeakMap<Element, boolean>();\n  private focusTarget: null | Element = null;\n\n  public init(table: HTMLTableElement) {\n    this._table = table;\n\n    this.table.addEventListener('focusin', this.onFocusin);\n    this.table.addEventListener('focusout', this.onFocusout);\n    this.table.addEventListener('keydown', this.onKeydown);\n\n    this.updateFocusTarget();\n\n    this.cleanup = () => {\n      this.table.removeEventListener('focusin', this.onFocusin);\n      this.table.removeEventListener('focusout', this.onFocusout);\n      this.table.removeEventListener('keydown', this.onKeydown);\n      this.focusables.forEach(this.unregisterFocusable);\n    };\n  }\n\n  public cleanup() {\n    // Do nothing before initialized.\n  }\n\n  public update({ pageSize }: { pageSize: number }) {\n    this._pageSize = pageSize;\n  }\n\n  public refresh() {\n    // Timeout ensures the newly rendered content elements are registered.\n    setTimeout(() => {\n      if (this._table) {\n        // Update focused cell indices in case table rows, columns, or firstIndex change.\n        this.updateFocusedCell(this.focusedCell?.element);\n        this.updateFocusTarget();\n      }\n    }, 0);\n  }\n\n  public registerFocusable = (focusableElement: HTMLElement, changeHandler: FocusableChangeHandler) => {\n    this.focusables.add(focusableElement);\n    this.focusHandlers.set(focusableElement, changeHandler);\n    const isFocusable = this.focusablesState.get(focusableElement) ?? false;\n    const newIsFocusable = this.focusTarget === focusableElement || this.isSuppressed(focusableElement);\n    if (newIsFocusable !== isFocusable) {\n      this.focusablesState.set(focusableElement, newIsFocusable);\n      changeHandler(newIsFocusable);\n    }\n    // When newly registered element belongs to the focused cell the focus must transition to it.\n    const focusedElement = this.focusedCell?.element;\n    if (focusedElement && isTableCell(focusedElement) && focusedElement.contains(focusableElement)) {\n      // Scroll is unnecessary when moving focus from a cell to element within the cell.\n      focusableElement.focus({ preventScroll: true });\n    }\n    return () => this.unregisterFocusable(focusableElement);\n  };\n\n  public unregisterFocusable = (focusable: Element) => {\n    this.focusables.delete(focusable);\n    this.focusHandlers.delete(focusable);\n  };\n\n  private get pageSize() {\n    return this._pageSize;\n  }\n\n  private get table(): HTMLTableElement {\n    if (!this._table) {\n      throw new Error('Invariant violation: GridNavigationProcessor is used before initialization.');\n    }\n    return this._table;\n  }\n\n  private onFocusin = (event: FocusEvent) => {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n\n    this.updateFocusedCell(event.target);\n    if (!this.focusedCell) {\n      return;\n    }\n\n    this.updateFocusTarget();\n\n    // Focusing on cell is not eligible when it contains focusable elements in the content.\n    // If content focusables are available - move the focus to the first one.\n    const focusedElement = this.focusedCell.element;\n    const nextTarget = isTableCell(focusedElement) ? this.getFocusablesFrom(focusedElement)[0] : null;\n    if (nextTarget) {\n      // Scroll is unnecessary when moving focus from a cell to element within the cell.\n      nextTarget.focus({ preventScroll: true });\n    } else {\n      this.keepUserIndex = false;\n    }\n  };\n\n  private onFocusout = () => {\n    // When focus leaves the cell and the cell no longer belong to the table it indicates the focused element has been unmounted.\n    // In that case the focus needs to be restored on the same coordinates.\n    setTimeout(() => {\n      if (this.focusedCell && !nodeBelongs(this.table, this.focusedCell.element)) {\n        this.moveFocusBy(this.focusedCell, { x: 0, y: 0 });\n      }\n    }, 0);\n  };\n\n  private onKeydown = (event: KeyboardEvent) => {\n    if (!this.focusedCell) {\n      return;\n    }\n\n    const ctrlKey = event.ctrlKey ? 1 : 0;\n    const altKey = event.altKey ? 1 : 0;\n    const shiftKey = event.shiftKey ? 1 : 0;\n    const metaKey = event.metaKey ? 1 : 0;\n    const numModifiersPressed = ctrlKey + altKey + shiftKey + metaKey;\n\n    let key = event.keyCode;\n    if (numModifiersPressed === 1 && event.ctrlKey) {\n      key = -key;\n    } else if (numModifiersPressed) {\n      return;\n    }\n\n    const from = this.focusedCell;\n\n    if (this.isSuppressed(document.activeElement) || !this.isRegistered(document.activeElement)) {\n      return;\n    }\n\n    switch (key) {\n      case KeyCode.up:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: -1, x: 0 });\n\n      case KeyCode.down:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: 1, x: 0 });\n\n      case KeyCode.left:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: 0, x: -1 });\n\n      case KeyCode.right:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: 0, x: 1 });\n\n      case KeyCode.pageUp:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: -this.pageSize, x: 0 });\n\n      case KeyCode.pageDown:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: this.pageSize, x: 0 });\n\n      case KeyCode.home:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: 0, x: -Infinity });\n\n      case KeyCode.end:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: 0, x: Infinity });\n\n      case -KeyCode.home:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: -Infinity, x: -Infinity });\n\n      case -KeyCode.end:\n        event.preventDefault();\n        return this.moveFocusBy(from, { y: Infinity, x: Infinity });\n\n      default:\n        return;\n    }\n  };\n\n  private moveFocusBy(cell: FocusedCell, delta: { x: number; y: number }) {\n    // For vertical moves preserve column- and element indices set by user.\n    // It allows keeping indices while moving over disabled actions or cells with colspan > 1.\n    if (delta.y !== 0 && delta.x === 0) {\n      this.keepUserIndex = true;\n    }\n    this.getNextFocusable(cell, delta)?.focus();\n  }\n\n  private updateFocusTarget() {\n    this.focusTarget = this.getSingleFocusable();\n    for (const focusableElement of this.focusables) {\n      const isFocusable = this.focusablesState.get(focusableElement) ?? false;\n      const newIsFocusable = this.focusTarget === focusableElement || this.isSuppressed(focusableElement);\n      if (newIsFocusable !== isFocusable) {\n        this.focusablesState.set(focusableElement, newIsFocusable);\n        this.focusHandlers.get(focusableElement)!(newIsFocusable);\n      }\n    }\n  }\n\n  private isSuppressed(element: null | Element) {\n    // Omit calculation as irrelevant until the table receives focus.\n    if (!this.focusedCell) {\n      return false;\n    }\n    return !element || defaultIsSuppressed(element);\n  }\n\n  private isRegistered(element: null | Element) {\n    return !element || this.focusables.has(element);\n  }\n\n  private updateFocusedCell(focusedElement?: HTMLElement): void {\n    if (!focusedElement) {\n      return;\n    }\n\n    const cellElement = getClosestCell(focusedElement);\n    const rowElement = cellElement?.closest('tr');\n    if (!cellElement || !rowElement) {\n      return;\n    }\n\n    const colIndex = parseInt(cellElement.getAttribute('aria-colindex') ?? '');\n    const rowIndex = parseInt(rowElement.getAttribute('aria-rowindex') ?? '');\n    if (isNaN(colIndex) || isNaN(rowIndex)) {\n      return;\n    }\n\n    const cellFocusables = this.getFocusablesFrom(cellElement);\n    const elementIndex = cellFocusables.indexOf(focusedElement);\n\n    const prevColIndex = this.focusedCell?.colIndex ?? -1;\n    const prevElementIndex = this.focusedCell?.elementIndex ?? -1;\n    this.focusedCell = {\n      rowIndex,\n      colIndex: this.keepUserIndex && prevColIndex !== -1 ? prevColIndex : colIndex,\n      elementIndex: this.keepUserIndex && prevElementIndex !== -1 ? prevElementIndex : elementIndex,\n      element: focusedElement,\n    };\n  }\n\n  private getNextFocusable(from: FocusedCell, delta: { y: number; x: number }) {\n    // Find next row to move focus into (can be null if the top/bottom is reached).\n    const targetAriaRowIndex = from.rowIndex + delta.y;\n    const targetRow = findTableRowByAriaRowIndex(this.table, targetAriaRowIndex, delta.y);\n    if (!targetRow) {\n      return null;\n    }\n\n    // Return next interactive cell content element if available.\n    const cellElement = getClosestCell(from.element);\n    const cellFocusables = cellElement ? this.getFocusablesFrom(cellElement) : [];\n    const nextElementIndex = from.elementIndex + delta.x;\n    const isValidDirection = !!delta.x;\n    const isValidIndex = from.elementIndex !== -1 && 0 <= nextElementIndex && nextElementIndex < cellFocusables.length;\n    const isTargetDifferent = from.element !== cellFocusables[nextElementIndex];\n    if (isValidDirection && isValidIndex && isTargetDifferent) {\n      return cellFocusables[nextElementIndex];\n    }\n\n    // Find next cell to focus or move focus into (can be null if the left/right edge is reached).\n    const targetAriaColIndex = from.colIndex + delta.x;\n    const targetCell = findTableRowCellByAriaColIndex(targetRow, targetAriaColIndex, delta.x);\n    if (!targetCell) {\n      return null;\n    }\n\n    // When target cell matches the current cell it means we reached the left or right boundary.\n    if (targetCell === cellElement && delta.x !== 0) {\n      return null;\n    }\n\n    const targetCellFocusables = this.getFocusablesFrom(targetCell);\n\n    // When delta.x = 0 keep element index if possible.\n    let focusIndex = from.elementIndex;\n    // Use first element index when moving to the right or to extreme left.\n    if ((isFinite(delta.x) && delta.x > 0) || delta.x === -Infinity) {\n      focusIndex = 0;\n    }\n    // Use last element index when moving to the left or to extreme right.\n    if ((isFinite(delta.x) && delta.x < 0) || delta.x === Infinity) {\n      focusIndex = targetCellFocusables.length - 1;\n    }\n\n    return targetCellFocusables[focusIndex] ?? targetCell;\n  }\n\n  private getSingleFocusable() {\n    const cell = this.focusedCell;\n    const firstTableCell = this.table.querySelector('td,th') as null | HTMLTableCellElement;\n\n    // A single element of the table is made user-focusable.\n    // It defaults to the first interactive element of the first cell or the first cell itself otherwise.\n    let focusTarget: null | HTMLElement =\n      (firstTableCell && this.getFocusablesFrom(firstTableCell)[0]) ?? firstTableCell;\n\n    // When a navigation-focused element is present in the table it is used for user-navigation instead.\n    if (cell) {\n      focusTarget = this.getNextFocusable(cell, { x: 0, y: 0 });\n    }\n\n    return focusTarget;\n  }\n\n  private getFocusablesFrom(target: HTMLElement) {\n    return getAllFocusables(target).filter(el => this.focusables.has(el) && !isElementDisabled(el));\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function getClosestCell(element: Element) {\n  return element.closest('td,th') as null | HTMLTableCellElement;\n}\n\nexport function isElementDisabled(element: HTMLElement) {\n  if (element instanceof HTMLInputElement || element instanceof HTMLButtonElement) {\n    return element.disabled;\n  }\n  return false;\n}\n\n/**\n * Returns true if the target element or one of its parents is a dialog or is marked with data-awsui-table-suppress-navigation attribute.\n * This is used to suppress navigation for interactive content without a need to use a custom suppression check.\n */\nexport function defaultIsSuppressed(target: Element) {\n  let current: null | Element = target;\n  while (current) {\n    // Stop checking for parents upon reaching the cell element as the function only aims at the cell content.\n    if (isTableCell(current)) {\n      return false;\n    }\n    if (\n      current.getAttribute('role') === 'dialog' ||\n      current.getAttribute('data-awsui-table-suppress-navigation') === 'true'\n    ) {\n      return true;\n    }\n    current = current.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the closest row to the targetAriaRowIndex+delta in the direction of delta.\n */\nexport function findTableRowByAriaRowIndex(table: HTMLTableElement, targetAriaRowIndex: number, delta: number) {\n  let targetRow: null | HTMLTableRowElement = null;\n  const rowElements = Array.from(table.querySelectorAll('tr[aria-rowindex]'));\n  if (delta < 0) {\n    rowElements.reverse();\n  }\n  for (const element of rowElements) {\n    const rowIndex = parseInt(element.getAttribute('aria-rowindex') ?? '');\n    targetRow = element as HTMLTableRowElement;\n\n    if (rowIndex === targetAriaRowIndex) {\n      break;\n    }\n    if (delta >= 0 && rowIndex > targetAriaRowIndex) {\n      break;\n    }\n    if (delta < 0 && rowIndex < targetAriaRowIndex) {\n      break;\n    }\n  }\n  return targetRow;\n}\n\n/**\n * Finds the closest column to the targetAriaColIndex+delta in the direction of delta.\n */\nexport function findTableRowCellByAriaColIndex(\n  tableRow: HTMLTableRowElement,\n  targetAriaColIndex: number,\n  delta: number\n) {\n  let targetCell: null | HTMLTableCellElement = null;\n  const cellElements = Array.from(tableRow.querySelectorAll('td[aria-colindex],th[aria-colindex]'));\n  if (delta < 0) {\n    cellElements.reverse();\n  }\n  for (const element of cellElements) {\n    const columnIndex = parseInt(element.getAttribute('aria-colindex') ?? '');\n    targetCell = element as HTMLTableCellElement;\n\n    if (columnIndex === targetAriaColIndex) {\n      break;\n    }\n    if (delta >= 0 && columnIndex > targetAriaColIndex) {\n      break;\n    }\n    if (delta < 0 && columnIndex < targetAriaColIndex) {\n      break;\n    }\n  }\n  return targetCell;\n}\n\nexport function isTableCell(element: Element) {\n  return element.tagName === 'TD' || element.tagName === 'TH';\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"expandable-toggle-wrapper\": \"awsui_expandable-toggle-wrapper_c6tup_1ls9v_99\",\n  \"body-cell\": \"awsui_body-cell_c6tup_1ls9v_107\",\n  \"body-cell-content\": \"awsui_body-cell-content_c6tup_1ls9v_121\",\n  \"body-cell-wrap\": \"awsui_body-cell-wrap_c6tup_1ls9v_124\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_c6tup_1ls9v_136\",\n  \"has-striped-rows\": \"awsui_has-striped-rows_c6tup_1ls9v_148\",\n  \"body-cell-expandable-level-1\": \"awsui_body-cell-expandable-level-1_c6tup_1ls9v_151\",\n  \"body-cell-expandable-level-2\": \"awsui_body-cell-expandable-level-2_c6tup_1ls9v_154\",\n  \"body-cell-expandable-level-3\": \"awsui_body-cell-expandable-level-3_c6tup_1ls9v_157\",\n  \"body-cell-expandable-level-4\": \"awsui_body-cell-expandable-level-4_c6tup_1ls9v_160\",\n  \"body-cell-expandable-level-5\": \"awsui_body-cell-expandable-level-5_c6tup_1ls9v_163\",\n  \"body-cell-expandable-level-6\": \"awsui_body-cell-expandable-level-6_c6tup_1ls9v_166\",\n  \"body-cell-expandable-level-7\": \"awsui_body-cell-expandable-level-7_c6tup_1ls9v_169\",\n  \"body-cell-expandable-level-8\": \"awsui_body-cell-expandable-level-8_c6tup_1ls9v_172\",\n  \"body-cell-expandable-level-9\": \"awsui_body-cell-expandable-level-9_c6tup_1ls9v_175\",\n  \"body-cell-expandable-level-next\": \"awsui_body-cell-expandable-level-next_c6tup_1ls9v_178\",\n  \"body-cell-edit-active\": \"awsui_body-cell-edit-active_c6tup_1ls9v_181\",\n  \"body-cell-interactive\": \"awsui_body-cell-interactive_c6tup_1ls9v_181\",\n  \"body-cell-editable\": \"awsui_body-cell-editable_c6tup_1ls9v_181\",\n  \"has-striped-rows-sticky-cell-pad-left\": \"awsui_has-striped-rows-sticky-cell-pad-left_c6tup_1ls9v_247\",\n  \"has-selection\": \"awsui_has-selection_c6tup_1ls9v_280\",\n  \"body-cell-first-row\": \"awsui_body-cell-first-row_c6tup_1ls9v_316\",\n  \"body-cell-last-row\": \"awsui_body-cell-last-row_c6tup_1ls9v_319\",\n  \"body-cell-selected\": \"awsui_body-cell-selected_c6tup_1ls9v_319\",\n  \"has-footer\": \"awsui_has-footer_c6tup_1ls9v_319\",\n  \"body-cell-shaded\": \"awsui_body-cell-shaded_c6tup_1ls9v_329\",\n  \"sticky-cell\": \"awsui_sticky-cell_c6tup_1ls9v_355\",\n  \"sticky-cell-pad-left\": \"awsui_sticky-cell-pad-left_c6tup_1ls9v_363\",\n  \"sticky-cell-last-right\": \"awsui_sticky-cell-last-right_c6tup_1ls9v_410\",\n  \"sticky-cell-last-left\": \"awsui_sticky-cell-last-left_c6tup_1ls9v_414\",\n  \"body-cell-next-selected\": \"awsui_body-cell-next-selected_c6tup_1ls9v_437\",\n  \"body-cell-prev-selected\": \"awsui_body-cell-prev-selected_c6tup_1ls9v_441\",\n  \"body-cell-editor-wrapper\": \"awsui_body-cell-editor-wrapper_c6tup_1ls9v_465\",\n  \"body-cell-success\": \"awsui_body-cell-success_c6tup_1ls9v_472\",\n  \"body-cell-editor\": \"awsui_body-cell-editor_c6tup_1ls9v_465\",\n  \"body-cell-editor-disabled\": \"awsui_body-cell-editor-disabled_c6tup_1ls9v_499\",\n  \"body-cell-editor-form\": \"awsui_body-cell-editor-form_c6tup_1ls9v_508\",\n  \"body-cell-editor-row\": \"awsui_body-cell-editor-row_c6tup_1ls9v_518\",\n  \"body-cell-editor-controls\": \"awsui_body-cell-editor-controls_c6tup_1ls9v_528\",\n  \"body-cell-expandable\": \"awsui_body-cell-expandable_c6tup_1ls9v_151\",\n  \"expandable-cell-content\": \"awsui_expandable-cell-content_c6tup_1ls9v_552\",\n  \"body-cell-edit-disabled-popover\": \"awsui_body-cell-edit-disabled-popover_c6tup_1ls9v_600\",\n  \"body-cell-has-success\": \"awsui_body-cell-has-success_c6tup_1ls9v_604\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Icon from '../../icon/internal';\nimport { TableProps } from '../interfaces';\nimport { TableTdElement, TableTdElementProps } from './td-element';\nimport { InlineEditor } from './inline-editor';\nimport LiveRegion from '../../internal/components/live-region/index.js';\nimport { useInternalI18n } from '../../i18n/context';\nimport { usePrevious } from '../../internal/hooks/use-previous';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context.js';\nimport { DisabledInlineEditor } from './disabled-inline-editor';\n\nconst submitHandlerFallback = () => {\n  throw new Error('The function `handleSubmit` is required for editable columns');\n};\n\nexport interface TableBodyCellProps<ItemType> extends TableTdElementProps {\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n  isEditing: boolean;\n  successfulEdit?: boolean;\n  onEditStart: () => void;\n  onEditEnd: (cancelled: boolean) => void;\n  submitEdit?: TableProps.SubmitEditFunction<ItemType>;\n  ariaLabels: TableProps['ariaLabels'];\n  interactiveCell?: boolean;\n}\n\nfunction TableCellEditable<ItemType>({\n  className,\n  item,\n  column,\n  isEditing,\n  onEditStart,\n  onEditEnd,\n  submitEdit,\n  ariaLabels,\n  isVisualRefresh,\n  successfulEdit = false,\n  interactiveCell = true,\n  ...rest\n}: TableBodyCellProps<ItemType>) {\n  const i18n = useInternalI18n('table');\n  const editActivateRef = useRef<HTMLButtonElement>(null);\n  const tdNativeAttributes = {\n    'data-inline-editing-active': isEditing.toString(),\n  };\n  const isFocusMoveNeededRef = useRef(false);\n\n  useEffect(() => {\n    if (!isEditing && editActivateRef.current && isFocusMoveNeededRef.current) {\n      isFocusMoveNeededRef.current = false;\n      editActivateRef.current.focus();\n    }\n  }, [isEditing]);\n  // To improve the initial page render performance we only show the edit icon when necessary.\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  // When a cell is both expandable and editable the icon is always shown.\n  const showIcon = hasHover || hasFocus || !interactiveCell;\n\n  const prevSuccessfulEdit = usePrevious(successfulEdit);\n  const prevHasFocus = usePrevious(hasFocus);\n  const [showSuccessIcon, setShowSuccessIcon] = useState(false);\n\n  useEffect(() => {\n    // Hide the success icon after a successful edit, when cell loses focus.\n    if (successfulEdit && prevSuccessfulEdit && !hasFocus && prevHasFocus) {\n      setShowSuccessIcon(false);\n    }\n    // Show success icon right after a successful edit, when `successfulEdit` switches to true.\n    if (successfulEdit && !prevSuccessfulEdit) {\n      setShowSuccessIcon(true);\n    }\n  }, [hasFocus, successfulEdit, prevHasFocus, prevSuccessfulEdit]);\n\n  const { tabIndex: editActivateTabIndex } = useSingleTabStopNavigation(editActivateRef);\n\n  return (\n    <TableTdElement\n      {...rest}\n      nativeAttributes={tdNativeAttributes as TableTdElementProps['nativeAttributes']}\n      className={clsx(\n        className,\n        styles['body-cell-editable'],\n        interactiveCell && styles['body-cell-interactive'],\n        isEditing && styles['body-cell-edit-active'],\n        showSuccessIcon && showIcon && styles['body-cell-has-success'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onClick={interactiveCell && !isEditing ? onEditStart : undefined}\n      onMouseEnter={() => setHasHover(true)}\n      onMouseLeave={() => setHasHover(false)}\n    >\n      {isEditing ? (\n        <InlineEditor\n          ariaLabels={ariaLabels}\n          column={column}\n          item={item}\n          onEditEnd={options => {\n            setShowSuccessIcon(false);\n            isFocusMoveNeededRef.current = options.refocusCell;\n            onEditEnd(options.cancelled);\n          }}\n          submitEdit={submitEdit ?? submitHandlerFallback}\n        />\n      ) : (\n        <>\n          {column.cell(item)}\n\n          {showSuccessIcon && showIcon && (\n            <>\n              <span\n                className={styles['body-cell-success']}\n                aria-label={ariaLabels?.successfulEditLabel?.(column)}\n                role=\"img\"\n                onMouseDown={e => {\n                  // Prevent the editor's Button blur event to be fired when clicking the success icon.\n                  // This prevents unfocusing the button and triggers the `TableTdElement` onClick event which initiates the edit mode.\n                  e.preventDefault();\n                }}\n              >\n                <Icon name=\"status-positive\" variant=\"success\" />\n              </span>\n              <LiveRegion>\n                {i18n('ariaLabels.successfulEditLabel', ariaLabels?.successfulEditLabel?.(column))}\n              </LiveRegion>\n            </>\n          )}\n\n          <div className={styles['body-cell-editor-wrapper']}>\n            <button\n              className={styles['body-cell-editor']}\n              aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n              ref={editActivateRef}\n              onClick={!interactiveCell && !isEditing ? onEditStart : undefined}\n              onFocus={() => setHasFocus(true)}\n              onBlur={() => setHasFocus(false)}\n              tabIndex={editActivateTabIndex}\n            >\n              {showIcon && <Icon name=\"edit\" />}\n            </button>\n          </div>\n        </>\n      )}\n    </TableTdElement>\n  );\n}\n\nexport function TableBodyCell<ItemType>({\n  isEditable,\n  ...rest\n}: TableBodyCellProps<ItemType> & { isEditable: boolean }) {\n  const isExpandableColumnCell = rest.level !== undefined;\n  const editDisabledReason = rest.column.editConfig?.disabledReason?.(rest.item);\n\n  // Inline editing is deactivated for expandable column because editable cells are interactive\n  // and cannot include interactive content such as expand toggles.\n  if (editDisabledReason && !isExpandableColumnCell) {\n    return <DisabledInlineEditor editDisabledReason={editDisabledReason} {...rest} />;\n  }\n  if ((isEditable || rest.isEditing) && !isExpandableColumnCell) {\n    return <TableCellEditable {...rest} />;\n  }\n\n  const { column, item } = rest;\n  return <TableTdElement {...rest}>{column.cell(item)}</TableTdElement>;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport styles from './styles.css.js';\nimport { getStickyClassNames } from '../utils';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns';\nimport { TableRole, getTableCellRoleProps } from '../table-role';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { ExpandToggleButton } from '../expandable-rows/expand-toggle-button';\n\nexport interface TableTdElementProps {\n  className?: string;\n  style?: React.CSSProperties;\n  wrapLines: boolean | undefined;\n  isRowHeader?: boolean;\n  isFirstRow: boolean;\n  isLastRow: boolean;\n  isSelected: boolean;\n  isNextSelected: boolean;\n  isPrevSelected: boolean;\n  nativeAttributes?: Omit<\n    React.TdHTMLAttributes<HTMLTableCellElement> | React.ThHTMLAttributes<HTMLTableCellElement>,\n    'style' | 'className' | 'onClick'\n  >;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  children?: React.ReactNode;\n  isEvenRow?: boolean;\n  stripedRows?: boolean;\n  hasSelection?: boolean;\n  hasFooter?: boolean;\n  columnId: PropertyKey;\n  colIndex: number;\n  stickyState: StickyColumnsModel;\n  isVisualRefresh?: boolean;\n  tableRole: TableRole;\n  level?: number;\n  isExpandable?: boolean;\n  isExpanded?: boolean;\n  onExpandableItemToggle?: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}\n\nexport const TableTdElement = React.forwardRef<HTMLTableCellElement, TableTdElementProps>(\n  (\n    {\n      className,\n      style,\n      children,\n      wrapLines,\n      isRowHeader,\n      isFirstRow,\n      isLastRow,\n      isSelected,\n      isNextSelected,\n      isPrevSelected,\n      nativeAttributes,\n      onClick,\n      onMouseEnter,\n      onMouseLeave,\n      isEvenRow,\n      stripedRows,\n      isVisualRefresh,\n      hasSelection,\n      hasFooter,\n      columnId,\n      colIndex,\n      stickyState,\n      tableRole,\n      level,\n      isExpandable,\n      isExpanded,\n      onExpandableItemToggle,\n      expandButtonLabel,\n      collapseButtonLabel,\n    },\n    ref\n  ) => {\n    const Element = isRowHeader ? 'th' : 'td';\n\n    nativeAttributes = { ...nativeAttributes, ...getTableCellRoleProps({ tableRole, isRowHeader, colIndex }) };\n\n    const stickyStyles = useStickyCellStyles({\n      stickyColumns: stickyState,\n      columnId,\n      getClassName: props => getStickyClassNames(styles, props),\n    });\n\n    const cellRefObject = useRef<HTMLTableCellElement>(null);\n    const mergedRef = useMergeRefs(stickyStyles.ref, ref, cellRefObject);\n    const { tabIndex: cellTabIndex } = useSingleTabStopNavigation(cellRefObject);\n\n    return (\n      <Element\n        style={{ ...style, ...stickyStyles.style }}\n        className={clsx(\n          className,\n          styles['body-cell'],\n          wrapLines && styles['body-cell-wrap'],\n          isFirstRow && styles['body-cell-first-row'],\n          isLastRow && styles['body-cell-last-row'],\n          isSelected && styles['body-cell-selected'],\n          isNextSelected && styles['body-cell-next-selected'],\n          isPrevSelected && styles['body-cell-prev-selected'],\n          !isEvenRow && stripedRows && styles['body-cell-shaded'],\n          stripedRows && styles['has-striped-rows'],\n          isVisualRefresh && styles['is-visual-refresh'],\n          hasSelection && styles['has-selection'],\n          hasFooter && styles['has-footer'],\n          level !== undefined && styles['body-cell-expandable'],\n          level !== undefined && styles[`body-cell-expandable-level-${getLevelClassSuffix(level)}`],\n          stickyStyles.className\n        )}\n        onClick={onClick}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        ref={mergedRef}\n        {...nativeAttributes}\n        tabIndex={cellTabIndex}\n      >\n        {level !== undefined && isExpandable && (\n          <div className={styles['expandable-toggle-wrapper']}>\n            <ExpandToggleButton\n              isExpanded={isExpanded}\n              onExpandableItemToggle={onExpandableItemToggle}\n              expandButtonLabel={expandButtonLabel}\n              collapseButtonLabel={collapseButtonLabel}\n            />\n          </div>\n        )}\n        <span className={styles['body-cell-content']}>{children}</span>\n      </Element>\n    );\n  }\n);\n\nfunction getLevelClassSuffix(level: number) {\n  return 1 <= level && level <= 9 ? level : 'next';\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport styles from './styles.css.js';\nimport InternalIcon from '../../icon/internal';\nimport clsx from 'clsx';\n\nexport function ExpandToggleButton({\n  isExpanded,\n  onExpandableItemToggle,\n  expandButtonLabel,\n  collapseButtonLabel,\n}: {\n  isExpanded?: boolean;\n  onExpandableItemToggle?: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}) {\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const { tabIndex } = useSingleTabStopNavigation(buttonRef);\n  return (\n    <button\n      ref={buttonRef}\n      tabIndex={tabIndex}\n      aria-label={isExpanded ? collapseButtonLabel : expandButtonLabel}\n      aria-expanded={isExpanded}\n      className={styles['expand-toggle']}\n      onClick={onExpandableItemToggle}\n    >\n      <InternalIcon\n        size=\"small\"\n        name=\"caret-down-filled\"\n        className={clsx(styles['expand-toggle-icon'], isExpanded && styles['expand-toggle-icon-expanded'])}\n      />\n    </button>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"expand-toggle-icon\": \"awsui_expand-toggle-icon_1ss49_1izvf_99\",\n  \"expand-toggle-icon-expanded\": \"awsui_expand-toggle-icon-expanded_1ss49_1izvf_120\",\n  \"expand-toggle\": \"awsui_expand-toggle_1ss49_1izvf_99\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport Button from '../../button/internal';\nimport FormField from '../../form-field/internal';\nimport SpaceBetween from '../../space-between/internal';\nimport { useClickAway } from './click-away';\nimport { TableProps } from '../interfaces';\nimport styles from './styles.css.js';\nimport { Optional } from '../../internal/types';\nimport FocusLock, { FocusLockRef } from '../../internal/components/focus-lock';\nimport LiveRegion from '../../internal/components/live-region';\nimport { useInternalI18n } from '../../i18n/context';\n\n// A function that does nothing\nconst noop = () => undefined;\n\ninterface OnEditEndOptions {\n  cancelled: boolean;\n  refocusCell: boolean;\n}\n\ninterface InlineEditorProps<ItemType> {\n  ariaLabels: TableProps['ariaLabels'];\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n  onEditEnd: (options: OnEditEndOptions) => void;\n  submitEdit: TableProps.SubmitEditFunction<ItemType>;\n  __onRender?: () => void;\n}\n\nexport function InlineEditor<ItemType>({\n  ariaLabels,\n  item,\n  column,\n  onEditEnd,\n  submitEdit,\n  __onRender,\n}: InlineEditorProps<ItemType>) {\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n  const [currentEditValue, setCurrentEditValue] = useState<Optional<any>>();\n  const i18n = useInternalI18n('table');\n\n  const focusLockRef = useRef<FocusLockRef>(null);\n\n  const cellContext = {\n    currentValue: currentEditValue,\n    setValue: setCurrentEditValue,\n  };\n\n  function finishEdit({ cancelled = false, refocusCell = true }: Partial<OnEditEndOptions> = {}) {\n    if (!cancelled) {\n      setCurrentEditValue(undefined);\n    }\n    onEditEnd({ cancelled, refocusCell: refocusCell });\n  }\n\n  async function onSubmitClick(evt: React.FormEvent) {\n    evt.preventDefault();\n    if (currentEditValue === undefined) {\n      finishEdit();\n      return;\n    }\n\n    setCurrentEditLoading(true);\n    try {\n      await submitEdit(item, column, currentEditValue);\n      setCurrentEditLoading(false);\n      finishEdit();\n    } catch (e) {\n      setCurrentEditLoading(false);\n      focusLockRef.current?.focusFirst();\n    }\n  }\n\n  function onCancel({ reFocusEditedCell = true } = {}) {\n    if (currentEditLoading) {\n      return;\n    }\n    finishEdit({ cancelled: true, refocusCell: reFocusEditedCell });\n  }\n\n  function handleEscape(event: React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onCancel();\n    }\n  }\n\n  const clickAwayRef = useClickAway(() => onCancel({ reFocusEditedCell: false }));\n\n  useEffect(() => {\n    if (__onRender) {\n      const timer = setTimeout(__onRender, 1);\n      return () => clearTimeout(timer);\n    }\n  }, [__onRender]);\n\n  // asserting non-undefined editConfig here because this component is unreachable otherwise\n  const {\n    ariaLabel = undefined,\n    validation = noop,\n    errorIconAriaLabel,\n    constraintText,\n    editingCell,\n  } = column.editConfig!;\n\n  return (\n    <FocusLock restoreFocus={true} ref={focusLockRef}>\n      <div\n        role=\"dialog\"\n        ref={clickAwayRef}\n        aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n        onKeyDown={handleEscape}\n      >\n        <form onSubmit={onSubmitClick} className={styles['body-cell-editor-form']}>\n          <FormField\n            stretch={true}\n            label={ariaLabel}\n            constraintText={constraintText}\n            __hideLabel={true}\n            __disableGutters={true}\n            i18nStrings={{ errorIconAriaLabel }}\n            errorText={validation(item, currentEditValue)}\n          >\n            <div className={styles['body-cell-editor-row']}>\n              {editingCell(item, cellContext)}\n              <span className={styles['body-cell-editor-controls']}>\n                <SpaceBetween direction=\"horizontal\" size=\"xxs\">\n                  {!currentEditLoading ? (\n                    <Button\n                      ariaLabel={ariaLabels?.cancelEditLabel?.(column)}\n                      formAction=\"none\"\n                      iconName=\"close\"\n                      variant=\"inline-icon\"\n                      onClick={() => onCancel()}\n                    />\n                  ) : null}\n                  <Button\n                    ariaLabel={ariaLabels?.submitEditLabel?.(column)}\n                    formAction=\"submit\"\n                    iconName=\"check\"\n                    variant=\"inline-icon\"\n                    loading={currentEditLoading}\n                  />\n                </SpaceBetween>\n                <LiveRegion>\n                  {currentEditLoading\n                    ? i18n('ariaLabels.submittingEditText', ariaLabels?.submittingEditText?.(column))\n                    : ''}\n                </LiveRegion>\n              </span>\n            </div>\n          </FormField>\n        </form>\n      </div>\n    </FocusLock>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { nodeBelongs } from '../../internal/utils/node-belongs';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nexport function useClickAway(onClick: () => void) {\n  const awayRef = useRef<any>(null);\n  const onClickStable = useStableCallback(onClick);\n  useEffect(() => {\n    function handleClick(event: Event) {\n      if (!nodeBelongs(awayRef.current, event.target as HTMLElement)) {\n        onClickStable();\n      }\n    }\n    // contains returns wrong result if the next render would remove the element\n    // but capture phase happens before the render, so returns correct result\n    // Ref: https://github.com/facebook/react/issues/20325\n    document.addEventListener('click', handleClick, { capture: true });\n    return () => document.removeEventListener('click', handleClick, { capture: true });\n  }, [onClickStable]);\n  return awayRef;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport useHiddenDescription from '../../button-dropdown/utils/use-hidden-description';\nimport Icon from '../../icon/internal';\nimport PopoverContainer from '../../popover/container';\nimport PopoverBody from '../../popover/body';\nimport Portal from '../../internal/components/portal';\nimport { usePortalModeClasses } from '../../internal/hooks/use-portal-mode-classes';\nimport Arrow from '../../popover/arrow';\nimport { useClickAway } from './click-away';\nimport { TableTdElement, TableTdElementProps } from './td-element';\nimport { TableBodyCellProps } from './index';\nimport styles from './styles.css.js';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\n\ninterface DisabledInlineEditorProps<ItemType> extends TableBodyCellProps<ItemType> {\n  editDisabledReason: string;\n}\n\nexport function DisabledInlineEditor<ItemType>({\n  className,\n  item,\n  column,\n  ariaLabels,\n  isEditing,\n  onEditStart,\n  onEditEnd,\n  editDisabledReason,\n  isVisualRefresh,\n  interactiveCell = true,\n  ...rest\n}: DisabledInlineEditorProps<ItemType>) {\n  const clickAwayRef = useClickAway(() => {\n    if (isEditing) {\n      onEditEnd(true);\n    }\n  });\n\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  // When a cell is both expandable and editable the icon is always shown.\n  const showIcon = hasHover || hasFocus || isEditing || !interactiveCell;\n\n  const iconRef = useRef(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const portalRef = useRef<HTMLSpanElement>(null);\n\n  function handleEscape(event: React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onEditEnd(true);\n    }\n  }\n\n  const onClick = () => {\n    onEditStart();\n    buttonRef.current?.focus();\n  };\n\n  const { targetProps, descriptionEl } = useHiddenDescription(editDisabledReason);\n  const portalClasses = usePortalModeClasses(portalRef);\n\n  const { tabIndex } = useSingleTabStopNavigation(buttonRef);\n\n  return (\n    <TableTdElement\n      {...rest}\n      nativeAttributes={\n        { 'data-inline-editing-active': isEditing.toString() } as TableTdElementProps['nativeAttributes']\n      }\n      className={clsx(\n        className,\n        styles['body-cell-editable'],\n        interactiveCell && styles['body-cell-interactive'],\n        isEditing && styles['body-cell-edit-disabled-popover'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onClick={interactiveCell && !isEditing ? onClick : undefined}\n      onMouseEnter={() => setHasHover(true)}\n      onMouseLeave={() => setHasHover(false)}\n      ref={clickAwayRef}\n    >\n      {column.cell(item)}\n\n      <div className={styles['body-cell-editor-wrapper']}>\n        <button\n          ref={buttonRef}\n          tabIndex={tabIndex}\n          className={clsx(styles['body-cell-editor'], styles['body-cell-editor-disabled'])}\n          aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n          aria-haspopup=\"dialog\"\n          aria-disabled=\"true\"\n          onClick={!interactiveCell && !isEditing ? onClick : undefined}\n          onFocus={() => setHasFocus(true)}\n          onBlur={() => setHasFocus(false)}\n          onKeyDown={handleEscape}\n          {...targetProps}\n        >\n          {showIcon && <Icon name=\"lock-private\" variant=\"normal\" __internalRootRef={iconRef} />}\n          {descriptionEl}\n        </button>\n      </div>\n\n      {isEditing && (\n        <span ref={portalRef}>\n          <Portal>\n            <span className={portalClasses}>\n              <PopoverContainer\n                size=\"medium\"\n                fixedWidth={false}\n                position=\"top\"\n                trackRef={iconRef}\n                arrow={position => <Arrow position={position} />}\n                renderWithPortal={true}\n                zIndex={2000}\n              >\n                <PopoverBody\n                  dismissButton={false}\n                  dismissAriaLabel={undefined}\n                  header={null}\n                  onDismiss={() => {}}\n                  overflowVisible=\"both\"\n                >\n                  <span aria-live=\"polite\">{editDisabledReason}</span>\n                </PopoverBody>\n              </PopoverContainer>\n            </span>\n          </Portal>\n        </span>\n      )}\n    </TableTdElement>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\n\nexport default function useHiddenDescription(description?: string) {\n  const id = useUniqueId();\n  return {\n    targetProps: {\n      'aria-describedby': description ? id : undefined,\n    },\n    descriptionEl: description ? (\n      <span id={id} hidden={true}>\n        {description}\n      </span>\n    ) : null,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useLayoutEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { InternalPosition, PopoverProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport usePopoverPosition from './use-popover-position.js';\n\nexport interface PopoverContainerProps {\n  /** References the element the container is positioned against. */\n  trackRef: React.RefObject<HTMLElement | SVGElement>;\n  /**\n    Used to update the container position in case track or track position changes:\n    \n    const trackRef = useRef<Element>(null)\n    return (<>\n      <Track style={getPosition(selectedItemId)} ref={trackRef} />\n      <PopoverContainer trackRef={trackRef} trackKey={selectedItemId} .../>\n    </>)\n  */\n  trackKey?: string | number;\n  position: PopoverProps.Position;\n  zIndex?: React.CSSProperties['zIndex'];\n  arrow: (position: InternalPosition | null) => React.ReactNode;\n  children: React.ReactNode;\n  renderWithPortal?: boolean;\n  size: PopoverProps.Size;\n  fixedWidth: boolean;\n  variant?: 'annotation';\n  // When keepPosition is true, the popover will not recalculate its position when it resizes nor when it receives clicks.\n  keepPosition?: boolean;\n  // When allowScrollToFit is true, we will scroll to the the popover if it overflows the viewport even when choosing the best possible position for it.\n  // Do not use this if the popover is open on hover, in order to avoid unexpected movement.\n  allowScrollToFit?: boolean;\n  allowVerticalOverflow?: boolean;\n}\n\nexport default function PopoverContainer({\n  position,\n  trackRef,\n  trackKey,\n  arrow,\n  children,\n  zIndex,\n  renderWithPortal,\n  size,\n  fixedWidth,\n  variant,\n  keepPosition,\n  allowScrollToFit,\n  allowVerticalOverflow,\n}: PopoverContainerProps) {\n  const bodyRef = useRef<HTMLDivElement | null>(null);\n  const contentRef = useRef<HTMLDivElement | null>(null);\n  const popoverRef = useRef<HTMLDivElement | null>(null);\n  const arrowRef = useRef<HTMLDivElement | null>(null);\n\n  const isRefresh = useVisualRefresh();\n\n  // Updates the position handler.\n  const { updatePositionHandler, popoverStyle, internalPosition, positionHandlerRef } = usePopoverPosition({\n    popoverRef,\n    bodyRef,\n    arrowRef,\n    trackRef,\n    contentRef,\n    allowScrollToFit,\n    allowVerticalOverflow,\n    preferredPosition: position,\n    renderWithPortal,\n    keepPosition,\n  });\n\n  // Recalculate position when properties change.\n  useLayoutEffect(() => {\n    updatePositionHandler();\n  }, [updatePositionHandler, trackKey]);\n\n  // Recalculate position when content size changes.\n  useResizeObserver(contentRef, () => {\n    updatePositionHandler(true);\n  });\n\n  // Recalculate position on DOM events.\n  useLayoutEffect(() => {\n    /*\n    This is a heuristic. Some layout changes are caused by user clicks (e.g. toggling the tools panel, submitting a form),\n    and by tracking the click event we can adapt the popover's position to the new layout.\n\n    TODO: extend this to Enter and Spacebar?\n    */\n\n    const onClick = (event: UIEvent | KeyboardEvent) => {\n      if (\n        // Do not update position if keepPosition is true.\n        keepPosition ||\n        // If the click was on the trigger, this will make the popover appear or disappear,\n        // so no need to update its position either in this case.\n        nodeContains(trackRef.current, event.target)\n      ) {\n        return;\n      }\n\n      requestAnimationFrame(() => {\n        updatePositionHandler();\n      });\n    };\n\n    const updatePositionOnResize = () => requestAnimationFrame(() => updatePositionHandler());\n    const refreshPosition = () => requestAnimationFrame(() => positionHandlerRef.current());\n\n    window.addEventListener('click', onClick);\n    window.addEventListener('resize', updatePositionOnResize);\n    window.addEventListener('scroll', refreshPosition, true);\n\n    return () => {\n      window.removeEventListener('click', onClick);\n      window.removeEventListener('resize', updatePositionOnResize);\n      window.removeEventListener('scroll', refreshPosition, true);\n    };\n  }, [keepPosition, positionHandlerRef, trackRef, updatePositionHandler]);\n\n  return (\n    <div\n      ref={popoverRef}\n      style={{ ...popoverStyle, zIndex }}\n      className={clsx(styles.container, isRefresh && styles.refresh)}\n    >\n      <div\n        ref={arrowRef}\n        className={clsx(styles[`container-arrow`], styles[`container-arrow-position-${internalPosition}`])}\n        aria-hidden={true}\n      >\n        {arrow(internalPosition)}\n      </div>\n\n      <div\n        ref={bodyRef}\n        className={clsx(styles['container-body'], styles[`container-body-size-${size}`], {\n          [styles['fixed-width']]: fixedWidth,\n          [styles[`container-body-variant-${variant}`]]: variant,\n        })}\n      >\n        <div ref={contentRef}>{children}</div>\n      </div>\n    </div>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"arrow\": \"awsui_arrow_xjuzf_ov8et_197\",\n  \"arrow-outer\": \"awsui_arrow-outer_xjuzf_ov8et_201\",\n  \"arrow-inner\": \"awsui_arrow-inner_xjuzf_ov8et_201\",\n  \"refresh\": \"awsui_refresh_xjuzf_ov8et_235\",\n  \"arrow-position-right-top\": \"awsui_arrow-position-right-top_xjuzf_ov8et_245\",\n  \"arrow-position-right-bottom\": \"awsui_arrow-position-right-bottom_xjuzf_ov8et_245\",\n  \"arrow-position-left-top\": \"awsui_arrow-position-left-top_xjuzf_ov8et_248\",\n  \"arrow-position-left-bottom\": \"awsui_arrow-position-left-bottom_xjuzf_ov8et_248\",\n  \"arrow-position-top-center\": \"awsui_arrow-position-top-center_xjuzf_ov8et_251\",\n  \"arrow-position-top-right\": \"awsui_arrow-position-top-right_xjuzf_ov8et_251\",\n  \"arrow-position-top-left\": \"awsui_arrow-position-top-left_xjuzf_ov8et_251\",\n  \"arrow-position-top-responsive\": \"awsui_arrow-position-top-responsive_xjuzf_ov8et_251\",\n  \"arrow-position-bottom-center\": \"awsui_arrow-position-bottom-center_xjuzf_ov8et_254\",\n  \"arrow-position-bottom-right\": \"awsui_arrow-position-bottom-right_xjuzf_ov8et_254\",\n  \"arrow-position-bottom-left\": \"awsui_arrow-position-bottom-left_xjuzf_ov8et_254\",\n  \"arrow-position-bottom-responsive\": \"awsui_arrow-position-bottom-responsive_xjuzf_ov8et_254\",\n  \"body\": \"awsui_body_xjuzf_ov8et_356\",\n  \"body-overflow-visible\": \"awsui_body-overflow-visible_xjuzf_ov8et_395\",\n  \"has-dismiss\": \"awsui_has-dismiss_xjuzf_ov8et_399\",\n  \"dismiss\": \"awsui_dismiss_xjuzf_ov8et_404\",\n  \"dismiss-control\": \"awsui_dismiss-control_xjuzf_ov8et_412\",\n  \"header-row\": \"awsui_header-row_xjuzf_ov8et_416\",\n  \"header\": \"awsui_header_xjuzf_ov8et_416\",\n  \"content\": \"awsui_content_xjuzf_ov8et_442\",\n  \"content-overflow-visible\": \"awsui_content-overflow-visible_xjuzf_ov8et_450\",\n  \"container\": \"awsui_container_xjuzf_ov8et_552\",\n  \"container-body\": \"awsui_container-body_xjuzf_ov8et_560\",\n  \"container-body-variant-annotation\": \"awsui_container-body-variant-annotation_xjuzf_ov8et_603\",\n  \"container-body-size-small\": \"awsui_container-body-size-small_xjuzf_ov8et_608\",\n  \"fixed-width\": \"awsui_fixed-width_xjuzf_ov8et_611\",\n  \"container-body-size-medium\": \"awsui_container-body-size-medium_xjuzf_ov8et_615\",\n  \"container-body-size-large\": \"awsui_container-body-size-large_xjuzf_ov8et_622\",\n  \"container-arrow\": \"awsui_container-arrow_xjuzf_ov8et_634\",\n  \"container-arrow-position-right-top\": \"awsui_container-arrow-position-right-top_xjuzf_ov8et_638\",\n  \"container-arrow-position-right-bottom\": \"awsui_container-arrow-position-right-bottom_xjuzf_ov8et_638\",\n  \"container-arrow-position-left-top\": \"awsui_container-arrow-position-left-top_xjuzf_ov8et_654\",\n  \"container-arrow-position-left-bottom\": \"awsui_container-arrow-position-left-bottom_xjuzf_ov8et_654\",\n  \"container-arrow-position-top-center\": \"awsui_container-arrow-position-top-center_xjuzf_ov8et_670\",\n  \"container-arrow-position-top-right\": \"awsui_container-arrow-position-top-right_xjuzf_ov8et_670\",\n  \"container-arrow-position-top-left\": \"awsui_container-arrow-position-top-left_xjuzf_ov8et_670\",\n  \"container-arrow-position-top-responsive\": \"awsui_container-arrow-position-top-responsive_xjuzf_ov8et_670\",\n  \"container-arrow-position-bottom-center\": \"awsui_container-arrow-position-bottom-center_xjuzf_ov8et_686\",\n  \"container-arrow-position-bottom-right\": \"awsui_container-arrow-position-bottom-right_xjuzf_ov8et_690\",\n  \"container-arrow-position-bottom-left\": \"awsui_container-arrow-position-bottom-left_xjuzf_ov8et_694\",\n  \"awsui-motion-fade-in\": \"awsui_awsui-motion-fade-in_xjuzf_ov8et_1\",\n  \"root\": \"awsui_root_xjuzf_ov8et_840\",\n  \"trigger\": \"awsui_trigger_xjuzf_ov8et_876\",\n  \"trigger-type-text\": \"awsui_trigger-type-text_xjuzf_ov8et_883\",\n  \"trigger-inner-text\": \"awsui_trigger-inner-text_xjuzf_ov8et_918\",\n  \"popover-inline-content\": \"awsui_popover-inline-content_xjuzf_ov8et_922\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport { BoundingBox, InternalPosition, Offset, PopoverProps } from './interfaces';\nimport { calculatePosition, getDimensions, getOffsetDimensions } from './utils/positions';\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\nimport {\n  calculateScroll,\n  getFirstScrollableParent,\n  scrollRectangleIntoView,\n} from '../internal/utils/scrollable-containers';\nimport { getContainingBlock } from '../internal/utils/dom';\nimport { getLogicalBoundingClientRect } from '../internal/direction';\n\nexport default function usePopoverPosition({\n  popoverRef,\n  bodyRef,\n  arrowRef,\n  trackRef,\n  contentRef,\n  allowScrollToFit,\n  allowVerticalOverflow,\n  preferredPosition,\n  renderWithPortal,\n  keepPosition,\n}: {\n  popoverRef: React.RefObject<HTMLDivElement | null>;\n  bodyRef: React.RefObject<HTMLDivElement | null>;\n  arrowRef: React.RefObject<HTMLDivElement | null>;\n  trackRef: React.RefObject<HTMLElement | SVGElement | null>;\n  contentRef: React.RefObject<HTMLDivElement | null>;\n  allowScrollToFit?: boolean;\n  allowVerticalOverflow?: boolean;\n  preferredPosition: PopoverProps.Position;\n  renderWithPortal?: boolean;\n  keepPosition?: boolean;\n}) {\n  const previousInternalPositionRef = useRef<InternalPosition | null>(null);\n  const [popoverStyle, setPopoverStyle] = useState<Partial<Offset>>({});\n  const [internalPosition, setInternalPosition] = useState<InternalPosition | null>(null);\n\n  // Store the handler in a ref so that it can still be replaced from outside of the listener closure.\n  const positionHandlerRef = useRef<() => void>(() => {});\n\n  const updatePositionHandler = useCallback(\n    (onContentResize = false) => {\n      if (!trackRef.current || !popoverRef.current || !bodyRef.current || !contentRef.current || !arrowRef.current) {\n        return;\n      }\n\n      // Get important elements\n      const popover = popoverRef.current;\n      const body = bodyRef.current;\n      const arrow = arrowRef.current;\n      const document = popover.ownerDocument;\n      const track = trackRef.current;\n\n      // If the popover body isn't being rendered for whatever reason (e.g. \"display: none\" or JSDOM),\n      // or track does not belong to the document - bail on calculating dimensions.\n      const { offsetWidth, offsetHeight } = getOffsetDimensions(popover);\n      if (offsetWidth === 0 || offsetHeight === 0 || !nodeContains(document.body, track)) {\n        return;\n      }\n\n      // Imperatively move body off-screen to give it room to expand.\n      // Not doing this in React because this recalculation should happen\n      // in the span of a single frame without rerendering anything.\n      const prevInsetBlockStart = popover.style.insetBlockStart;\n      const prevInsetInlineStart = popover.style.insetInlineStart;\n\n      popover.style.insetBlockStart = '0';\n      popover.style.insetInlineStart = '0';\n      // Imperatively remove body styles that can remain from the previous computation.\n      body.style.maxBlockSize = '';\n      body.style.overflowX = '';\n      body.style.overflowY = '';\n\n      // Get rects representing key elements\n      // Use getComputedStyle for arrowRect to avoid modifications made by transform\n      const viewportRect = getViewportRect(document.defaultView!);\n      const trackRect = getLogicalBoundingClientRect(track);\n      const arrowRect = getDimensions(arrow);\n      const containingBlock = getContainingBlock(popover);\n      const containingBlockRect = containingBlock ? getLogicalBoundingClientRect(containingBlock) : viewportRect;\n\n      const bodyBorderWidth = getBorderWidth(body);\n      const contentRect = getLogicalBoundingClientRect(contentRef.current);\n      const contentBoundingBox = {\n        inlineSize: contentRect.inlineSize + 2 * bodyBorderWidth,\n        blockSize: contentRect.blockSize + 2 * bodyBorderWidth,\n      };\n\n      // When keepPosition is true and the recalculation was triggered by a resize of the popover content,\n      // we maintain the previously defined internal position,\n      // but we still call calculatePosition to know if the popover should be scrollable.\n      const shouldKeepPosition = keepPosition && onContentResize && !!previousInternalPositionRef.current;\n      const fixedInternalPosition = (shouldKeepPosition && previousInternalPositionRef.current) ?? undefined;\n\n      // Calculate the arrow direction and viewport-relative position of the popover.\n      const {\n        scrollable,\n        internalPosition: newInternalPosition,\n        rect,\n      } = calculatePosition({\n        preferredPosition,\n        fixedInternalPosition,\n        trigger: trackRect,\n        arrow: arrowRect,\n        body: contentBoundingBox,\n        container: containingBlock ? containingBlockRect : getDocumentRect(document),\n        viewport: viewportRect,\n        renderWithPortal,\n        allowVerticalOverflow,\n      });\n\n      // Get the position of the popover relative to the offset parent.\n      const popoverOffset = toRelativePosition(rect, containingBlockRect);\n\n      // Cache the distance between the trigger and the popover (which stays the same as you scroll),\n      // and use that to recalculate the new popover position.\n      const trackRelativeOffset = toRelativePosition(popoverOffset, toRelativePosition(trackRect, containingBlockRect));\n\n      // Bring back the container to its original position to prevent any flashing.\n      popover.style.insetBlockStart = prevInsetBlockStart;\n      popover.style.insetInlineStart = prevInsetInlineStart;\n\n      // Allow popover body to scroll if can't fit the popover into the container/viewport otherwise.\n      if (scrollable) {\n        body.style.maxBlockSize = rect.blockSize + 'px';\n        body.style.overflowX = 'hidden';\n        body.style.overflowY = 'auto';\n      }\n\n      // Remember the internal position in case we want to keep it later.\n      previousInternalPositionRef.current = newInternalPosition;\n      setInternalPosition(newInternalPosition);\n\n      const shouldScroll = allowScrollToFit && !shouldKeepPosition;\n\n      // Position the popover\n      const insetBlockStart = shouldScroll\n        ? popoverOffset.insetBlockStart + calculateScroll(rect)\n        : popoverOffset.insetBlockStart;\n      setPopoverStyle({ insetBlockStart, insetInlineStart: popoverOffset.insetInlineStart });\n\n      // Scroll if necessary\n      if (shouldScroll) {\n        const scrollableParent = getFirstScrollableParent(popover);\n        scrollRectangleIntoView(rect, scrollableParent);\n      }\n\n      positionHandlerRef.current = () => {\n        const newTrackOffset = toRelativePosition(\n          getLogicalBoundingClientRect(track),\n          containingBlock ? getLogicalBoundingClientRect(containingBlock) : viewportRect\n        );\n        setPopoverStyle({\n          insetBlockStart: newTrackOffset.insetBlockStart + trackRelativeOffset.insetBlockStart,\n          insetInlineStart: newTrackOffset.insetInlineStart + trackRelativeOffset.insetInlineStart,\n        });\n      };\n    },\n    [\n      trackRef,\n      popoverRef,\n      bodyRef,\n      contentRef,\n      arrowRef,\n      keepPosition,\n      allowScrollToFit,\n      preferredPosition,\n      renderWithPortal,\n      allowVerticalOverflow,\n    ]\n  );\n  return { updatePositionHandler, popoverStyle, internalPosition, positionHandlerRef };\n}\n\nfunction getBorderWidth(element: HTMLElement) {\n  return parseInt(getComputedStyle(element).borderWidth) || 0;\n}\n\n/**\n * Convert a viewport-relative offset to an element-relative offset.\n */\nfunction toRelativePosition(element: Offset, parent: Offset): Offset {\n  return {\n    insetBlockStart: element.insetBlockStart - parent.insetBlockStart,\n    insetInlineStart: element.insetInlineStart - parent.insetInlineStart,\n  };\n}\n\n/**\n * Get a BoundingBox that represents the visible viewport.\n */\nfunction getViewportRect(window: Window): BoundingBox {\n  return {\n    insetBlockStart: 0,\n    insetInlineStart: 0,\n    inlineSize: window.innerWidth,\n    blockSize: window.innerHeight,\n  };\n}\n\nfunction getDocumentRect(document: Document): BoundingBox {\n  const { insetBlockStart, insetInlineStart } = getLogicalBoundingClientRect(document.documentElement);\n\n  return {\n    insetBlockStart,\n    insetInlineStart,\n    inlineSize: document.documentElement.scrollWidth,\n    blockSize: document.documentElement.scrollHeight,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PopoverProps, InternalPosition, BoundingBox, Dimensions } from '../interfaces';\n\n// A structure describing how the popover should be positioned\ninterface CalculatedPosition {\n  scrollable?: boolean;\n  internalPosition: InternalPosition;\n  rect: BoundingBox;\n}\n\ninterface ElementGroup {\n  body: Dimensions;\n  trigger: BoundingBox;\n  arrow: Dimensions;\n}\n\nconst ARROW_OFFSET = 12;\n\nexport const PRIORITY_MAPPING: Record<PopoverProps.Position, InternalPosition[]> = {\n  top: [\n    'top-center',\n    'top-right',\n    'top-left',\n    'bottom-center',\n    'bottom-right',\n    'bottom-left',\n    'right-top',\n    'right-bottom',\n    'left-top',\n    'left-bottom',\n  ],\n  bottom: [\n    'bottom-center',\n    'bottom-right',\n    'bottom-left',\n    'top-center',\n    'top-right',\n    'top-left',\n    'right-top',\n    'right-bottom',\n    'left-top',\n    'left-bottom',\n  ],\n  left: [\n    'left-top',\n    'left-bottom',\n    'right-top',\n    'right-bottom',\n    'bottom-center',\n    'top-center',\n    'bottom-left',\n    'top-left',\n    'bottom-right',\n    'top-right',\n  ],\n  right: [\n    'right-top',\n    'right-bottom',\n    'left-top',\n    'left-bottom',\n    'bottom-center',\n    'top-center',\n    'bottom-right',\n    'top-right',\n    'bottom-left',\n    'top-left',\n  ],\n};\n\nconst RECTANGLE_CALCULATIONS: Record<InternalPosition, (r: ElementGroup) => BoundingBox> = {\n  'top-center': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart: trigger.insetBlockStart - body.blockSize - arrow.blockSize,\n      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 - body.inlineSize / 2,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'top-right': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart: trigger.insetBlockStart - body.blockSize - arrow.blockSize,\n      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 - ARROW_OFFSET - arrow.inlineSize / 2,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'top-left': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart: trigger.insetBlockStart - body.blockSize - arrow.blockSize,\n      insetInlineStart:\n        trigger.insetInlineStart + trigger.inlineSize / 2 + ARROW_OFFSET + arrow.inlineSize / 2 - body.inlineSize,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'bottom-center': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart: trigger.insetBlockStart + trigger.blockSize + arrow.blockSize,\n      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 - body.inlineSize / 2,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'bottom-right': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart: trigger.insetBlockStart + trigger.blockSize + arrow.blockSize,\n      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 - ARROW_OFFSET - arrow.inlineSize / 2,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'bottom-left': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart: trigger.insetBlockStart + trigger.blockSize + arrow.blockSize,\n      insetInlineStart:\n        trigger.insetInlineStart + trigger.inlineSize / 2 + ARROW_OFFSET + arrow.inlineSize / 2 - body.inlineSize,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'right-top': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart: trigger.insetBlockStart + trigger.blockSize / 2 - ARROW_OFFSET - arrow.blockSize,\n      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize + arrow.blockSize,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'right-bottom': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart:\n        trigger.insetBlockStart + trigger.blockSize / 2 - body.blockSize + ARROW_OFFSET + arrow.blockSize,\n      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize + arrow.blockSize,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'left-top': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart: trigger.insetBlockStart + trigger.blockSize / 2 - ARROW_OFFSET - arrow.blockSize,\n      insetInlineStart: trigger.insetInlineStart - body.inlineSize - arrow.blockSize,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n  'left-bottom': ({ body, trigger, arrow }) => {\n    return {\n      insetBlockStart:\n        trigger.insetBlockStart + trigger.blockSize / 2 - body.blockSize + ARROW_OFFSET + arrow.blockSize,\n      insetInlineStart: trigger.insetInlineStart - body.inlineSize - arrow.blockSize,\n      inlineSize: body.inlineSize,\n      blockSize: body.blockSize,\n    };\n  },\n};\n\nfunction fitIntoContainer(inner: BoundingBox, outer: BoundingBox): BoundingBox {\n  let { insetInlineStart, inlineSize, insetBlockStart, blockSize } = inner;\n\n  // Adjust left boundary.\n  if (insetInlineStart < outer.insetInlineStart) {\n    inlineSize = insetInlineStart + inlineSize - outer.insetInlineStart;\n    insetInlineStart = outer.insetInlineStart;\n  }\n  // Adjust right boundary.\n  else if (insetInlineStart + inlineSize > outer.insetInlineStart + outer.inlineSize) {\n    inlineSize = outer.insetInlineStart + outer.inlineSize - insetInlineStart;\n  }\n  // Adjust top boundary.\n  if (insetBlockStart < outer.insetBlockStart) {\n    blockSize = insetBlockStart + blockSize - outer.insetBlockStart;\n    insetBlockStart = outer.insetBlockStart;\n  }\n  // Adjust bottom boundary.\n  else if (insetBlockStart + blockSize > outer.insetBlockStart + outer.blockSize) {\n    blockSize = outer.insetBlockStart + outer.blockSize - insetBlockStart;\n  }\n\n  return { insetInlineStart, inlineSize, insetBlockStart, blockSize };\n}\n\nfunction getTallestRect(rect1: BoundingBox, rect2: BoundingBox): BoundingBox {\n  return rect1.blockSize >= rect2.blockSize ? rect1 : rect2;\n}\n\nfunction getIntersection(rectangles: BoundingBox[]): BoundingBox | null {\n  let boundingBox: BoundingBox | null = null;\n  for (const currentRect of rectangles) {\n    if (!boundingBox) {\n      boundingBox = currentRect;\n      continue;\n    }\n    const insetInlineStart = Math.max(boundingBox.insetInlineStart, currentRect.insetInlineStart);\n    const insetBlockStart = Math.max(boundingBox.insetBlockStart, currentRect.insetBlockStart);\n    const insetInlineEnd = Math.min(\n      boundingBox.insetInlineStart + boundingBox.inlineSize,\n      currentRect.insetInlineStart + currentRect.inlineSize\n    );\n    const insetBlockEnd = Math.min(\n      boundingBox.insetBlockStart + boundingBox.blockSize,\n      currentRect.insetBlockStart + currentRect.blockSize\n    );\n\n    if (insetInlineEnd < insetInlineStart || insetBlockEnd < insetBlockStart) {\n      return null;\n    }\n    boundingBox = {\n      insetInlineStart,\n      insetBlockStart,\n      inlineSize: insetInlineEnd - insetInlineStart,\n      blockSize: insetBlockEnd - insetBlockStart,\n    };\n  }\n  return boundingBox;\n}\n\n/**\n * Returns the area of the intersection of passed in rectangles or a null, if there is no intersection\n */\nexport function intersectRectangles(rectangles: BoundingBox[]): number | null {\n  const boundingBox: BoundingBox | null = getIntersection(rectangles);\n  return boundingBox && boundingBox.blockSize * boundingBox.inlineSize;\n}\n\ntype CandidatePosition = CalculatedPosition & { visibleArea: BoundingBox | null };\n\n/**\n * A functions that returns the correct popover position based on screen dimensions.\n */\nexport function calculatePosition({\n  preferredPosition,\n  fixedInternalPosition,\n  trigger,\n  arrow,\n  body,\n  container,\n  viewport,\n  // the popover is only bound by the viewport if it is rendered in a portal\n  renderWithPortal,\n  allowVerticalOverflow,\n}: {\n  preferredPosition: PopoverProps.Position;\n  fixedInternalPosition?: InternalPosition;\n  trigger: BoundingBox;\n  arrow: Dimensions;\n  body: Dimensions;\n  container: BoundingBox;\n  viewport: BoundingBox;\n  // the popover is only bound by the viewport if it is rendered in a portal\n  renderWithPortal?: boolean;\n  allowVerticalOverflow?: boolean;\n}): CalculatedPosition {\n  let bestOption: CandidatePosition | null = null;\n\n  // If a fixed internal position is passed, only consider this one.\n  const preferredInternalPositions = fixedInternalPosition\n    ? [fixedInternalPosition]\n    : PRIORITY_MAPPING[preferredPosition];\n\n  // Attempt to position the popover based on the priority list for this position.\n  for (const internalPosition of preferredInternalPositions) {\n    const rect = RECTANGLE_CALCULATIONS[internalPosition]({ body, trigger, arrow });\n    const visibleArea = renderWithPortal\n      ? getIntersection([rect, viewport])\n      : getIntersection([rect, viewport, container]);\n\n    const fitsWithoutOverflow =\n      visibleArea && visibleArea.inlineSize === body.inlineSize && visibleArea.blockSize === body.blockSize;\n\n    if (fitsWithoutOverflow) {\n      return { internalPosition, rect };\n    }\n\n    const newOption = { rect, internalPosition, visibleArea };\n    bestOption = getBestOption(newOption, bestOption);\n  }\n\n  // Use best possible placement.\n  const internalPosition = bestOption?.internalPosition || 'right-top';\n  // Get default rect for that placement.\n  const rect = RECTANGLE_CALCULATIONS[internalPosition]({ body, trigger, arrow });\n\n  // Get largest possible rect that fits into the viewport or container.\n\n  // We allow the popover to overflow the viewport if allowVerticalOverflow is true _and_ the popover will be anchored to the top or the bottom.\n  // If it is anchored to the right or left, we consider that it should have enough vertical space so that applying scroll to it is a better option.\n  const tallestBoundingContainer = getTallestRect(viewport, container);\n  const boundingContainer =\n    allowVerticalOverflow && isTopOrBottom(internalPosition)\n      ? {\n          insetBlockStart: tallestBoundingContainer.insetBlockStart,\n          blockSize: tallestBoundingContainer.blockSize,\n          insetInlineStart: viewport.insetInlineStart,\n          inlineSize: viewport.inlineSize,\n        }\n      : viewport;\n\n  const optimizedRect = fitIntoContainer(rect, boundingContainer);\n\n  // If largest possible rect is shorter than original - set body scroll.\n  const scrollable = optimizedRect.blockSize < rect.blockSize;\n\n  return { internalPosition, rect: optimizedRect, scrollable };\n}\n\nfunction getBestOption(option1: CandidatePosition, option2: CandidatePosition | null) {\n  // Within calculatePosition, the only case where option2 will not be defined will be in the first call.\n  // The only case where the visibleArea of an option will be null is when the popover is totally outside of the viewport.\n  if (!option2?.visibleArea) {\n    return option1;\n  }\n  if (!option1.visibleArea) {\n    return option2;\n  }\n  // Only if none of the two options overflows horizontally, choose the best based on the visible height.\n  if (option1.visibleArea.inlineSize === option2.visibleArea.inlineSize) {\n    return option1.visibleArea.blockSize > option2.visibleArea.blockSize ? option1 : option2;\n  }\n  // Otherwise, choose the option that is less cut off horizontally.\n  return option1.visibleArea.inlineSize > option2.visibleArea.inlineSize ? option1 : option2;\n}\n\nexport function getOffsetDimensions(element: HTMLElement) {\n  return { offsetHeight: element.offsetHeight, offsetWidth: element.offsetWidth };\n}\n\nexport function getDimensions(element: HTMLElement) {\n  const computedStyle = getComputedStyle(element);\n  return {\n    inlineSize: parseFloat(computedStyle.inlineSize),\n    blockSize: parseFloat(computedStyle.blockSize),\n  };\n}\n\nfunction isTopOrBottom(internalPosition: InternalPosition) {\n  return ['top', 'bottom'].includes(internalPosition.split('-')[0]);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function isRtl(element: HTMLElement | SVGElement) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\n/**\n * The scrollLeft value will be a negative number if the direction is RTL and\n * needs to be converted to a positive value for direction independent scroll\n * computations. Additionally, the scrollLeft value can be a decimal value on\n * systems using display scaling requiring the floor and ceiling calls.\n */\nexport function getScrollInlineStart(element: HTMLElement) {\n  return isRtl(element) ? Math.floor(element.scrollLeft) * -1 : Math.ceil(element.scrollLeft);\n}\n\n/**\n * The getBoundingClientRect() function returns values relative to the top left\n * corner of the document regardless of document direction. The left/right position\n * will be transformed to insetInlineStart based on element direction in order to\n * support direction agnostic position computation.\n */\nexport function getLogicalBoundingClientRect(element: HTMLElement | SVGElement) {\n  const boundingClientRect = element.getBoundingClientRect();\n\n  const blockSize = boundingClientRect.height;\n  const inlineSize = boundingClientRect.width;\n  const insetBlockStart = boundingClientRect.top;\n  const insetBlockEnd = boundingClientRect.bottom;\n  const insetInlineStart = isRtl(element)\n    ? document.documentElement.clientWidth - boundingClientRect.right\n    : boundingClientRect.left;\n  const insetInlineEnd = insetInlineStart + inlineSize;\n\n  return {\n    blockSize,\n    inlineSize,\n    insetBlockStart,\n    insetBlockEnd,\n    insetInlineStart,\n    insetInlineEnd,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport FocusLock from '../internal/components/focus-lock';\n\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../i18n/context';\n\nexport interface PopoverBodyProps {\n  dismissButton: boolean;\n  dismissAriaLabel: string | undefined;\n  onDismiss: (() => void) | undefined;\n\n  header: React.ReactNode | undefined;\n  children: React.ReactNode;\n  variant?: 'annotation';\n  overflowVisible?: 'content' | 'both';\n\n  className?: string;\n  ariaLabelledby?: string;\n}\n\nexport default function PopoverBody({\n  dismissButton: showDismissButton,\n  dismissAriaLabel,\n  header,\n  children,\n  onDismiss,\n  variant,\n  overflowVisible,\n  className,\n  ariaLabelledby,\n}: PopoverBodyProps) {\n  const i18n = useInternalI18n('popover');\n  const labelledById = useUniqueId('awsui-popover-');\n  const dismissButtonFocused = useRef(false);\n  const dismissButtonRef = useRef<ButtonProps.Ref>(null);\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.keyCode === KeyCode.escape) {\n        event.stopPropagation();\n        onDismiss?.();\n      }\n    },\n    [onDismiss]\n  );\n\n  // Implement our own auto-focus rather than using FocusLock's,\n  // because we also want to focus the dismiss button when it\n  // is added dynamically (e.g. in chart popovers)\n  useEffect(() => {\n    if (showDismissButton && !dismissButtonFocused.current) {\n      dismissButtonRef.current?.focus({ preventScroll: true });\n    }\n    dismissButtonFocused.current = showDismissButton;\n  }, [showDismissButton]);\n\n  const dismissButton = (showDismissButton ?? null) && (\n    <div className={styles.dismiss}>\n      <InternalButton\n        variant=\"icon\"\n        formAction=\"none\"\n        iconName=\"close\"\n        className={styles['dismiss-control']}\n        ariaLabel={i18n('dismissAriaLabel', dismissAriaLabel)}\n        onClick={() => onDismiss?.()}\n        ref={dismissButtonRef}\n      />\n    </div>\n  );\n\n  const isDialog = showDismissButton;\n  const shouldTrapFocus = showDismissButton && variant !== 'annotation';\n\n  const dialogProps = isDialog\n    ? {\n        role: 'dialog',\n        'aria-modal': shouldTrapFocus ? true : undefined,\n        'aria-labelledby': ariaLabelledby ?? (header ? labelledById : undefined),\n      }\n    : {};\n\n  return (\n    <div\n      className={clsx(styles.body, className, {\n        [styles['body-overflow-visible']]: overflowVisible === 'both',\n      })}\n      onKeyDown={onKeyDown}\n      {...dialogProps}\n    >\n      <FocusLock disabled={!shouldTrapFocus} autoFocus={false}>\n        {header && (\n          <div className={clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])}>\n            {dismissButton}\n            <div className={styles.header} id={labelledById}>\n              <h2>{header}</h2>\n            </div>\n          </div>\n        )}\n        <div className={!header && showDismissButton ? styles['has-dismiss'] : undefined}>\n          {!header && dismissButton}\n          <div className={clsx(styles.content, { [styles['content-overflow-visible']]: !!overflowVisible })}>\n            {children}\n          </div>\n        </div>\n      </FocusLock>\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useVisualContext } from '../../components/visual-context';\nimport { useCurrentMode, useDensityMode } from '@cloudscape-design/component-toolkit/internal';\nimport { useVisualRefresh } from '../use-visual-mode';\n\nexport function usePortalModeClasses(ref: React.RefObject<HTMLElement>) {\n  const colorMode = useCurrentMode(ref);\n  const densityMode = useDensityMode(ref);\n  const context = useVisualContext(ref);\n  const visualRefresh = useVisualRefresh();\n  return clsx({\n    'awsui-polaris-dark-mode awsui-dark-mode': colorMode === 'dark',\n    'awsui-polaris-compact-mode awsui-compact-mode': densityMode === 'compact',\n    'awsui-visual-refresh': visualRefresh,\n    [`awsui-context-${context}`]: context,\n  });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.css.js';\nimport { InternalPosition } from './interfaces';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nexport interface ArrowProps {\n  position: InternalPosition | null;\n}\n\nconst Arrow = (props: ArrowProps) => {\n  const isVisualRefresh = useVisualRefresh();\n\n  return (\n    <div className={clsx(styles.arrow, props.position && styles[`arrow-position-${props.position}`])}>\n      <div className={styles['arrow-outer']} />\n      <div className={clsx(styles['arrow-inner'], isVisualRefresh && styles.refresh)} />\n    </div>\n  );\n};\n\nexport default React.memo(Arrow);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fireNonCancelableEvent, fireCancelableEvent } from '../internal/events/index';\nimport { TableProps } from './interfaces';\nimport { findUpUntil } from '../internal/utils/dom';\nimport styles from './styles.css.js';\n\nexport function useRowEvents<T>({ onRowClick, onRowContextMenu }: Pick<TableProps, 'onRowClick' | 'onRowContextMenu'>) {\n  const onRowClickHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const tableCell = findUpUntil(event.target as HTMLElement, element => element.tagName.toLowerCase() === 'td');\n    if (!tableCell || !tableCell.classList.contains(styles['selection-control'])) {\n      const details: TableProps.OnRowClickDetail<T> = { rowIndex, item };\n      fireNonCancelableEvent(onRowClick, details);\n    }\n  };\n  const onRowContextMenuHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const details: TableProps.OnRowContextMenuDetail<T> = {\n      rowIndex,\n      item,\n      clientX: event.clientX,\n      clientY: event.clientY,\n    };\n    fireCancelableEvent(onRowContextMenu, details, event);\n  };\n\n  return {\n    onRowClickHandler: onRowClick && onRowClickHandler,\n    onRowContextMenuHandler: onRowContextMenu && onRowContextMenuHandler,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { RefObject, useRef } from 'react';\nimport { supportsStickyPosition } from '../../utils/dom';\n\n/**\n * useScrollSync returns scroll event handler to be attached to synchronized scroll elements.\n *\n * For example\n *    const handleScroll = useScrollSync([ref1, ref2]);\n *    <div ref={ref1} onScroll={handleScroll}/>\n *    <div ref={ref2} onScroll={handleScroll}/>\n */\nexport function useScrollSync(refs: Array<RefObject<any>>, disabled = !supportsStickyPosition()) {\n  const activeElement = useRef<HTMLElement | null>(null);\n  const onScroll = (event: React.UIEvent) => {\n    const targetElement = event.currentTarget as HTMLElement;\n    // remembers the first element that fires onscroll to align with other elements against it\n    if (targetElement && (activeElement.current === null || activeElement.current === targetElement)) {\n      requestAnimationFrame(() => {\n        activeElement.current = targetElement;\n        refs.forEach(ref => {\n          const element = ref.current;\n          if (element && element !== targetElement) {\n            element.scrollLeft = targetElement.scrollLeft;\n          }\n        });\n        // unblock the ability to scroll the synced elements\n        requestAnimationFrame(() => {\n          activeElement.current = null;\n        });\n      });\n    }\n  };\n\n  return !disabled ? onScroll : undefined;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { TableProps } from './interfaces';\nimport Thead, { TheadProps } from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { TableRole, getTableRoleProps } from './table-role';\n\nexport interface StickyHeaderRef {\n  scrollToTop(): void;\n  scrollToRow(node: null | HTMLElement): void;\n  setFocus(focusId: null | string): void;\n}\n\ninterface StickyHeaderProps {\n  variant: TableProps.Variant;\n  theadProps: TheadProps;\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  theadRef: React.RefObject<HTMLTableRowElement>;\n  secondaryWrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  contentDensity?: 'comfortable' | 'compact';\n  tableHasHeader?: boolean;\n  tableRole: TableRole;\n}\n\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(\n  {\n    variant,\n    theadProps,\n    wrapperRef,\n    theadRef,\n    secondaryWrapperRef,\n    onScroll,\n    tableRef,\n    tableHasHeader,\n    contentDensity,\n    tableRole,\n  }: StickyHeaderProps,\n  ref: React.Ref<StickyHeaderRef>\n) {\n  const secondaryTheadRef = useRef<HTMLTableRowElement>(null);\n  const secondaryTableRef = useRef<HTMLTableElement>(null);\n  const { isStuck } = useContext(StickyHeaderContext);\n\n  const [focusedComponent, setFocusedComponent] = useState<null | string>(null);\n  const { scrollToRow, scrollToTop } = useStickyHeader(\n    tableRef,\n    theadRef,\n    secondaryTheadRef,\n    secondaryTableRef,\n    wrapperRef\n  );\n\n  useImperativeHandle(ref, () => ({\n    scrollToTop,\n    scrollToRow,\n    setFocus: setFocusedComponent,\n  }));\n\n  return (\n    <div\n      className={clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n        [styles.stuck]: isStuck,\n        [styles['table-has-header']]: tableHasHeader,\n      })}\n      aria-hidden={true}\n      // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n      // to scroll the table horizontally\n      tabIndex={-1}\n      ref={secondaryWrapperRef}\n      onScroll={onScroll}\n    >\n      <table\n        className={clsx(\n          styles.table,\n          styles['table-layout-fixed'],\n          contentDensity === 'compact' && getVisualContextClassname('compact-table')\n        )}\n        ref={secondaryTableRef}\n        {...getTableRoleProps({ tableRole })}\n      >\n        <Thead\n          ref={secondaryTheadRef}\n          sticky={true}\n          stuck={isStuck}\n          focusedComponent={focusedComponent}\n          {...theadProps}\n        />\n      </table>\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, RefObject, useCallback } from 'react';\nimport stickyScrolling, { calculateScrollingOffset, scrollUpBy } from './sticky-scrolling';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nexport const useStickyHeader = (\n  tableRef: RefObject<HTMLElement>,\n  theadRef: RefObject<HTMLElement>,\n  secondaryTheadRef: RefObject<HTMLElement>,\n  secondaryTableRef: RefObject<HTMLElement>,\n  tableWrapperRef: RefObject<HTMLElement>\n) => {\n  const isMobile = useMobile();\n  // Sync the sizes of the column header copies in the sticky header with the originals\n  const syncColumnHeaderWidths = useCallback(() => {\n    if (\n      tableRef.current &&\n      theadRef.current &&\n      secondaryTheadRef.current &&\n      secondaryTableRef.current &&\n      tableWrapperRef.current\n    ) {\n      // Using the tableRef offsetWidth instead of the theadRef because in VR\n      // the tableRef adds extra padding to the table and by default the theadRef will have a width\n      // without the padding and will make the sticky header width incorrect.\n      secondaryTableRef.current.style.width = `${tableRef.current.offsetWidth}px`;\n\n      tableWrapperRef.current.style.marginTop = `-${theadRef.current.offsetHeight}px`;\n    }\n  }, [theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef, tableRef]);\n  useLayoutEffect(() => {\n    syncColumnHeaderWidths();\n  });\n  useResizeObserver(theadRef, syncColumnHeaderWidths);\n  const scrollToTop = () => {\n    if (!isMobile && theadRef.current && secondaryTheadRef.current && tableWrapperRef.current) {\n      const scrollDist = calculateScrollingOffset(theadRef.current, secondaryTheadRef.current);\n      if (scrollDist > 0) {\n        scrollUpBy(scrollDist, tableWrapperRef.current);\n      }\n    }\n  };\n  const { scrollToItem } = stickyScrolling(tableWrapperRef, secondaryTheadRef);\n  const scrollToRow = (itemNode: HTMLElement | null) => {\n    if (!isMobile) {\n      scrollToItem(itemNode);\n    }\n  };\n  return { scrollToRow, scrollToTop };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\n\n/**\n * @param containerRef ref to surrounding container with sticky element\n * @param stickyRef ref to sticky element scrolled inside of containerRef\n * @param containerOffset offset between header and container\n *                        originating borders or paddings\n */\nexport default function stickyScrolling(\n  containerRef: React.MutableRefObject<HTMLElement | null>,\n  stickyRef: React.MutableRefObject<HTMLElement | null>\n) {\n  const scrollToTop = () => {\n    if (!containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const scrollingOffset = calculateScrollingOffset(containerRef.current, stickyRef.current);\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  const scrollToItem = (item: HTMLElement | null) => {\n    if (!item || !containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const stickyBottom = stickyRef.current.getBoundingClientRect().bottom;\n    const scrollingOffset = stickyBottom - item.getBoundingClientRect().top;\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  return {\n    scrollToTop,\n    scrollToItem,\n  };\n}\n\n/**\n * Calculates the scrolling offset between container and\n * sticky element with container offset caused by border\n * or padding\n * @param container\n * @param sticky element inside of container\n * @param containerOffset caused by borders or paddings\n */\nexport function calculateScrollingOffset(container: HTMLElement, sticky: HTMLElement) {\n  const stickyRect = sticky.getBoundingClientRect();\n  const containerRect = container.getBoundingClientRect();\n  return stickyRect.top - containerRect.top;\n}\n\n/**\n * Scrolls suitable parent of container up by amount of pixels\n * @param amount pixels to be scrolled up\n * @param container used to determine next parent element for scrolling\n */\nexport function scrollUpBy(amount: number, container: HTMLElement) {\n  const parent = getOverflowParents(container);\n  if (parent.length) {\n    // Take next overflow parent in stack\n    parent[0].scrollTop -= amount;\n  } else {\n    window.scrollTo({ top: window.pageYOffset - amount });\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createSingletonHandler } from '@cloudscape-design/component-toolkit/internal';\nimport { useRef } from 'react';\n\nconst useEventListenersSingleton = createSingletonHandler<Node | null>(setTarget => {\n  function handleMouseDown(event: MouseEvent) {\n    setTarget(event.target as Node);\n  }\n  function handleKeyDown() {\n    setTarget(null);\n  }\n  window.addEventListener('mousedown', handleMouseDown);\n  window.addEventListener('keydown', handleKeyDown);\n  return () => {\n    window.removeEventListener('mousedown', handleMouseDown);\n    window.removeEventListener('keydown', handleKeyDown);\n  };\n});\n\n/**\n * Captures last mouse down target and clears it on keydown.\n * @returns a callback to get the last detected mouse down target.\n */\nexport default function useMouseDownTarget() {\n  const mouseDownTargetRef = useRef<null | Node>(null);\n  useEventListenersSingleton(target => {\n    mouseDownTargetRef.current = target;\n  });\n  return () => mouseDownTargetRef.current;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RefObject, useCallback, useEffect, useMemo } from 'react';\nimport { scrollElementIntoView } from '../internal/utils/scrollable-containers';\nimport { TableProps } from './interfaces';\n\nfunction iterateTableCells<T extends HTMLElement>(\n  table: T,\n  func: (cell: HTMLTableCellElement, rowIndex: number, columnIndex: number) => void\n) {\n  table.querySelectorAll('tr').forEach((row: HTMLTableRowElement, rowIndex: number) => {\n    row.querySelectorAll('td').forEach((cell, cellIndex) => {\n      func(cell, rowIndex, cellIndex);\n    });\n  });\n}\n\ninterface TableFocusNavigationProps<T> {\n  enableKeyboardNavigation?: boolean;\n  selectionType: TableProps['selectionType'];\n  tableRoot: RefObject<HTMLTableElement>;\n  columnDefinitions: Readonly<T[]>;\n  numRows: number;\n}\n\n/**\n * This hook is used to navigate between table cells using the keyboard arrow keys.\n * All the functionality is implemented in the hook, so the table component does not\n * need to implement any keyboard event handlers.\n * @param enable - Toggle functionality of the hook\n * @param tableRoot - A ref to a table container. Ideally the root element of the table (<table>); tbody is also acceptable.\n * @param columnDefinitions - The column definitions for the table.\n * @param numRows - The number of rows in the table.\n */\nfunction useTableFocusNavigation<T extends { editConfig?: TableProps.EditConfig<any> }>({\n  enableKeyboardNavigation,\n  selectionType,\n  tableRoot,\n  columnDefinitions,\n  numRows,\n}: TableFocusNavigationProps<T>) {\n  const focusableColumns = useMemo(() => {\n    const cols = columnDefinitions.map(column => !!column.editConfig);\n    if (selectionType) {\n      cols.unshift(false);\n    }\n    return cols;\n  }, [columnDefinitions, selectionType]);\n\n  const maxColumnIndex = focusableColumns.length - 1;\n  const minColumnIndex = selectionType ? 1 : 0;\n\n  const focusCell = useCallback(\n    (rowIndex: number, columnIndex: number) => {\n      if (tableRoot?.current) {\n        iterateTableCells(tableRoot.current, (cell, rIndex, cIndex) => {\n          if (rIndex === rowIndex && cIndex === columnIndex) {\n            const editButton = cell.querySelector('button:last-child') as HTMLButtonElement | null;\n\n            if (editButton) {\n              editButton.focus?.();\n              scrollElementIntoView(editButton);\n            }\n          }\n        });\n      }\n    },\n    [tableRoot]\n  );\n\n  const shiftFocus = useCallback(\n    (vertical: -1 | 0 | 1, horizontal: -1 | 0 | 1) => {\n      const focusedCell = tableRoot.current?.querySelector<HTMLTableCellElement>('td:focus-within');\n      if (!focusedCell) {\n        return;\n      }\n\n      const columnIndex = focusedCell.cellIndex;\n      const rowIndex = (focusedCell.parentElement as HTMLTableRowElement).rowIndex;\n\n      let newRowIndex = rowIndex;\n      let newColumnIndex = columnIndex;\n\n      if (vertical !== 0) {\n        newRowIndex = Math.min(numRows, Math.max(rowIndex + vertical, 0));\n      }\n\n      if (horizontal !== 0) {\n        while (newColumnIndex <= maxColumnIndex && newColumnIndex >= minColumnIndex) {\n          newColumnIndex += horizontal;\n          if (focusableColumns[newColumnIndex]) {\n            break;\n          }\n        }\n      }\n\n      if ((rowIndex !== newRowIndex || columnIndex !== newColumnIndex) && tableRoot.current) {\n        focusCell(newRowIndex, newColumnIndex);\n      }\n    },\n    [focusCell, focusableColumns, maxColumnIndex, minColumnIndex, numRows, tableRoot]\n  );\n\n  const handleArrowKeyEvents = useCallback(\n    (event: KeyboardEvent) => {\n      const abort =\n        !!tableRoot.current?.querySelector('[data-inline-editing-active = \"true\"]') ||\n        !document.activeElement?.closest('[data-inline-editing-active]');\n\n      if (abort) {\n        return;\n      }\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n          shiftFocus(-1, 0);\n          break;\n        case 'ArrowDown':\n          event.preventDefault();\n          shiftFocus(1, 0);\n          break;\n        case 'ArrowLeft':\n          event.preventDefault();\n          shiftFocus(0, -1);\n          break;\n        case 'ArrowRight':\n          event.preventDefault();\n          shiftFocus(0, 1);\n          break;\n        // istanbul ignore next (default case = do nothing, not testable)\n        default:\n          return;\n      }\n    },\n    [shiftFocus, tableRoot]\n  );\n\n  useEffect(() => {\n    if (!tableRoot.current || enableKeyboardNavigation) {\n      return;\n    }\n\n    const tableElement = tableRoot.current;\n    tableRoot.current.addEventListener('keydown', handleArrowKeyEvents);\n\n    return () => tableElement && tableElement.removeEventListener('keydown', handleArrowKeyEvents);\n  }, [enableKeyboardNavigation, focusableColumns, handleArrowKeyEvents, tableRoot]);\n}\n\nexport default useTableFocusNavigation;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport { useStickyScrollbar } from './use-sticky-scrollbar';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useAppLayoutContext } from '../../internal/context/app-layout-context';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { browserScrollbarSize } from '../../internal/utils/browser-scrollbar-size';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\n\ninterface StickyScrollbarProps {\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  hasStickyColumns?: boolean;\n}\n\nexport default forwardRef(StickyScrollbar);\n\nfunction StickyScrollbar(\n  { wrapperRef, tableRef, onScroll, hasStickyColumns }: StickyScrollbarProps,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const isVisualRefresh = useVisualRefresh();\n  const scrollbarRef = React.useRef<HTMLDivElement>(null);\n  const scrollbarContentRef = React.useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(ref, scrollbarRef);\n\n  /**\n   * If the height of the scrollbar is 0, we're likely on a platform that uses\n   * overlay scrollbars (e.g. Mac).\n   */\n  const offsetScrollbar = hasStickyColumns || browserScrollbarSize().height === 0;\n\n  /**\n   * Use the appropriate AppLayout context (Classic or Visual Refresh) to determine\n   * the offsetBottom value to be used in the useStickyScrollbar hook.\n   */\n  const { stickyOffsetBottom } = useAppLayoutContext();\n\n  useStickyScrollbar(scrollbarRef, scrollbarContentRef, tableRef, wrapperRef, stickyOffsetBottom, offsetScrollbar);\n  return (\n    <div\n      ref={mergedRef}\n      className={clsx(\n        styles['sticky-scrollbar'],\n        offsetScrollbar && styles['sticky-scrollbar-offset'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onScroll={onScroll}\n    >\n      <div ref={scrollbarContentRef} className={styles['sticky-scrollbar-content']} />\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { RefObject, useEffect, useState } from 'react';\nimport styles from './styles.css.js';\nimport { getContainingBlock, supportsStickyPosition } from '../../internal/utils/dom';\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers';\nimport { browserScrollbarSize } from '../../internal/utils/browser-scrollbar-size';\n\nexport const updatePosition = (\n  tableEl: HTMLElement | null,\n  wrapperEl: HTMLElement | null,\n  scrollbarEl: HTMLElement | null,\n  scrollbarContentEl: HTMLElement | null,\n  hasContainingBlock: boolean,\n  consideredFooterHeight: number\n) => {\n  if (!tableEl || !scrollbarEl || !wrapperEl) {\n    return;\n  }\n\n  const { width: tableWidth } = tableEl.getBoundingClientRect();\n  const { width: wrapperWidth } = wrapperEl.getBoundingClientRect();\n\n  // using 15 px as a height of transparent scrollbar on mac\n  const scrollbarHeight = browserScrollbarSize().height;\n  const areaIsScrollable = tableWidth > wrapperWidth;\n\n  if (!areaIsScrollable) {\n    scrollbarEl.classList.remove(styles['sticky-scrollbar-visible']);\n  } else {\n    // when scrollbar is not displayed scrollLeft property cannot be set by useScrollSync\n    // that's why syncing it separately\n    if (!scrollbarEl.classList.contains(styles['sticky-scrollbar-visible'])) {\n      requestAnimationFrame(() => {\n        scrollbarEl.scrollLeft = wrapperEl.scrollLeft;\n      });\n    }\n\n    scrollbarEl.classList.add(styles['sticky-scrollbar-visible']);\n    if (!scrollbarHeight) {\n      /* istanbul ignore next: covered by screenshot tests */\n      scrollbarEl.classList.add(styles['sticky-scrollbar-native-invisible']);\n    }\n  }\n\n  if (scrollbarHeight && scrollbarEl && scrollbarContentEl) {\n    scrollbarEl.style.height = `${scrollbarHeight}px`;\n    scrollbarContentEl.style.height = `${scrollbarHeight}px`;\n  }\n\n  if (tableEl && wrapperEl && scrollbarContentEl && scrollbarEl) {\n    const wrapperElRect = wrapperEl.getBoundingClientRect();\n    const tableElRect = tableEl.getBoundingClientRect();\n    scrollbarEl.style.width = `${wrapperElRect.width}px`;\n    scrollbarContentEl.style.width = `${tableElRect.width}px`;\n\n    // when using sticky scrollbars in containers\n    // we agreed to ignore dynamic bottom calculations for footer overlap\n    scrollbarEl.style.bottom = hasContainingBlock ? '0px' : `${consideredFooterHeight}px`;\n  }\n};\n\nexport function useStickyScrollbar(\n  scrollbarRef: RefObject<HTMLDivElement>,\n  scrollbarContentRef: RefObject<HTMLDivElement>,\n  tableRef: RefObject<HTMLTableElement>,\n  wrapperRef: RefObject<HTMLDivElement>,\n  footerHeight: number,\n  offsetScrollbar: boolean\n) {\n  // We don't take into account containing-block calculations because that would\n  // unnecessarily overcomplicate the position logic. For now, we assume that a\n  // containing block, if present, is below the app layout and above the overflow\n  // parent, which is a pretty safe assumption.\n  const [hasContainingBlock, setHasContainingBlock] = useState(false);\n  // We don't take into account footer height when the overflow parent is child of document body.\n  // Because in this case, we think the footer is outside the overflow parent.\n  const [hasOverflowParent, setHasOverflowParent] = useState(false);\n  const consideredFooterHeight = hasContainingBlock || hasOverflowParent ? 0 : footerHeight;\n\n  const wrapperEl = wrapperRef.current;\n  useEffect(() => {\n    if (wrapperEl && supportsStickyPosition()) {\n      setHasContainingBlock(!!getContainingBlock(wrapperEl));\n      setHasOverflowParent(!!getOverflowParents(wrapperEl)[0]);\n    }\n  }, [wrapperEl]);\n\n  // Update scrollbar position wrapper or table size change.\n  useEffect(() => {\n    if (supportsStickyPosition() && wrapperRef.current && tableRef.current) {\n      const observer = new ResizeObserver(() => {\n        if (scrollbarContentRef.current) {\n          updatePosition(\n            tableRef.current,\n            wrapperRef.current,\n            scrollbarRef.current,\n            scrollbarContentRef.current,\n            hasContainingBlock,\n            consideredFooterHeight\n          );\n        }\n      });\n      // Scrollbar width must be in sync with wrapper width.\n      observer.observe(wrapperRef.current);\n      // Scrollbar content width must be in sync with table width.\n      observer.observe(tableRef.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [\n    scrollbarContentRef,\n    scrollbarRef,\n    tableRef,\n    wrapperRef,\n    consideredFooterHeight,\n    hasContainingBlock,\n    offsetScrollbar,\n  ]);\n\n  // Update scrollbar position when window resizes (vertically).\n  useEffect(() => {\n    if (supportsStickyPosition()) {\n      const resizeHandler = () => {\n        updatePosition(\n          tableRef.current,\n          wrapperRef.current,\n          scrollbarRef.current,\n          scrollbarContentRef.current,\n          hasContainingBlock,\n          consideredFooterHeight\n        );\n      };\n      resizeHandler();\n      window.addEventListener('resize', resizeHandler);\n      return () => {\n        window.removeEventListener('resize', resizeHandler);\n      };\n    }\n  }, [tableRef, wrapperRef, scrollbarRef, scrollbarContentRef, hasContainingBlock, consideredFooterHeight]);\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"sticky-scrollbar\": \"awsui_sticky-scrollbar_faqt8_xxk3x_99\",\n  \"sticky-scrollbar-content\": \"awsui_sticky-scrollbar-content_faqt8_xxk3x_108\",\n  \"sticky-scrollbar-visible\": \"awsui_sticky-scrollbar-visible_faqt8_xxk3x_111\",\n  \"sticky-scrollbar-native-invisible\": \"awsui_sticky-scrollbar-native-invisible_faqt8_xxk3x_114\",\n  \"sticky-scrollbar-offset\": \"awsui_sticky-scrollbar-offset_faqt8_xxk3x_117\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_faqt8_xxk3x_120\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useState } from 'react';\nimport { TableProps } from './interfaces';\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events';\n\nexport interface CellId {\n  rowIndex: number;\n  colIndex: number;\n}\n\ninterface CellEditingProps {\n  onCancel?: CancelableEventHandler;\n  onSubmit?: TableProps.SubmitEditFunction<any>;\n}\n\nexport function useCellEditing({ onCancel, onSubmit }: CellEditingProps) {\n  const [currentEditCell, setCurrentEditCell] = useState<null | CellId>(null);\n  const [lastSuccessfulEditCell, setLastSuccessfulEditCell] = useState<null | CellId>(null);\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n\n  const startEdit = (cellId: CellId) => {\n    setLastSuccessfulEditCell(null);\n    setCurrentEditCell(cellId);\n  };\n\n  const cancelEdit = useCallback(() => setCurrentEditCell(null), []);\n\n  const completeEdit = (cellId: CellId, editCancelled: boolean) => {\n    const eventCancelled = fireCancelableEvent(onCancel, {});\n    if (!eventCancelled) {\n      setCurrentEditCell(null);\n      if (!editCancelled) {\n        setLastSuccessfulEditCell(cellId);\n      }\n    }\n  };\n\n  const checkEditing = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === currentEditCell?.rowIndex && colIndex === currentEditCell.colIndex;\n\n  const checkLastSuccessfulEdit = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === lastSuccessfulEditCell?.rowIndex && colIndex === lastSuccessfulEditCell.colIndex;\n\n  const submitEdit = onSubmit\n    ? async (...args: Parameters<typeof onSubmit>) => {\n        setCurrentEditLoading(true);\n        try {\n          await onSubmit(...args);\n        } finally {\n          setCurrentEditLoading(false);\n        }\n      }\n    : undefined;\n\n  return {\n    isLoading: currentEditLoading,\n    startEdit,\n    cancelEdit,\n    checkEditing,\n    checkLastSuccessfulEdit,\n    completeEdit,\n    submitEdit,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport styles from './styles.css.js';\nimport LiveRegion from '../internal/components/live-region';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\ninterface NoDataCellProps {\n  totalColumnsCount: number;\n  hasFooter: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  empty?: React.ReactNode;\n  tableRef: React.RefObject<HTMLTableElement>;\n  containerRef: React.RefObject<HTMLElement>;\n}\n\nexport function NoDataCell({\n  totalColumnsCount,\n  hasFooter,\n  loading,\n  loadingText,\n  empty,\n  tableRef,\n  containerRef,\n}: NoDataCellProps) {\n  const cellContentRef = useRef<HTMLDivElement>(null);\n\n  useResizeObserver(containerRef, ({ contentBoxWidth: containerWidth }) => {\n    if (tableRef.current && cellContentRef.current && supportsStickyPosition()) {\n      const tablePaddingLeft = parseFloat(getComputedStyle(tableRef.current).paddingLeft) || 0;\n      const tablePaddingRight = parseFloat(getComputedStyle(tableRef.current).paddingRight) || 0;\n      const contentWidth = containerWidth + tablePaddingLeft + tablePaddingRight;\n      cellContentRef.current.style.width = Math.floor(contentWidth) + 'px';\n    }\n  });\n\n  return (\n    <td colSpan={totalColumnsCount} className={clsx(styles['cell-merged'], hasFooter && styles['has-footer'])}>\n      <div ref={cellContentRef} className={styles['cell-merged-content']} data-awsui-table-suppress-navigation={true}>\n        {loading ? (\n          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n            <LiveRegion visible={true}>{loadingText}</LiveRegion>\n          </InternalStatusIndicator>\n        ) : (\n          <div className={styles.empty}>{empty}</div>\n        )}\n      </div>\n    </td>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { BaseComponentProps, getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalIcon from '../icon/internal';\nimport InternalSpinner from '../spinner/internal';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { IconProps } from '../icon/interfaces';\nimport { SomeRequired } from '../internal/types';\n\nconst typeToIcon: (size: IconProps.Size) => Record<StatusIndicatorProps.Type, JSX.Element> = size => ({\n  error: <InternalIcon name=\"status-negative\" size={size} />,\n  warning: <InternalIcon name=\"status-warning\" size={size} />,\n  success: <InternalIcon name=\"status-positive\" size={size} />,\n  info: <InternalIcon name=\"status-info\" size={size} />,\n  stopped: <InternalIcon name=\"status-stopped\" size={size} />,\n  pending: <InternalIcon name=\"status-pending\" size={size} />,\n  'in-progress': <InternalIcon name=\"status-in-progress\" size={size} />,\n  loading: <InternalSpinner />,\n});\n\nexport interface StatusIndicatorProps extends BaseComponentProps {\n  /**\n   * Specifies the status type.\n   */\n  type?: StatusIndicatorProps.Type;\n  /**\n   * A text fragment that communicates the status.\n   */\n  children?: React.ReactNode;\n  /**\n   * Specifies an `aria-label` for the icon. If the status text alone does not fully describe the status,\n   * use this to communicate additional context.\n   */\n  iconAriaLabel?: string;\n  /**\n   * Specifies an override for the status indicator color.\n   */\n  colorOverride?: StatusIndicatorProps.Color;\n  /**\n   * Specifies if the text content should wrap. If you set it to false, it prevents the text from wrapping\n   * and truncates it with an ellipsis.\n   */\n  wrapText?: boolean;\n}\n\nexport interface InternalStatusIndicatorProps\n  extends SomeRequired<StatusIndicatorProps, 'type'>,\n    InternalBaseComponentProps {\n  /**\n   * Play an animation on the error icon when first rendered\n   */\n  __animate?: boolean;\n\n  /**\n   * Size of icon.\n   */\n  __size?: IconProps.Size;\n\n  /**\n   * The CSS behavior of the status indicator container element.\n   */\n  __display?: 'inline' | 'inline-block';\n}\n\nexport namespace StatusIndicatorProps {\n  // Why not enums? Explained there\n  // https://stackoverflow.com/questions/52393730/typescript-string-literal-union-type-from-enum\n  export type Type = 'error' | 'warning' | 'success' | 'info' | 'stopped' | 'pending' | 'in-progress' | 'loading';\n  export type Color = 'blue' | 'grey' | 'green' | 'red' | 'yellow';\n}\n\nexport default function StatusIndicator({\n  type,\n  children,\n  iconAriaLabel,\n  colorOverride,\n  wrapText = true,\n  __animate = false,\n  __internalRootRef,\n  __size = 'normal',\n  __display = 'inline-block',\n  ...rest\n}: InternalStatusIndicatorProps) {\n  const baseProps = getBaseProps(rest);\n  return (\n    <span\n      {...baseProps}\n      className={clsx(\n        styles.root,\n        styles[`status-${type}`],\n        {\n          [styles[`color-override-${colorOverride}`]]: colorOverride,\n        },\n        baseProps.className\n      )}\n      ref={__internalRootRef}\n    >\n      <span\n        className={clsx(\n          styles.container,\n          styles[`display-${__display}`],\n          wrapText === false && styles['overflow-ellipsis'],\n          __animate && styles['container-fade-in']\n        )}\n      >\n        <span\n          className={clsx(styles.icon, __animate && styles['icon-shake'])}\n          aria-label={iconAriaLabel}\n          role={iconAriaLabel ? 'img' : undefined}\n        >\n          {typeToIcon(__size)[type]}\n          {__display === 'inline' && <>&nbsp;</>}\n        </span>\n        {children}\n      </span>\n    </span>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"icon-shake\": \"awsui_icon-shake_1cbgc_azp03_103\",\n  \"awsui-motion-shake-horizontally\": \"awsui_awsui-motion-shake-horizontally_1cbgc_azp03_1\",\n  \"container-fade-in\": \"awsui_container-fade-in_1cbgc_azp03_131\",\n  \"awsui-motion-fade-in-0\": \"awsui_awsui-motion-fade-in-0_1cbgc_azp03_1\",\n  \"root\": \"awsui_root_1cbgc_azp03_153\",\n  \"status-error\": \"awsui_status-error_1cbgc_azp03_162\",\n  \"status-warning\": \"awsui_status-warning_1cbgc_azp03_165\",\n  \"status-success\": \"awsui_status-success_1cbgc_azp03_168\",\n  \"status-info\": \"awsui_status-info_1cbgc_azp03_171\",\n  \"status-stopped\": \"awsui_status-stopped_1cbgc_azp03_174\",\n  \"status-pending\": \"awsui_status-pending_1cbgc_azp03_177\",\n  \"status-in-progress\": \"awsui_status-in-progress_1cbgc_azp03_180\",\n  \"status-loading\": \"awsui_status-loading_1cbgc_azp03_183\",\n  \"color-override-red\": \"awsui_color-override-red_1cbgc_azp03_186\",\n  \"color-override-grey\": \"awsui_color-override-grey_1cbgc_azp03_189\",\n  \"color-override-blue\": \"awsui_color-override-blue_1cbgc_azp03_192\",\n  \"color-override-green\": \"awsui_color-override-green_1cbgc_azp03_195\",\n  \"color-override-yellow\": \"awsui_color-override-yellow_1cbgc_azp03_198\",\n  \"container\": \"awsui_container_1cbgc_azp03_131\",\n  \"display-inline\": \"awsui_display-inline_1cbgc_azp03_202\",\n  \"icon\": \"awsui_icon_1cbgc_azp03_103\",\n  \"display-inline-block\": \"awsui_display-inline-block_1cbgc_azp03_210\",\n  \"overflow-ellipsis\": \"awsui_overflow-ellipsis_1cbgc_azp03_219\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useInternalI18n } from '../../i18n/context';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { TableProps } from '../interfaces';\nimport { ItemSet } from '../selection/utils';\n\ninterface ExpandableItemProps extends ExpandableItemPlacement {\n  isExpandable: boolean;\n  isExpanded: boolean;\n  onExpandableItemToggle: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}\n\ninterface ExpandableItemPlacement {\n  level: number;\n  setSize: number;\n  posInSet: number;\n}\n\nexport function useExpandableTableProps<T>({\n  items,\n  expandableRows,\n  trackBy,\n  ariaLabels,\n}: {\n  items: readonly T[];\n  expandableRows?: TableProps.ExpandableRows<T>;\n  trackBy?: TableProps.TrackBy<T>;\n  ariaLabels?: TableProps.AriaLabels<T>;\n}) {\n  const i18n = useInternalI18n('table');\n  const isExpandable = !!expandableRows;\n\n  const expandedSet = new ItemSet(trackBy, expandableRows?.expandedItems ?? []);\n\n  let allItems = items;\n  const itemToPlacement = new Map<T, ExpandableItemPlacement>();\n  const getItemLevel = (item: T) => itemToPlacement.get(item)?.level ?? 0;\n\n  if (isExpandable) {\n    const visibleItems = new Array<T>();\n\n    const traverse = (item: T, placement: ExpandableItemPlacement) => {\n      itemToPlacement.set(item, placement);\n\n      visibleItems.push(item);\n      if (expandedSet.has(item)) {\n        const children = expandableRows.getItemChildren(item);\n        expandableRows\n          .getItemChildren(item)\n          .forEach((child, index) =>\n            traverse(child, { level: placement.level + 1, setSize: children.length, posInSet: index + 1 })\n          );\n      }\n    };\n    items.forEach((item, index) => traverse(item, { level: 1, setSize: items.length, posInSet: index + 1 }));\n\n    for (let index = 0; index < visibleItems.length; index++) {\n      const item = visibleItems[index];\n      if (expandedSet.has(item)) {\n        let insertionIndex = index + 1;\n        for (insertionIndex; insertionIndex < visibleItems.length; insertionIndex++) {\n          const insertionItem = visibleItems[insertionIndex];\n          if (getItemLevel(item) >= getItemLevel(insertionItem)) {\n            break;\n          }\n        }\n        insertionIndex--;\n      }\n    }\n\n    allItems = visibleItems;\n  }\n\n  const getExpandableItemProps = (item: T): ExpandableItemProps => {\n    const { level, setSize, posInSet } = itemToPlacement.get(item) ?? { level: 1, setSize: 1, posInSet: 1 };\n    return {\n      level,\n      setSize,\n      posInSet,\n      isExpandable: expandableRows?.isItemExpandable(item) ?? true,\n      isExpanded: expandedSet.has(item),\n      onExpandableItemToggle: () =>\n        fireNonCancelableEvent(expandableRows?.onExpandableItemToggle, { item, expanded: !expandedSet.has(item) }),\n      expandButtonLabel: i18n('ariaLabels.expandButtonLabel', ariaLabels?.expandButtonLabel?.(item)),\n      collapseButtonLabel: i18n('ariaLabels.collapseButtonLabel', ariaLabels?.collapseButtonLabel?.(item)),\n    };\n  };\n\n  return { isExpandable, allItems, getExpandableItemProps };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext, useEffect, useRef, useState } from 'react';\n\nimport {\n  FunnelStepContext,\n  FunnelSubStepContext,\n  FunnelContext,\n  FunnelContextValue,\n  FunnelStepContextValue,\n  FunnelState,\n  FunnelSubStepContextValue,\n} from '../context/analytics-context';\nimport { useFunnel, useFunnelStep } from '../hooks/use-funnel';\nimport { useUniqueId } from '../../hooks/use-unique-id';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\n\nimport { PACKAGE_VERSION } from '../../environment';\n\nimport { FunnelMetrics } from '../index';\nimport {\n  AnalyticsMetadata,\n  FunnelProps,\n  FunnelStepProps,\n  StepConfiguration,\n  SubStepConfiguration,\n} from '../interfaces';\n\nimport {\n  DATA_ATTR_FUNNEL_STEP,\n  getFunnelNameSelector,\n  getNameFromSelector,\n  getSubStepAllSelector,\n  getSubStepNameSelector,\n  getSubStepSelector,\n} from '../selectors';\nimport { useDebounceCallback } from '../../hooks/use-debounce-callback';\nimport { nodeBelongs } from '../../utils/node-belongs';\n\nexport const FUNNEL_VERSION = '1.4';\n\ninterface AnalyticsFunnelProps {\n  children?: React.ReactNode;\n  stepConfiguration?: StepConfiguration[];\n  funnelNameSelectors?: string[];\n  funnelType: FunnelProps['funnelType'];\n  optionalStepNumbers: FunnelProps['optionalStepNumbers'];\n  totalFunnelSteps: FunnelProps['totalFunnelSteps'];\n  instanceIdentifier?: AnalyticsMetadata['instanceIdentifier'];\n  flowType?: AnalyticsMetadata['flowType'];\n  errorContext?: AnalyticsMetadata['errorContext'];\n}\n\nexport const AnalyticsFunnel = (props: AnalyticsFunnelProps) => {\n  const { isInFunnel } = useFunnel();\n  /*\n   If the current funnel component is a Form (i.e. single-page funnel), it should\n   defer its funnel-handling to a parent Form element, if present.\n   Wizards (i.e. multi-page funnels) always take highest precedence for handling funnels,\n   and do not defer to any other element.\n  */\n  if (isInFunnel && props.funnelType === 'single-page') {\n    return <>{props.children}</>;\n  }\n\n  return <InnerAnalyticsFunnel {...props} />;\n};\nexport const CREATION_EDIT_FLOW_DONE_EVENT_NAME = 'awsui-creation-edit-flow-done';\nconst dispatchCreateEditFlowDoneEvent = () => {\n  try {\n    window.top?.document.dispatchEvent(new Event(CREATION_EDIT_FLOW_DONE_EVENT_NAME));\n  } catch {\n    // probably because of cross-origin error, then do not dispatch the event\n  }\n};\n\nconst onFunnelCancelled = ({ funnelInteractionId }: { funnelInteractionId: string }) => {\n  FunnelMetrics.funnelCancelled({ funnelInteractionId });\n};\n\nconst onFunnelComplete = ({ funnelInteractionId }: { funnelInteractionId: string }) => {\n  FunnelMetrics.funnelComplete({ funnelInteractionId });\n  dispatchCreateEditFlowDoneEvent();\n};\n\nfunction evaluateSelectors(selectors: string[], defaultSelector: string) {\n  for (const selector of selectors) {\n    const element = document.querySelector(selector);\n    if (element) {\n      return selector;\n    }\n  }\n\n  return defaultSelector;\n}\n\nconst InnerAnalyticsFunnel = ({ children, stepConfiguration, ...props }: AnalyticsFunnelProps) => {\n  const [funnelInteractionId, setFunnelInteractionId] = useState<string>('');\n  const [submissionAttempt, setSubmissionAttempt] = useState(0);\n  const isVisualRefresh = useVisualRefresh();\n  const funnelState = useRef<FunnelState>('default');\n  const funnelNameSelector = useRef<string>(getFunnelNameSelector());\n  const errorCount = useRef<number>(0);\n  const loadingButtonCount = useRef<number>(0);\n  const wizardCount = useRef<number>(0);\n  const latestFocusCleanupFunction = useRef<undefined | (() => void)>(undefined);\n\n  // This useEffect hook is run once on component mount to initiate the funnel analytics.\n  // It first calls the 'funnelStart' method from FunnelMetrics, providing all necessary details\n  // about the funnel, and receives a unique interaction id.\n  // This unique interaction id is then stored in the state for further use.\n  //\n  // On component unmount, it checks whether the funnel was successfully completed.\n  // Based on this, it either calls 'funnelComplete' or 'funnelCancelled' method from FunnelMetrics.\n  //\n  // The eslint-disable is required as we deliberately want this effect to run only once on mount and unmount,\n  // hence we do not provide any dependencies.\n  useEffect(() => {\n    /*\n      We run this effect with a delay, in order to detect whether this funnel contains a Wizard.\n      If it does contain a Wizard, that Wizard should take precedence for handling the funnel, and\n      this current funnel component should do nothing.\n    */\n    let funnelInteractionId: string;\n    const handle = setTimeout(() => {\n      funnelNameSelector.current = evaluateSelectors(props.funnelNameSelectors || [], getFunnelNameSelector());\n\n      if (props.funnelType === 'single-page' && wizardCount.current > 0) {\n        return;\n      }\n\n      // Reset the state, in case the component was re-mounted.\n      funnelState.current = 'default';\n\n      const singleStepFlowStepConfiguration = [\n        { number: 1, isOptional: false, name: getNameFromSelector(funnelNameSelector.current) ?? '' },\n      ];\n\n      funnelInteractionId = FunnelMetrics.funnelStart({\n        instanceIdentifier: props.instanceIdentifier,\n        flowType: props.flowType,\n        funnelNameSelector: funnelNameSelector.current,\n        optionalStepNumbers: props.optionalStepNumbers,\n        funnelType: props.funnelType,\n        totalFunnelSteps: props.totalFunnelSteps,\n        componentVersion: PACKAGE_VERSION,\n        theme: isVisualRefresh ? 'vr' : 'classic',\n        funnelVersion: FUNNEL_VERSION,\n        stepConfiguration: stepConfiguration ?? singleStepFlowStepConfiguration,\n      });\n\n      setFunnelInteractionId(funnelInteractionId);\n    }, 1);\n\n    /*\n      A funnel counts as \"successful\" if it is unmounted after being \"complete\".\n    */\n    /* eslint-disable react-hooks/exhaustive-deps */\n    return () => {\n      clearTimeout(handle);\n      if (props.funnelType === 'single-page' && wizardCount.current > 0) {\n        return;\n      }\n\n      if (funnelState.current === 'validating') {\n        // Finish the validation phase early.\n        onFunnelComplete({ funnelInteractionId });\n        funnelState.current = 'complete';\n      }\n\n      if (funnelState.current === 'complete') {\n        FunnelMetrics.funnelSuccessful({ funnelInteractionId });\n      } else {\n        onFunnelCancelled({ funnelInteractionId });\n        funnelState.current = 'cancelled';\n      }\n    };\n  }, []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const funnelSubmit = () => {\n    funnelState.current = 'validating';\n\n    /*\n      When the user attempts to submit the form, we wait for 50 milliseconds before checking\n      if any form validation errors are present. This value was chosen to give enough time\n      for validation and rerendering to occur, but be low enough that the user will not\n      be able to take further action in the meantime.\n    */\n    const VALIDATION_WAIT_DELAY = 50;\n    /*\n     Loading is expected to take longer than validation, so we can keep the pressure on the CPU low.\n     */\n    const LOADING_WAIT_DELAY = 100;\n\n    const checkForCompleteness = () => {\n      if (funnelState.current === 'complete') {\n        return;\n      }\n\n      if (loadingButtonCount.current > 0) {\n        setTimeout(checkForCompleteness, LOADING_WAIT_DELAY);\n        return;\n      }\n\n      if (errorCount.current === 0) {\n        /*\n          If no validation errors are rendered, we treat the funnel as complete.\n        */\n        onFunnelComplete({ funnelInteractionId });\n        funnelState.current = 'complete';\n      } else {\n        funnelState.current = 'default';\n      }\n    };\n\n    setTimeout(checkForCompleteness, VALIDATION_WAIT_DELAY);\n  };\n\n  const funnelNextOrSubmitAttempt = () => setSubmissionAttempt(i => i + 1);\n\n  const funnelCancel = () => {};\n\n  const funnelContextValue: FunnelContextValue = {\n    funnelInteractionId,\n    setFunnelInteractionId,\n    funnelType: props.funnelType,\n    optionalStepNumbers: props.optionalStepNumbers,\n    totalFunnelSteps: props.totalFunnelSteps,\n    funnelNameSelector: funnelNameSelector.current,\n    funnelSubmit,\n    funnelCancel,\n    submissionAttempt,\n    funnelNextOrSubmitAttempt,\n    funnelState,\n    errorCount,\n    loadingButtonCount,\n    latestFocusCleanupFunction,\n    isInFunnel: true,\n    wizardCount,\n  };\n\n  return <FunnelContext.Provider value={funnelContextValue}>{children}</FunnelContext.Provider>;\n};\n\ninterface AnalyticsFunnelStepProps {\n  instanceIdentifier?: AnalyticsMetadata['instanceIdentifier'];\n  errorContext?: AnalyticsMetadata['errorContext'];\n  children?: React.ReactNode | ((props: FunnelStepContextValue) => React.ReactNode);\n  stepNameSelector?: FunnelStepProps['stepNameSelector'];\n  stepNumber: FunnelStepProps['stepNumber'];\n}\n\nexport const AnalyticsFunnelStep = (props: AnalyticsFunnelStepProps) => {\n  /*\n   This wrapper is used to apply a `key` property to the actual (inner) AnalyticsFunnelStep\n   element. This allows us to keep the state and effects separate per step.\n   */\n  return <InnerAnalyticsFunnelStep {...props} key={props.stepNumber} />;\n};\n\nfunction getSubStepConfiguration(): SubStepConfiguration[] {\n  const subSteps = Array.from(document.querySelectorAll<HTMLElement>(getSubStepAllSelector()));\n\n  const subStepConfiguration = subSteps.map((substep, index) => {\n    const name = substep.querySelector<HTMLElement>(getSubStepNameSelector())?.innerText?.trim() ?? '';\n    return {\n      name,\n      number: index + 1,\n    };\n  });\n  return subStepConfiguration;\n}\n\nfunction useStepChangeListener(stepNumber: number, handler: (stepConfiguration: SubStepConfiguration[]) => void) {\n  const subStepConfiguration = useRef(new Map<number, SubStepConfiguration[] | undefined>());\n  /*\n   Chosen so that it's hopefully shorter than a user interaction, but gives enough time for the\n   amount of containers to stabilise.\n  */\n  const SUBSTEP_CHANGE_DEBOUNCE = 50;\n\n  const listenForSubStepChanges = useRef(false);\n  useEffect(() => {\n    // We prevent emitting the event on the first render.\n    const handle = setTimeout(() => (listenForSubStepChanges.current = true), SUBSTEP_CHANGE_DEBOUNCE);\n\n    return () => {\n      clearTimeout(handle);\n      listenForSubStepChanges.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const handle = setTimeout(\n      () => subStepConfiguration.current.set(stepNumber, getSubStepConfiguration()),\n      SUBSTEP_CHANGE_DEBOUNCE\n    );\n    return () => {\n      clearTimeout(handle);\n    };\n  }, [stepNumber]);\n\n  /* We debounce this handler, so that multiple containers can change at once without causing \n  too many events. */\n  const stepChangeCallback = useDebounceCallback(() => {\n    // We don't want to emit the event after the component has been unmounted.\n    if (!listenForSubStepChanges.current) {\n      return;\n    }\n\n    subStepConfiguration.current.set(stepNumber, getSubStepConfiguration());\n    handler(subStepConfiguration.current.get(stepNumber)!);\n  }, SUBSTEP_CHANGE_DEBOUNCE);\n\n  return { onStepChange: stepChangeCallback, subStepConfiguration };\n}\n\nconst InnerAnalyticsFunnelStep = ({ children, stepNumber, instanceIdentifier, ...rest }: AnalyticsFunnelStepProps) => {\n  const { funnelInteractionId, funnelNameSelector, funnelState, funnelType } = useFunnel();\n  const parentStep = useFunnelStep();\n  const parentStepExists = parentStep.isInStep;\n  const parentStepFunnelInteractionId = parentStep.funnelInteractionId;\n\n  const funnelStepProps = { [DATA_ATTR_FUNNEL_STEP]: stepNumber };\n\n  const subStepCount = useRef<number>(0);\n\n  const stepNameSelector = rest.stepNameSelector || funnelNameSelector;\n  const { onStepChange, subStepConfiguration } = useStepChangeListener(stepNumber, subStepConfiguration => {\n    if (!funnelInteractionId) {\n      return;\n    }\n    const stepName = getNameFromSelector(stepNameSelector) ?? '';\n\n    FunnelMetrics.funnelStepChange({\n      instanceIdentifier,\n      funnelInteractionId,\n      stepNumber,\n      stepName,\n      stepNameSelector,\n      subStepAllSelector: getSubStepAllSelector(),\n      totalSubSteps: subStepCount.current,\n      subStepConfiguration,\n    });\n  });\n\n  // This useEffect hook is used to track the start and completion of interaction with the step.\n  // On mount, if there is a valid funnel interaction id, it calls the 'funnelStepStart' method from FunnelMetrics\n  // to record the beginning of the interaction with the current step.\n  // On unmount, it does a similar thing but this time calling 'funnelStepComplete' to record the completion of the interaction.\n  useEffect(() => {\n    if (!funnelInteractionId) {\n      // This step is not inside an active funnel.\n      return;\n    }\n    if (parentStepExists && parentStepFunnelInteractionId) {\n      /*\n       This step is inside another step, which already reports events as\n       part of an active funnel (i.e. that step is not a parent of a Wizard).\n       Thus, this current step does not need to report any events.\n       */\n      return;\n    }\n\n    const stepName = getNameFromSelector(stepNameSelector);\n\n    if (funnelState.current === 'default') {\n      FunnelMetrics.funnelStepStart({\n        instanceIdentifier,\n        funnelInteractionId,\n        stepNumber,\n        stepName,\n        stepNameSelector,\n        subStepAllSelector: getSubStepAllSelector(),\n        totalSubSteps: subStepCount.current,\n        subStepConfiguration: getSubStepConfiguration(),\n      });\n    }\n\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      if (funnelState.current !== 'cancelled') {\n        FunnelMetrics.funnelStepComplete({\n          instanceIdentifier,\n          funnelInteractionId,\n          stepNumber,\n          stepName,\n          stepNameSelector,\n          subStepAllSelector: getSubStepAllSelector(),\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          totalSubSteps: subStepCount.current,\n        });\n      }\n    };\n  }, [\n    instanceIdentifier,\n    funnelInteractionId,\n    stepNumber,\n    stepNameSelector,\n    funnelState,\n    parentStepExists,\n    funnelType,\n    parentStepFunnelInteractionId,\n  ]);\n\n  const contextValue: FunnelStepContextValue = {\n    instanceIdentifier,\n    stepNumber,\n    stepNameSelector,\n    funnelStepProps,\n    subStepCount,\n    isInStep: true,\n    funnelInteractionId,\n    onStepChange,\n    subStepConfiguration,\n  };\n\n  /*\n    If this step is inside another step which already reports events as part of an active\n    funnel (i.e. that step is not a parent of a Wizard), the current step becomes invisible\n    in the hierarchy by passing the context of its parent through.\n  */\n  const effectiveContextValue = parentStepExists && parentStepFunnelInteractionId ? parentStep : contextValue;\n\n  return (\n    <FunnelStepContext.Provider value={effectiveContextValue}>\n      {typeof children === 'function' ? children(effectiveContextValue) : children}\n    </FunnelStepContext.Provider>\n  );\n};\ninterface AnalyticsFunnelSubStepProps {\n  instanceIdentifier?: AnalyticsMetadata['instanceIdentifier'];\n  errorContext?: AnalyticsMetadata['errorContext'];\n  children?: React.ReactNode | ((props: FunnelSubStepContextValue) => React.ReactNode);\n}\n\nexport const AnalyticsFunnelSubStep = ({ children, instanceIdentifier }: AnalyticsFunnelSubStepProps) => {\n  const subStepId = useUniqueId('substep');\n  const subStepSelector = getSubStepSelector(subStepId);\n  const subStepNameSelector = getSubStepNameSelector(subStepId);\n  const subStepRef = useRef<HTMLDivElement | null>(null);\n  const { subStepCount, onStepChange } = useFunnelStep();\n  const mousePressed = useRef<boolean>(false);\n  const isFocusedSubStep = useRef<boolean>(false);\n  const focusCleanupFunction = useRef<undefined | (() => void)>(undefined);\n  const { funnelState, funnelInteractionId } = useFunnel();\n  const { stepNumber, stepNameSelector } = useFunnelStep();\n\n  const newContext: FunnelSubStepContextValue = {\n    instanceIdentifier,\n    subStepSelector,\n    subStepNameSelector,\n    subStepId,\n    subStepRef,\n    mousePressed,\n    isFocusedSubStep,\n    focusCleanupFunction,\n    isNestedSubStep: false,\n  };\n\n  const inheritedContext = { ...useContext(FunnelSubStepContext), isNestedSubStep: true };\n\n  const isNested = Boolean(inheritedContext.subStepId);\n\n  useEffect(() => {\n    if (!isNested) {\n      subStepCount.current++;\n      onStepChange();\n\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        subStepCount.current--;\n        onStepChange();\n      };\n    }\n  }, [isNested, subStepCount, onStepChange]);\n\n  const context = isNested ? inheritedContext : newContext;\n\n  useEffect(() => {\n    if (isNested || !subStepRef.current) {\n      return;\n    }\n\n    const onMouseDown = () => (mousePressed.current = true);\n\n    const onMouseUp = async () => {\n      mousePressed.current = false;\n\n      if (!isFocusedSubStep.current) {\n        return;\n      }\n\n      /*\n        Some mouse events result in an element being focused. However,\n        this happens only _after_ the onMouseUp event. We yield the\n        event loop here, so that `document.activeElement` has the\n        correct new value.      \n      */\n      await new Promise(r => setTimeout(r, 1));\n\n      if (!subStepRef.current || !document.activeElement || !nodeBelongs(subStepRef.current, document.activeElement)) {\n        isFocusedSubStep.current = false;\n\n        /*\n         Run this substep's own focus cleanup function if another substep\n         hasn't already done it for us.\n         */\n        focusCleanupFunction.current?.();\n      }\n    };\n    window.addEventListener('mousedown', onMouseDown);\n    window.addEventListener('mouseup', onMouseUp);\n    return () => {\n      window.removeEventListener('mousedown', onMouseDown);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [\n    funnelInteractionId,\n    funnelState,\n    stepNameSelector,\n    stepNumber,\n    subStepNameSelector,\n    subStepSelector,\n    focusCleanupFunction,\n    isNested,\n    subStepRef,\n  ]);\n\n  return (\n    <FunnelSubStepContext.Provider value={context}>\n      {typeof children === 'function' ? children(context) : children}\n    </FunnelSubStepContext.Provider>\n  );\n};\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "findUpUntil", "React", "import_react", "window", "import_react", "import_react", "import_react", "styles_css_default", "React", "styles_css_default", "import_react", "styles_css_default", "React", "styles_css_default", "import_react", "import_react", "styles_css_default", "React", "internal_default", "styles_css_default", "findUpUntil", "styles_css_default", "import_react", "allDisabled", "allEnabledSelected", "item", "selectedItems", "import_react", "styles_css_default", "import_react", "styles_css_default", "import_react", "column", "columnWidths", "React", "styles_css_default", "React", "styles_css_default", "import_react", "import_react", "import_react", "import_react", "_a", "_b", "_a", "import_react", "React", "styles_css_default", "React", "React", "styles_css_default", "React", "selectionColumnId", "styles_css_default", "styles_css_default", "import_react", "import_react", "import_react", "styles_css_default", "React", "styles_css_default", "React", "styles_css_default", "import_react", "import_react", "_a", "React", "styles_css_default", "internal_default", "import_react", "import_react", "React", "import_react", "styles_css_default", "import_react", "internalPosition", "rect", "document", "window", "React", "styles_css_default", "import_react", "React", "styles_css_default", "import_react", "React", "styles_css_default", "_a", "React", "styles_css_default", "React", "styles_css_default", "findUpUntil", "styles_css_default", "import_react", "import_react", "import_react", "useStickyHeader", "useStickyHeader", "React", "styles_css_default", "import_react", "import_react", "import_react", "import_react", "styles_css_default", "styles_css_default", "React", "styles_css_default", "import_react", "import_react", "import_react", "styles_css_default", "React", "styles_css_default", "React", "styles_css_default", "_a", "React", "_c", "_b", "_a", "_d", "styles_css_default", "internal_default", "import_react", "React", "funnelInteractionId", "_a", "subStepConfiguration", "React", "internal_default"]
}
