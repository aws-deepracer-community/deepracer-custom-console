import {
  AbstractSwitch
} from "./chunk-7NAEI4NZ.js";
import {
  checkbox_icon_default
} from "./chunk-DI7TQIBF.js";
import {
  useFormFieldContext
} from "./chunk-5OOIWY6K.js";
import {
  useSingleTabStopNavigation
} from "./chunk-NAY2RUYC.js";
import {
  useForwardFocus
} from "./chunk-TNYC4R72.js";
import {
  fireNonCancelableEvent
} from "./chunk-IGE3W7Z3.js";
import {
  getAnalyticsMetadataAttribute
} from "./chunk-3BY6PGLT.js";
import {
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  useBaseComponent
} from "./chunk-2LTRRE4Q.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@cloudscape-design/components/checkbox/index.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/checkbox/internal.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/checkbox/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/checkbox/styles.scoped.css";
var styles_css_default = {
  "root": "awsui_root_k2y2q_71dt1_145",
  "checkbox-control": "awsui_checkbox-control_k2y2q_71dt1_178",
  "outline": "awsui_outline_k2y2q_71dt1_186"
};

// node_modules/@cloudscape-design/components/checkbox/internal.js
var InternalCheckbox = import_react.default.forwardRef((_a, ref) => {
  var { controlId, name, checked, disabled, readOnly, ariaRequired, indeterminate, children, description, ariaLabel, onFocus, onBlur, onChange, tabIndex: explicitTabIndex, showOutline, ariaControls, __internalRootRef, __injectAnalyticsComponentMetadata = false } = _a, rest = __rest(_a, ["controlId", "name", "checked", "disabled", "readOnly", "ariaRequired", "indeterminate", "children", "description", "ariaLabel", "onFocus", "onBlur", "onChange", "tabIndex", "showOutline", "ariaControls", "__internalRootRef", "__injectAnalyticsComponentMetadata"]);
  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);
  const baseProps = getBaseProps(rest);
  const checkboxRef = (0, import_react.useRef)(null);
  useForwardFocus(ref, checkboxRef);
  (0, import_react.useEffect)(() => {
    if (checkboxRef.current) {
      checkboxRef.current.indeterminate = Boolean(indeterminate);
    }
  });
  const { tabIndex } = useSingleTabStopNavigation(checkboxRef, { tabIndex: explicitTabIndex });
  const analyticsMetadata = {};
  const analyticsComponentMetadata = {
    name: "awsui.Checkbox",
    label: { root: "self" }
  };
  if (__injectAnalyticsComponentMetadata) {
    analyticsMetadata.component = analyticsComponentMetadata;
  }
  if (!disabled && !readOnly) {
    analyticsMetadata.detail = {
      selected: `${!checked}`
    };
  }
  return import_react.default.createElement(AbstractSwitch, Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, baseProps.className), controlClassName: styles_css_default["checkbox-control"], outlineClassName: styles_css_default.outline, controlId, disabled, readOnly, label: children, description, descriptionBottomPadding: true, ariaLabel, ariaLabelledby, ariaDescribedby, ariaControls, showOutline, nativeControl: (nativeControlProps) => import_react.default.createElement("input", Object.assign({}, nativeControlProps, {
    ref: checkboxRef,
    type: "checkbox",
    checked,
    name,
    "aria-required": ariaRequired ? "true" : void 0,
    "aria-disabled": readOnly && !disabled ? "true" : void 0,
    tabIndex,
    onFocus: () => fireNonCancelableEvent(onFocus),
    onBlur: () => fireNonCancelableEvent(onBlur),
    // empty handler to suppress React controllability warning
    onChange: () => {
    }
  })), onClick: () => {
    var _a2;
    (_a2 = checkboxRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    fireNonCancelableEvent(
      onChange,
      // for deterministic transitions "indeterminate" -> "checked" -> "unchecked"
      indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false }
    );
  }, styledControl: import_react.default.createElement(checkbox_icon_default, { checked, indeterminate, disabled, readOnly }), __internalRootRef }, getAnalyticsMetadataAttribute(analyticsMetadata)));
});
var internal_default = InternalCheckbox;

// node_modules/@cloudscape-design/components/checkbox/index.js
var Checkbox = import_react2.default.forwardRef((_a, ref) => {
  var props = __rest(_a, []);
  const baseComponentProps = useBaseComponent("Checkbox", {
    props: { readOnly: props.readOnly }
  });
  return import_react2.default.createElement(internal_default, Object.assign({}, props, baseComponentProps, { ref, __injectAnalyticsComponentMetadata: true }));
});
applyDisplayName(Checkbox, "Checkbox");
var checkbox_default = Checkbox;

export {
  internal_default,
  checkbox_default
};
//# sourceMappingURL=chunk-HOJDBM7E.js.map
