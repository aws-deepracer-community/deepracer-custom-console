{
  "version": 3,
  "sources": ["../../src/alert/index.tsx", "../../src/alert/internal.tsx", "../../@cloudscape-design/components/alert/analytics-metadata/styles.css.js", "../../@cloudscape-design/components/alert/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getSubStepAllSelector, getTextFromSelector } from '../internal/analytics/selectors';\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataAlertComponent } from './analytics-metadata/interfaces';\nimport { AlertProps } from './interfaces';\nimport InternalAlert from './internal';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\n\nexport { AlertProps };\n\nconst Alert = React.forwardRef(\n  ({ type = 'info', visible = true, ...props }: AlertProps, ref: React.Ref<AlertProps.Ref>) => {\n    const analyticsMetadata = getAnalyticsMetadataProps(props as BasePropsWithAnalyticsMetadata);\n    const baseComponentProps = useBaseComponent<HTMLDivElement>(\n      'Alert',\n      {\n        props: { type, visible, dismissible: props.dismissible },\n      },\n      analyticsMetadata\n    );\n\n    const { funnelIdentifier, funnelInteractionId, funnelErrorContext, submissionAttempt, funnelState, errorCount } =\n      useFunnel();\n    const { stepNumber, stepNameSelector, stepIdentifier } = useFunnelStep();\n    const { subStepSelector, subStepNameSelector, subStepIdentifier, subStepErrorContext } = useFunnelSubStep();\n\n    useEffect(() => {\n      if (funnelInteractionId && visible && type === 'error' && funnelState.current !== 'complete') {\n        const stepName = getTextFromSelector(stepNameSelector);\n        const subStepName = getTextFromSelector(subStepNameSelector);\n\n        errorCount.current++;\n\n        // We don't want to report an error if it is hidden, e.g. inside an Expandable Section.\n        const errorIsVisible = (baseComponentProps.__internalRootRef.current?.getBoundingClientRect()?.width ?? 0) > 0;\n\n        if (errorIsVisible) {\n          if (subStepSelector) {\n            FunnelMetrics.funnelSubStepError({\n              funnelInteractionId,\n              funnelIdentifier,\n              stepIdentifier,\n              subStepSelector,\n              subStepName,\n              subStepNameSelector,\n              stepNumber,\n              stepName,\n              stepNameSelector,\n              subStepAllSelector: getSubStepAllSelector(),\n              subStepIdentifier,\n              subStepErrorContext,\n            });\n          } else {\n            FunnelMetrics.funnelError({\n              funnelIdentifier,\n              funnelInteractionId,\n              funnelErrorContext,\n            });\n          }\n        }\n\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          errorCount.current--;\n        };\n      }\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [funnelInteractionId, visible, submissionAttempt, errorCount]);\n\n    const componentAnalyticsMetadata: GeneratedAnalyticsMetadataAlertComponent = {\n      name: 'awsui.Alert',\n      label: `.${analyticsSelectors.header}`,\n      properties: {\n        type,\n      },\n    };\n\n    return (\n      <InternalAlert\n        type={type}\n        visible={visible}\n        {...props}\n        {...baseComponentProps}\n        ref={ref}\n        {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n      />\n    );\n  }\n);\n\napplyDisplayName(Alert, 'Alert');\nexport default Alert;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { IconProps } from '../icon/interfaces';\nimport InternalIcon from '../icon/internal';\nimport { DATA_ATTR_ANALYTICS_ALERT } from '../internal/analytics/selectors';\nimport { getBaseProps } from '../internal/base-component';\nimport VisualContext from '../internal/components/visual-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { awsuiPluginsInternal } from '../internal/plugins/api';\nimport { createUseDiscoveredAction, createUseDiscoveredContent } from '../internal/plugins/helpers';\nimport { SomeRequired } from '../internal/types';\nimport { ActionsWrapper } from './actions-wrapper';\nimport { GeneratedAnalyticsMetadataAlertDismiss } from './analytics-metadata/interfaces';\nimport { AlertProps } from './interfaces';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nconst typeToIcon: Record<AlertProps.Type, IconProps['name']> = {\n  error: 'status-negative',\n  warning: 'status-warning',\n  success: 'status-positive',\n  info: 'status-info',\n};\n\ntype InternalAlertProps = SomeRequired<AlertProps, 'type'> & InternalBaseComponentProps<HTMLDivElement>;\n\nconst useDiscoveredAction = createUseDiscoveredAction(awsuiPluginsInternal.alert.onActionRegistered);\nconst useDiscoveredContent = createUseDiscoveredContent('alert', awsuiPluginsInternal.alertContent);\n\nconst InternalAlert = React.forwardRef(\n  (\n    {\n      type,\n      i18nStrings,\n      visible = true,\n      dismissible,\n      children,\n      header,\n      buttonText,\n      action,\n      onDismiss,\n      onButtonClick,\n      __internalRootRef = null,\n      statusIconAriaLabel: deprecatedStatusIconAriaLabel,\n      dismissAriaLabel: deprecatedDismissAriaLabel,\n      ...rest\n    }: InternalAlertProps,\n    ref: React.Ref<AlertProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    const i18n = useInternalI18n('alert');\n\n    const focusRef = useRef<HTMLDivElement>(null);\n    useForwardFocus(ref, focusRef);\n\n    const [breakpoint, breakpointRef] = useContainerBreakpoints(['xs']);\n    const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n\n    const { discoveredActions, headerRef: headerRefAction, contentRef: contentRefAction } = useDiscoveredAction(type);\n    const {\n      initialHidden,\n      headerReplacementType,\n      contentReplacementType,\n      headerRef: headerRefContent,\n      contentRef: contentRefContent,\n      replacementHeaderRef,\n      replacementContentRef,\n    } = useDiscoveredContent({ type, header, children });\n\n    const headerRef = useMergeRefs(headerRefAction, headerRefContent);\n    const contentRef = useMergeRefs(contentRefAction, contentRefContent);\n\n    const isRefresh = useVisualRefresh();\n    const size = isRefresh\n      ? 'normal'\n      : headerReplacementType !== 'remove' && header && contentReplacementType !== 'remove' && children\n        ? 'big'\n        : 'normal';\n\n    const hasAction = Boolean(action || buttonText || discoveredActions.length);\n\n    const analyticsAttributes = {\n      [DATA_ATTR_ANALYTICS_ALERT]: type,\n    };\n\n    const statusIconAriaLabel = i18n(\n      `i18nStrings.${type}IconAriaLabel`,\n      i18nStrings?.[`${type}IconAriaLabel`] ?? deprecatedStatusIconAriaLabel\n    );\n\n    const dismissAriaLabel = i18n(\n      'i18nStrings.dismissAriaLabel',\n      i18nStrings?.dismissAriaLabel ?? i18n('dismissAriaLabel', deprecatedDismissAriaLabel)\n    );\n\n    return (\n      <div\n        {...baseProps}\n        {...analyticsAttributes}\n        aria-hidden={!visible}\n        className={clsx(\n          styles.root,\n          { [styles.hidden]: !visible, [styles['initial-hidden']]: initialHidden },\n          baseProps.className\n        )}\n        ref={mergedRef}\n      >\n        <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n          <VisualContext contextName=\"alert\">\n            <div\n              className={clsx(\n                styles.alert,\n                styles[`type-${type}`],\n                styles[`icon-size-${size}`],\n                hasAction && styles['with-action'],\n                dismissible && styles['with-dismiss'],\n                styles[`breakpoint-${breakpoint}`]\n              )}\n            >\n              <div className={styles['alert-focus-wrapper']} tabIndex={-1} ref={focusRef}>\n                <div className={clsx(styles.icon, styles.text)} role=\"img\" aria-label={statusIconAriaLabel}>\n                  <InternalIcon name={typeToIcon[type]} size={size} />\n                </div>\n                <div className={clsx(styles.message, styles.text)}>\n                  <div\n                    className={clsx(\n                      header && styles.header,\n                      headerReplacementType !== 'original' ? styles.hidden : analyticsSelectors.header\n                    )}\n                    ref={headerRef}\n                  >\n                    {header}\n                  </div>\n                  <div\n                    className={clsx(\n                      styles['header-replacement'],\n                      headerReplacementType !== 'replaced' ? styles.hidden : analyticsSelectors.header\n                    )}\n                    ref={replacementHeaderRef}\n                  ></div>\n                  <div\n                    className={clsx(styles.content, contentReplacementType !== 'original' && styles.hidden)}\n                    ref={contentRef}\n                  >\n                    {children}\n                  </div>\n                  <div\n                    className={clsx(\n                      styles['content-replacement'],\n                      contentReplacementType !== 'replaced' && styles.hidden\n                    )}\n                    ref={replacementContentRef}\n                  ></div>\n                </div>\n              </div>\n              <ActionsWrapper\n                className={styles.action}\n                testUtilClasses={{\n                  actionSlot: styles['action-slot'],\n                  actionButton: styles['action-button'],\n                }}\n                action={action}\n                discoveredActions={discoveredActions}\n                buttonText={buttonText}\n                onButtonClick={() => fireNonCancelableEvent(onButtonClick)}\n              />\n              {dismissible && (\n                <div\n                  className={styles.dismiss}\n                  {...getAnalyticsMetadataAttribute({\n                    action: 'dismiss',\n                  } as Partial<GeneratedAnalyticsMetadataAlertDismiss>)}\n                >\n                  <InternalButton\n                    className={styles['dismiss-button']}\n                    variant=\"icon\"\n                    iconName=\"close\"\n                    formAction=\"none\"\n                    ariaLabel={dismissAriaLabel}\n                    onClick={() => fireNonCancelableEvent(onDismiss)}\n                  />\n                </div>\n              )}\n            </div>\n          </VisualContext>\n        </LinkDefaultVariantContext.Provider>\n      </div>\n    );\n  }\n);\n\nexport default InternalAlert;\n", "\n    import './styles.scoped.css';\n    export default {\n  \"header\": \"awsui_header_17427_1ns0c_5\"\n};\n  ", "\n    import './styles.scoped.css';\n    export default {\n  \"alert\": \"awsui_alert_mx3cw_1euw8_193\",\n  \"awsui-motion-fade-in\": \"awsui_awsui-motion-fade-in_mx3cw_1euw8_1\",\n  \"root\": \"awsui_root_mx3cw_1euw8_215\",\n  \"hidden\": \"awsui_hidden_mx3cw_1euw8_250\",\n  \"with-dismiss\": \"awsui_with-dismiss_mx3cw_1euw8_297\",\n  \"with-action\": \"awsui_with-action_mx3cw_1euw8_297\",\n  \"breakpoint-default\": \"awsui_breakpoint-default_mx3cw_1euw8_303\",\n  \"initial-hidden\": \"awsui_initial-hidden_mx3cw_1euw8_314\",\n  \"header\": \"awsui_header_mx3cw_1euw8_319\",\n  \"header-replacement\": \"awsui_header-replacement_mx3cw_1euw8_320\",\n  \"action\": \"awsui_action_mx3cw_1euw8_324\",\n  \"action-slot\": \"awsui_action-slot_mx3cw_1euw8_329\",\n  \"action-button\": \"awsui_action-button_mx3cw_1euw8_330\",\n  \"alert-focus-wrapper\": \"awsui_alert-focus-wrapper_mx3cw_1euw8_334\",\n  \"text\": \"awsui_text_mx3cw_1euw8_363\",\n  \"icon\": \"awsui_icon_mx3cw_1euw8_370\",\n  \"message\": \"awsui_message_mx3cw_1euw8_373\",\n  \"icon-size-medium\": \"awsui_icon-size-medium_mx3cw_1euw8_381\",\n  \"icon-size-big\": \"awsui_icon-size-big_mx3cw_1euw8_384\",\n  \"icon-size-normal\": \"awsui_icon-size-normal_mx3cw_1euw8_387\",\n  \"content\": \"awsui_content_mx3cw_1euw8_391\",\n  \"content-replacement\": \"awsui_content-replacement_mx3cw_1euw8_392\",\n  \"dismiss\": \"awsui_dismiss_mx3cw_1euw8_396\",\n  \"dismiss-button\": \"awsui_dismiss-button_mx3cw_1euw8_401\",\n  \"type-error\": \"awsui_type-error_mx3cw_1euw8_405\",\n  \"type-warning\": \"awsui_type-warning_mx3cw_1euw8_413\",\n  \"type-success\": \"awsui_type-success_mx3cw_1euw8_421\",\n  \"type-info\": \"awsui_type-info_mx3cw_1euw8_429\"\n};\n  "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAAA,gBAAiC;;;ACAjC,mBAA8B;;;ACD1B,OAAO;AACP,IAAO,qBAAQ;AAAA,EACjB,UAAU;AACZ;;;ACHI,OAAO;AACP,IAAOC,sBAAQ;AAAA,EACjB,SAAS;AAAA,EACT,wBAAwB;AAAA,EACxB,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,eAAe;AAAA,EACf,sBAAsB;AAAA,EACtB,kBAAkB;AAAA,EAClB,UAAU;AAAA,EACV,sBAAsB;AAAA,EACtB,UAAU;AAAA,EACV,eAAe;AAAA,EACf,iBAAiB;AAAA,EACjB,uBAAuB;AAAA,EACvB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,oBAAoB;AAAA,EACpB,iBAAiB;AAAA,EACjB,oBAAoB;AAAA,EACpB,WAAW;AAAA,EACX,uBAAuB;AAAA,EACvB,WAAW;AAAA,EACX,kBAAkB;AAAA,EAClB,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,aAAa;AACf;;;AFAA,IAAM,aAAyD;EAC7D,OAAO;EACP,SAAS;EACT,SAAS;EACT,MAAM;;AAKR,IAAM,sBAAsB,0BAA0B,qBAAqB,MAAM,kBAAkB;AACnG,IAAM,uBAAuB,2BAA2B,SAAS,qBAAqB,YAAY;AAElG,IAAM,gBAAgB,aAAAC,QAAM,WAC1B,CACE,IAgBA,QACE;;MAjBF,EACE,MACA,aACA,UAAU,MACV,aACA,UACA,QACA,YACA,QACA,WACA,eACA,oBAAoB,MACpB,qBAAqB,+BACrB,kBAAkB,2BAA0B,IAAA,IACzC,OAAI,OAAA,IAdT,CAAA,QAAA,eAAA,WAAA,eAAA,YAAA,UAAA,cAAA,UAAA,aAAA,iBAAA,qBAAA,uBAAA,kBAAA,CAeC;AAGD,QAAM,YAAY,aAAa,IAAI;AACnC,QAAM,OAAO,gBAAgB,OAAO;AAEpC,QAAM,eAAW,qBAAuB,IAAI;AAC5C,kBAAgB,KAAK,QAAQ;AAE7B,QAAM,CAAC,YAAY,aAAa,IAAI,wBAAwB,CAAC,IAAI,CAAC;AAClE,QAAM,YAAY,aAAa,eAAe,iBAAiB;AAE/D,QAAM,EAAE,mBAAmB,WAAW,iBAAiB,YAAY,iBAAgB,IAAK,oBAAoB,IAAI;AAChH,QAAM,EACJ,eACA,uBACA,wBACA,WAAW,kBACX,YAAY,mBACZ,sBACA,sBAAqB,IACnB,qBAAqB,EAAE,MAAM,QAAQ,SAAQ,CAAE;AAEnD,QAAM,YAAY,aAAa,iBAAiB,gBAAgB;AAChE,QAAM,aAAa,aAAa,kBAAkB,iBAAiB;AAEnE,QAAM,YAAY,iBAAgB;AAClC,QAAM,OAAO,YACT,WACA,0BAA0B,YAAY,UAAU,2BAA2B,YAAY,WACrF,QACA;AAEN,QAAM,YAAY,QAAQ,UAAU,cAAc,kBAAkB,MAAM;AAE1E,QAAM,sBAAsB;IAC1B,CAAC,yBAAyB,GAAG;;AAG/B,QAAM,sBAAsB,KAC1B,eAAe,IAAI,kBACnB,KAAA,gBAAW,QAAX,gBAAW,SAAA,SAAX,YAAc,GAAG,IAAI,eAAe,OAAC,QAAA,OAAA,SAAA,KAAI,6BAA6B;AAGxE,QAAM,mBAAmB,KACvB,iCACA,KAAA,gBAAW,QAAX,gBAAW,SAAA,SAAX,YAAa,sBAAgB,QAAA,OAAA,SAAA,KAAI,KAAK,oBAAoB,0BAA0B,CAAC;AAGvF,SACE,aAAAA,QAAA;IAAA;IAAA,OAAA,OAAA,CAAA,GACM,WACA,qBAAmB,EAAA,eACV,CAAC,SACd,WAAW,eACTC,oBAAO,MACP,EAAE,CAACA,oBAAO,MAAM,GAAG,CAAC,SAAS,CAACA,oBAAO,gBAAgB,CAAC,GAAG,cAAa,GACtE,UAAU,SAAS,GAErB,KAAK,UAAS,CAAA;IAEd,aAAAD,QAAA;MAAC,0BAA0B;MAAQ,EAAC,OAAO,EAAE,gBAAgB,UAAS,EAAE;MACtE,aAAAA,QAAA;QAAC;QAAa,EAAC,aAAY,QAAO;QAChC,aAAAA,QAAA;UAAA;UAAA,EACE,WAAW,eACTC,oBAAO,OACPA,oBAAO,QAAQ,IAAI,EAAE,GACrBA,oBAAO,aAAa,IAAI,EAAE,GAC1B,aAAaA,oBAAO,aAAa,GACjC,eAAeA,oBAAO,cAAc,GACpCA,oBAAO,cAAc,UAAU,EAAE,CAAC,EACnC;UAED,aAAAD,QAAA;YAAA;YAAA,EAAK,WAAWC,oBAAO,qBAAqB,GAAG,UAAU,IAAI,KAAK,SAAQ;YACxE,aAAAD,QAAA;cAAA;cAAA,EAAK,WAAW,eAAKC,oBAAO,MAAMA,oBAAO,IAAI,GAAG,MAAK,OAAK,cAAa,oBAAmB;cACxF,aAAAD,QAAA,cAAC,kBAAY,EAAC,MAAM,WAAW,IAAI,GAAG,KAAU,CAAA;YAAI;YAEtD,aAAAA,QAAA;cAAA;cAAA,EAAK,WAAW,eAAKC,oBAAO,SAASA,oBAAO,IAAI,EAAC;cAC/C,aAAAD,QAAA,cAAA,OAAA,EACE,WAAW,eACT,UAAUC,oBAAO,QACjB,0BAA0B,aAAaA,oBAAO,SAAS,mBAAmB,MAAM,GAElF,KAAK,UAAS,GAEb,MAAM;cAET,aAAAD,QAAA,cAAA,OAAA,EACE,WAAW,eACTC,oBAAO,oBAAoB,GAC3B,0BAA0B,aAAaA,oBAAO,SAAS,mBAAmB,MAAM,GAElF,KAAK,qBAAoB,CAAA;cAE3B,aAAAD,QAAA,cAAA,OAAA,EACE,WAAW,eAAKC,oBAAO,SAAS,2BAA2B,cAAcA,oBAAO,MAAM,GACtF,KAAK,WAAU,GAEd,QAAQ;cAEX,aAAAD,QAAA,cAAA,OAAA,EACE,WAAW,eACTC,oBAAO,qBAAqB,GAC5B,2BAA2B,cAAcA,oBAAO,MAAM,GAExD,KAAK,sBAAqB,CAAA;YACrB;UACH;UAER,aAAAD,QAAA,cAAC,gBAAc,EACb,WAAWC,oBAAO,QAClB,iBAAiB;YACf,YAAYA,oBAAO,aAAa;YAChC,cAAcA,oBAAO,eAAe;aAEtC,QACA,mBACA,YACA,eAAe,MAAM,uBAAuB,aAAa,EAAC,CAAA;UAE3D,eACC,aAAAD,QAAA;YAAA;YAAA,OAAA,OAAA,EACE,WAAWC,oBAAO,QAAO,GACrB,8BAA8B;cAChC,QAAQ;aAC0C,CAAC;YAErD,aAAAD,QAAA,cAAC,gBAAc,EACb,WAAWC,oBAAO,gBAAgB,GAClC,SAAQ,QACR,UAAS,SACT,YAAW,QACX,WAAW,kBACX,SAAS,MAAM,uBAAuB,SAAS,EAAC,CAAA;UAChD;QAEL;MACG;IACQ;EACmB;AAG3C,CAAC;AAGH,IAAAC,oBAAe;;;ADzLf,IAAM,QAAQ,cAAAC,QAAM,WAClB,CAAC,IAAyD,QAAkC;MAA3F,EAAE,OAAO,QAAQ,UAAU,KAAI,IAAA,IAAK,QAAK,OAAA,IAAzC,CAAA,QAAA,SAAA,CAA2C;AAC1C,QAAM,oBAAoB,0BAA0B,KAAuC;AAC3F,QAAM,qBAAqB,iBACzB,SACA;IACE,OAAO,EAAE,MAAM,SAAS,aAAa,MAAM,YAAW;KAExD,iBAAiB;AAGnB,QAAM,EAAE,kBAAkB,qBAAqB,oBAAoB,mBAAmB,aAAa,WAAU,IAC3G,UAAS;AACX,QAAM,EAAE,YAAY,kBAAkB,eAAc,IAAK,cAAa;AACtE,QAAM,EAAE,iBAAiB,qBAAqB,mBAAmB,oBAAmB,IAAK,iBAAgB;AAEzG,+BAAU,MAAK;;AACb,QAAI,uBAAuB,WAAW,SAAS,WAAW,YAAY,YAAY,YAAY;AAC5F,YAAM,WAAW,oBAAoB,gBAAgB;AACrD,YAAM,cAAc,oBAAoB,mBAAmB;AAE3D,iBAAW;AAGX,YAAM,mBAAkB,MAAA,MAAAC,MAAA,mBAAmB,kBAAkB,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAE,sBAAqB,OAAE,QAAA,OAAA,SAAA,SAAA,GAAE,WAAK,QAAA,OAAA,SAAA,KAAI,KAAK;AAE7G,UAAI,gBAAgB;AAClB,YAAI,iBAAiB;AACnB,wBAAc,mBAAmB;YAC/B;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA,oBAAoB,sBAAqB;YACzC;YACA;WACD;eACI;AACL,wBAAc,YAAY;YACxB;YACA;YACA;WACD;;;AAIL,aAAO,MAAK;AAEV,mBAAW;MACb;;EAIJ,GAAG,CAAC,qBAAqB,SAAS,mBAAmB,UAAU,CAAC;AAEhE,QAAM,6BAAuE;IAC3E,MAAM;IACN,OAAO,IAAI,mBAAmB,MAAM;IACpC,YAAY;MACV;;;AAIJ,SACE,cAAAD,QAAA,cAACE,mBAAa,OAAA,OAAA,EACZ,MACA,QAAgB,GACZ,OACA,oBAAkB,EACtB,IAAQ,GACJ,8BAA8B,EAAE,WAAW,2BAA0B,CAAE,CAAC,CAAA;AAGlF,CAAC;AAGH,iBAAiB,OAAO,OAAO;AAC/B,IAAA,gBAAe;",
  "names": ["import_react", "styles_css_default", "React", "styles_css_default", "internal_default", "React", "_a", "internal_default"]
}
