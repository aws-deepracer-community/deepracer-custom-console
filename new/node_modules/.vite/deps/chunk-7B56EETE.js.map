{
  "version": 3,
  "sources": ["../../src/alert/index.tsx", "../../src/alert/internal.tsx", "../../src/internal/plugins/helpers/utils.ts", "../../src/internal/plugins/controllers/action-buttons.ts", "../../src/internal/metrics.ts", "../../src/internal/plugins/helpers/metrics.ts", "../../src/internal/plugins/controllers/alert-flash-content.ts", "../../src/internal/plugins/controllers/app-layout-widget.ts", "../../src/internal/plugins/controllers/breadcrumbs.ts", "../../src/internal/plugins/controllers/drawers.ts", "../../src/internal/plugins/controllers/shared-react-contexts.ts", "../../src/internal/plugins/api.ts", "../../src/internal/plugins/helpers/use-discovered-action.tsx", "../../src/internal/plugins/helpers/use-discovered-content.tsx", "../../src/alert/actions-wrapper/index.tsx", "../../@cloudscape-design/components/alert/actions-wrapper/styles.css.js", "../../@cloudscape-design/components/alert/analytics-metadata/styles.css.js", "../../@cloudscape-design/components/alert/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getSubStepAllSelector, getTextFromSelector } from '../internal/analytics/selectors';\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataAlertComponent } from './analytics-metadata/interfaces';\nimport { AlertProps } from './interfaces';\nimport InternalAlert from './internal';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\n\nexport { AlertProps };\n\nconst Alert = React.forwardRef(\n  ({ type = 'info', visible = true, ...props }: AlertProps, ref: React.Ref<AlertProps.Ref>) => {\n    const analyticsMetadata = getAnalyticsMetadataProps(props as BasePropsWithAnalyticsMetadata);\n    const baseComponentProps = useBaseComponent<HTMLDivElement>(\n      'Alert',\n      {\n        props: { type, visible, dismissible: props.dismissible },\n      },\n      analyticsMetadata\n    );\n\n    const { funnelIdentifier, funnelInteractionId, funnelErrorContext, submissionAttempt, funnelState, errorCount } =\n      useFunnel();\n    const { stepNumber, stepNameSelector, stepIdentifier } = useFunnelStep();\n    const { subStepSelector, subStepNameSelector, subStepIdentifier, subStepErrorContext } = useFunnelSubStep();\n\n    useEffect(() => {\n      if (funnelInteractionId && visible && type === 'error' && funnelState.current !== 'complete') {\n        const stepName = getTextFromSelector(stepNameSelector);\n        const subStepName = getTextFromSelector(subStepNameSelector);\n\n        errorCount.current++;\n\n        // We don't want to report an error if it is hidden, e.g. inside an Expandable Section.\n        const errorIsVisible = (baseComponentProps.__internalRootRef.current?.getBoundingClientRect()?.width ?? 0) > 0;\n\n        if (errorIsVisible) {\n          if (subStepSelector) {\n            FunnelMetrics.funnelSubStepError({\n              funnelInteractionId,\n              funnelIdentifier,\n              stepIdentifier,\n              subStepSelector,\n              subStepName,\n              subStepNameSelector,\n              stepNumber,\n              stepName,\n              stepNameSelector,\n              subStepAllSelector: getSubStepAllSelector(),\n              subStepIdentifier,\n              subStepErrorContext,\n            });\n          } else {\n            FunnelMetrics.funnelError({\n              funnelIdentifier,\n              funnelInteractionId,\n              funnelErrorContext,\n            });\n          }\n        }\n\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          errorCount.current--;\n        };\n      }\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [funnelInteractionId, visible, submissionAttempt, errorCount]);\n\n    const componentAnalyticsMetadata: GeneratedAnalyticsMetadataAlertComponent = {\n      name: 'awsui.Alert',\n      label: `.${analyticsSelectors.header}`,\n      properties: {\n        type,\n      },\n    };\n\n    return (\n      <InternalAlert\n        type={type}\n        visible={visible}\n        {...props}\n        {...baseComponentProps}\n        ref={ref}\n        {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n      />\n    );\n  }\n);\n\napplyDisplayName(Alert, 'Alert');\nexport default Alert;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { IconProps } from '../icon/interfaces';\nimport InternalIcon from '../icon/internal';\nimport { DATA_ATTR_ANALYTICS_ALERT } from '../internal/analytics/selectors';\nimport { getBaseProps } from '../internal/base-component';\nimport VisualContext from '../internal/components/visual-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { awsuiPluginsInternal } from '../internal/plugins/api';\nimport { createUseDiscoveredAction, createUseDiscoveredContent } from '../internal/plugins/helpers';\nimport { SomeRequired } from '../internal/types';\nimport { ActionsWrapper } from './actions-wrapper';\nimport { GeneratedAnalyticsMetadataAlertDismiss } from './analytics-metadata/interfaces';\nimport { AlertProps } from './interfaces';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nconst typeToIcon: Record<AlertProps.Type, IconProps['name']> = {\n  error: 'status-negative',\n  warning: 'status-warning',\n  success: 'status-positive',\n  info: 'status-info',\n};\n\ntype InternalAlertProps = SomeRequired<AlertProps, 'type'> & InternalBaseComponentProps<HTMLDivElement>;\n\nconst useDiscoveredAction = createUseDiscoveredAction(awsuiPluginsInternal.alert.onActionRegistered);\nconst useDiscoveredContent = createUseDiscoveredContent('alert', awsuiPluginsInternal.alertContent);\n\nconst InternalAlert = React.forwardRef(\n  (\n    {\n      type,\n      i18nStrings,\n      visible = true,\n      dismissible,\n      children,\n      header,\n      buttonText,\n      action,\n      onDismiss,\n      onButtonClick,\n      __internalRootRef = null,\n      statusIconAriaLabel: deprecatedStatusIconAriaLabel,\n      dismissAriaLabel: deprecatedDismissAriaLabel,\n      ...rest\n    }: InternalAlertProps,\n    ref: React.Ref<AlertProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    const i18n = useInternalI18n('alert');\n\n    const focusRef = useRef<HTMLDivElement>(null);\n    useForwardFocus(ref, focusRef);\n\n    const [breakpoint, breakpointRef] = useContainerBreakpoints(['xs']);\n    const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n\n    const { discoveredActions, headerRef: headerRefAction, contentRef: contentRefAction } = useDiscoveredAction(type);\n    const {\n      initialHidden,\n      headerReplacementType,\n      contentReplacementType,\n      headerRef: headerRefContent,\n      contentRef: contentRefContent,\n      replacementHeaderRef,\n      replacementContentRef,\n    } = useDiscoveredContent({ type, header, children });\n\n    const headerRef = useMergeRefs(headerRefAction, headerRefContent);\n    const contentRef = useMergeRefs(contentRefAction, contentRefContent);\n\n    const isRefresh = useVisualRefresh();\n    const size = isRefresh\n      ? 'normal'\n      : headerReplacementType !== 'remove' && header && contentReplacementType !== 'remove' && children\n        ? 'big'\n        : 'normal';\n\n    const hasAction = Boolean(action || buttonText || discoveredActions.length);\n\n    const analyticsAttributes = {\n      [DATA_ATTR_ANALYTICS_ALERT]: type,\n    };\n\n    const statusIconAriaLabel = i18n(\n      `i18nStrings.${type}IconAriaLabel`,\n      i18nStrings?.[`${type}IconAriaLabel`] ?? deprecatedStatusIconAriaLabel\n    );\n\n    const dismissAriaLabel = i18n(\n      'i18nStrings.dismissAriaLabel',\n      i18nStrings?.dismissAriaLabel ?? i18n('dismissAriaLabel', deprecatedDismissAriaLabel)\n    );\n\n    return (\n      <div\n        {...baseProps}\n        {...analyticsAttributes}\n        aria-hidden={!visible}\n        className={clsx(\n          styles.root,\n          { [styles.hidden]: !visible, [styles['initial-hidden']]: initialHidden },\n          baseProps.className\n        )}\n        ref={mergedRef}\n      >\n        <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n          <VisualContext contextName=\"alert\">\n            <div\n              className={clsx(\n                styles.alert,\n                styles[`type-${type}`],\n                styles[`icon-size-${size}`],\n                hasAction && styles['with-action'],\n                dismissible && styles['with-dismiss'],\n                styles[`breakpoint-${breakpoint}`]\n              )}\n            >\n              <div className={styles['alert-focus-wrapper']} tabIndex={-1} ref={focusRef}>\n                <div className={clsx(styles.icon, styles.text)} role=\"img\" aria-label={statusIconAriaLabel}>\n                  <InternalIcon name={typeToIcon[type]} size={size} />\n                </div>\n                <div className={clsx(styles.message, styles.text)}>\n                  <div\n                    className={clsx(\n                      header && styles.header,\n                      headerReplacementType !== 'original' ? styles.hidden : analyticsSelectors.header\n                    )}\n                    ref={headerRef}\n                  >\n                    {header}\n                  </div>\n                  <div\n                    className={clsx(\n                      styles['header-replacement'],\n                      headerReplacementType !== 'replaced' ? styles.hidden : analyticsSelectors.header\n                    )}\n                    ref={replacementHeaderRef}\n                  ></div>\n                  <div\n                    className={clsx(styles.content, contentReplacementType !== 'original' && styles.hidden)}\n                    ref={contentRef}\n                  >\n                    {children}\n                  </div>\n                  <div\n                    className={clsx(\n                      styles['content-replacement'],\n                      contentReplacementType !== 'replaced' && styles.hidden\n                    )}\n                    ref={replacementContentRef}\n                  ></div>\n                </div>\n              </div>\n              <ActionsWrapper\n                className={styles.action}\n                testUtilClasses={{\n                  actionSlot: styles['action-slot'],\n                  actionButton: styles['action-button'],\n                }}\n                action={action}\n                discoveredActions={discoveredActions}\n                buttonText={buttonText}\n                onButtonClick={() => fireNonCancelableEvent(onButtonClick)}\n              />\n              {dismissible && (\n                <div\n                  className={styles.dismiss}\n                  {...getAnalyticsMetadataAttribute({\n                    action: 'dismiss',\n                  } as Partial<GeneratedAnalyticsMetadataAlertDismiss>)}\n                >\n                  <InternalButton\n                    className={styles['dismiss-button']}\n                    variant=\"icon\"\n                    iconName=\"close\"\n                    formAction=\"none\"\n                    ariaLabel={dismissAriaLabel}\n                    onClick={() => fireNonCancelableEvent(onDismiss)}\n                  />\n                </div>\n              )}\n            </div>\n          </VisualContext>\n        </LinkDefaultVariantContext.Provider>\n      </div>\n    );\n  }\n);\n\nexport default InternalAlert;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function sortByPriority<T extends { orderPriority?: number; id: string }>(items: Array<T>) {\n  return items.slice().sort((a, b) => {\n    if (b.orderPriority !== a.orderPriority) {\n      return Math.sign((b.orderPriority ?? 0) - (a.orderPriority ?? 0));\n    }\n    return b.id < a.id ? 1 : -1;\n  });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\nimport { sortByPriority } from '../helpers/utils';\n\n// this code should not depend on React typings, because it is portable between major versions\ninterface RefShim<T> {\n  current: T | null;\n}\n\nexport interface ActionContext {\n  type: string;\n  headerRef: RefShim<HTMLElement>;\n  contentRef: RefShim<HTMLElement>;\n}\n\nexport interface ActionConfig {\n  id: string;\n  orderPriority?: number;\n  mountContent: (container: HTMLElement, context: ActionContext) => void;\n  unmountContent: (container: HTMLElement) => void;\n}\n\ntype ActionRegistrationListener = (action: Array<ActionConfig>) => void;\n\nexport interface ActionsApiPublic {\n  registerAction(config: ActionConfig): void;\n}\n\nexport interface ActionsApiInternal {\n  clearRegisteredActions(): void;\n  onActionRegistered(listener: ActionRegistrationListener): () => void;\n}\n\nexport class ActionButtonsController {\n  private listeners: Array<ActionRegistrationListener> = [];\n  private actions: Array<ActionConfig> = [];\n\n  private scheduleUpdate = debounce(() => {\n    this.listeners.forEach(listener => listener(this.actions));\n  }, 0);\n\n  registerAction = (action: ActionConfig) => {\n    this.actions.push(action);\n    this.actions = sortByPriority(this.actions);\n    this.scheduleUpdate();\n  };\n\n  clearRegisteredActions = () => {\n    this.actions = [];\n  };\n\n  onActionRegistered = (listener: ActionRegistrationListener) => {\n    this.listeners.push(listener);\n    this.scheduleUpdate();\n    return () => {\n      this.listeners = this.listeners.filter(item => item !== listener);\n    };\n  };\n\n  installPublic(api: Partial<ActionsApiPublic> = {}): ActionsApiPublic {\n    api.registerAction ??= this.registerAction;\n    return api as ActionsApiPublic;\n  }\n\n  installInternal(internalApi: Partial<ActionsApiInternal> = {}): ActionsApiInternal {\n    internalApi.clearRegisteredActions ??= this.clearRegisteredActions;\n    internalApi.onActionRegistered ??= this.onActionRegistered;\n    return internalApi as ActionsApiInternal;\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Metrics } from '@cloudscape-design/component-toolkit/internal';\n\nimport { PACKAGE_SOURCE, PACKAGE_VERSION } from './environment';\n\nexport const metrics = new Metrics(PACKAGE_SOURCE, PACKAGE_VERSION);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PACKAGE_VERSION } from '../../environment';\nimport { metrics } from '../../metrics';\n\nexport function reportRuntimeApiLoadMetric() {\n  metrics.sendPanoramaMetric({ eventName: 'awsui-runtime-api-loaded', eventDetail: { version: PACKAGE_VERSION } });\n}\n\nexport function reportRuntimeApiWarning(component: string, message: string) {\n  console.warn('[AwsUi]', `[${component}]`, message);\n  metrics.sendPanoramaMetric({\n    eventName: 'awsui-runtime-api-warning',\n    eventDetail: { version: PACKAGE_VERSION, component, message },\n  });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ReactNode } from 'react';\n\nimport debounce from '../../debounce';\nimport { reportRuntimeApiWarning } from '../helpers/metrics';\n\n// this code should not depend on React typings, because it is portable between major versions\ninterface RefShim<T> {\n  current: T | null;\n}\n\ninterface AlertFlashContentContext {\n  type: string;\n  headerRef: RefShim<HTMLElement>;\n  contentRef: RefShim<HTMLElement>;\n}\n\ninterface AlertFlashContentInitialContext {\n  type: string;\n  header?: ReactNode;\n  content?: ReactNode;\n}\n\nexport type ReplacementType = 'original' | 'remove' | 'replaced';\n\ninterface ReplacementApi {\n  hideHeader(): void;\n  restoreHeader(): void;\n  replaceHeader(replacer: (container: HTMLElement) => void): void;\n  hideContent(): void;\n  restoreContent(): void;\n  replaceContent(replacer: (container: HTMLElement) => void): void;\n}\n\nexport interface AlertFlashContentResult {\n  update: () => void;\n  unmount: (containers: { replacementHeaderContainer: HTMLElement; replacementContentContainer: HTMLElement }) => void;\n}\n\nexport interface AlertFlashContentConfig {\n  id: string;\n  runReplacer: (context: AlertFlashContentContext, replacementApi: ReplacementApi) => AlertFlashContentResult;\n  initialCheck?: (context: AlertFlashContentInitialContext) => boolean;\n}\n\ntype AlertFlashContentRegistrationListener = (provider: AlertFlashContentConfig) => () => void;\n\nexport interface AlertFlashContentApiPublic {\n  registerContentReplacer(config: AlertFlashContentConfig): void;\n}\n\nexport interface AlertFlashContentApiInternal {\n  clearRegisteredReplacer(): void;\n  onContentRegistered(listener: AlertFlashContentRegistrationListener): () => void;\n  initialCheck(context: AlertFlashContentInitialContext): boolean;\n}\n\nexport class AlertFlashContentController {\n  #listeners: Array<AlertFlashContentRegistrationListener> = [];\n  #cleanups = new Map<AlertFlashContentRegistrationListener, () => void>();\n  #provider?: AlertFlashContentConfig;\n\n  #scheduleUpdate = debounce(\n    () =>\n      this.#listeners.forEach(listener => {\n        if (this.#provider) {\n          const cleanup = listener(this.#provider);\n          this.#cleanups.set(listener, cleanup);\n        }\n      }),\n    0\n  );\n\n  registerContentReplacer = (content: AlertFlashContentConfig) => {\n    if (this.#provider) {\n      reportRuntimeApiWarning(\n        'alert-flash-content',\n        `Cannot call \\`registerContentReplacer\\` with new provider: provider with id \"${this.#provider.id}\" already registered.`\n      );\n      return;\n    }\n    this.#provider = content;\n\n    // Notify existing components if registration happens after the components are rendered.\n    this.#scheduleUpdate();\n  };\n\n  clearRegisteredReplacer = () => {\n    this.#provider = undefined;\n  };\n\n  initialCheck = (context: AlertFlashContentInitialContext): boolean => {\n    if (this.#provider?.initialCheck) {\n      return this.#provider.initialCheck(context);\n    }\n    return false;\n  };\n\n  onContentRegistered = (listener: AlertFlashContentRegistrationListener) => {\n    if (this.#provider) {\n      const cleanup = listener(this.#provider);\n      this.#listeners.push(listener);\n      this.#cleanups.set(listener, cleanup);\n    } else {\n      this.#listeners.push(listener);\n    }\n    return () => {\n      this.#cleanups.get(listener)?.();\n      this.#listeners = this.#listeners.filter(item => item !== listener);\n      this.#cleanups.delete(listener);\n    };\n  };\n\n  installPublic(api: Partial<AlertFlashContentApiPublic> = {}): AlertFlashContentApiPublic {\n    api.registerContentReplacer ??= this.registerContentReplacer;\n    return api as AlertFlashContentApiPublic;\n  }\n\n  installInternal(internalApi: Partial<AlertFlashContentApiInternal> = {}): AlertFlashContentApiInternal {\n    internalApi.clearRegisteredReplacer ??= this.clearRegisteredReplacer;\n    internalApi.onContentRegistered ??= this.onContentRegistered;\n    internalApi.initialCheck ??= this.initialCheck;\n    return internalApi as AlertFlashContentApiInternal;\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\n\ninterface PrimaryRegistration<Props> {\n  type: 'primary';\n  discoveredProps: Array<Props>;\n}\n\ninterface SecondaryRegistration<Props> {\n  type: 'secondary';\n  update: (props: Props) => void;\n}\n\nexport type RegistrationState<Props> = PrimaryRegistration<Props> | SecondaryRegistration<Props>;\ntype RegistrationType = RegistrationState<unknown>['type'];\n\ntype RegistrationChangeHandler<Props> = (\n  registration: PrimaryRegistration<Props> | SecondaryRegistration<Props>\n) => void;\n\ninterface RegistrationInternal<Props> {\n  forceType: RegistrationType | undefined;\n  props: Props;\n  secondaryInstance: SecondaryRegistration<Props>;\n  onChange: (registration: PrimaryRegistration<Props> | SecondaryRegistration<Props>) => void;\n}\n\nexport interface AppLayoutWidgetApiInternal<Props = unknown> {\n  register(\n    forceDeduplicationType: RegistrationType | undefined,\n    onPropsChange: RegistrationChangeHandler<Props>\n  ): () => void;\n  getStateForTesting(): { registrations: Array<RegistrationInternal<Props>> };\n}\n\nexport class AppLayoutWidgetController<Props = unknown> {\n  #registrations: Array<RegistrationInternal<Props>> = [];\n\n  #findPrimary = () => {\n    const forcedPrimary = this.#registrations.find(registration => registration.forceType === 'primary');\n    if (forcedPrimary) {\n      return forcedPrimary;\n    }\n    for (const registration of this.#registrations.slice()) {\n      if (registration.forceType !== 'secondary') {\n        return registration;\n      }\n    }\n    return undefined;\n  };\n\n  #update = () => {\n    const primary = this.#findPrimary();\n    const discoveredProps = this.#registrations\n      .filter(registration => registration !== primary)\n      .map(registration => registration.props);\n    for (const registration of this.#registrations) {\n      if (registration === primary) {\n        registration.onChange({\n          type: 'primary',\n          discoveredProps,\n        });\n      } else {\n        registration.onChange(registration.secondaryInstance);\n      }\n    }\n  };\n\n  #scheduleUpdate = debounce(() => this.#update(), 0);\n\n  register = (\n    forceType: RegistrationType | undefined,\n    onRegistrationChange: RegistrationChangeHandler<Props>\n  ): (() => void) => {\n    const hasForcedPrimary = this.#registrations.some(instance => instance.forceType === 'primary');\n    if (forceType === 'primary' && hasForcedPrimary) {\n      throw new Error('Double primary registration attempt');\n    }\n\n    const registration: RegistrationInternal<Props> = {\n      forceType,\n      onChange: onRegistrationChange,\n      props: {} as Props,\n      secondaryInstance: {\n        type: 'secondary',\n        update: props => {\n          registration.props = props;\n          this.#scheduleUpdate();\n        },\n      },\n    };\n    this.#registrations.push(registration);\n\n    this.#update();\n\n    return () => {\n      this.#registrations.splice(this.#registrations.indexOf(registration), 1);\n      this.#scheduleUpdate();\n    };\n  };\n\n  getStateForTesting = () => {\n    return {\n      registrations: this.#registrations,\n    };\n  };\n\n  installInternal = (\n    internalApi: Partial<AppLayoutWidgetApiInternal<Props>> = {}\n  ): AppLayoutWidgetApiInternal<Props> => {\n    internalApi.register ??= this.register;\n    internalApi.getStateForTesting ??= this.getStateForTesting;\n    return internalApi as AppLayoutWidgetApiInternal<Props>;\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\n\ntype ChangeCallback<T> = (props: T | null) => void;\ntype RegistrationCallback = (isRegistered: boolean) => void;\n\nexport interface BreadcrumbsGlobalRegistration<T> {\n  update(props: T): void;\n  cleanup(): void;\n}\n\nexport interface BreadcrumbsApiInternal<T> {\n  registerAppLayout: (changeCallback: ChangeCallback<T>) => (() => void) | void;\n  registerBreadcrumbs: (props: T, onRegistered: RegistrationCallback) => BreadcrumbsGlobalRegistration<T>;\n  getStateForTesting: () => {\n    appLayoutUpdateCallback: ChangeCallback<T> | null;\n    breadcrumbInstances: Array<{ props: T }>;\n    breadcrumbRegistrations: Array<RegistrationCallback>;\n  };\n}\n\nexport class BreadcrumbsController<T> {\n  #appLayoutUpdateCallback: ChangeCallback<T> | null = null;\n  #breadcrumbInstances: Array<{ props: T }> = [];\n  #breadcrumbRegistrations: Array<RegistrationCallback> = [];\n\n  #notifyAppLayout = debounce(() => {\n    if (!this.#appLayoutUpdateCallback) {\n      return;\n    }\n    const latestBreadcrumb = this.#breadcrumbInstances[this.#breadcrumbInstances.length - 1];\n    this.#appLayoutUpdateCallback(latestBreadcrumb?.props ?? null);\n  }, 0);\n\n  #notifyBreadcrumbs = debounce(() => {\n    this.#breadcrumbRegistrations.forEach(listener => listener(!!this.#appLayoutUpdateCallback));\n  }, 0);\n\n  registerAppLayout = (changeCallback: ChangeCallback<T>) => {\n    if (this.#appLayoutUpdateCallback) {\n      return;\n    }\n    this.#appLayoutUpdateCallback = changeCallback;\n    this.#notifyBreadcrumbs();\n    return () => {\n      this.#appLayoutUpdateCallback = null;\n      this.#notifyBreadcrumbs();\n    };\n  };\n\n  registerBreadcrumbs = (props: T, onRegistered: RegistrationCallback): BreadcrumbsGlobalRegistration<T> => {\n    const instance = { props: props };\n    this.#breadcrumbInstances.push(instance);\n    this.#breadcrumbRegistrations.push(onRegistered);\n    this.#notifyBreadcrumbs();\n    this.#notifyAppLayout();\n    return {\n      update: props => {\n        instance.props = props;\n        this.#notifyAppLayout();\n      },\n      cleanup: () => {\n        this.#breadcrumbInstances.splice(this.#breadcrumbInstances.indexOf(instance), 1);\n        this.#breadcrumbRegistrations.splice(this.#breadcrumbRegistrations.indexOf(onRegistered), 1);\n        this.#notifyAppLayout();\n      },\n    };\n  };\n\n  getStateForTesting = () => {\n    return {\n      appLayoutUpdateCallback: this.#appLayoutUpdateCallback,\n      breadcrumbInstances: this.#breadcrumbInstances,\n      breadcrumbRegistrations: this.#breadcrumbRegistrations,\n    };\n  };\n\n  installInternal(internalApi: Partial<BreadcrumbsApiInternal<T>> = {}): BreadcrumbsApiInternal<T> {\n    internalApi.registerBreadcrumbs ??= this.registerBreadcrumbs;\n    internalApi.registerAppLayout ??= this.registerAppLayout;\n    internalApi.getStateForTesting ??= this.getStateForTesting;\n\n    return internalApi as BreadcrumbsApiInternal<T>;\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\nimport { NonCancelableEventHandler } from '../../events';\nimport { reportRuntimeApiWarning } from '../helpers/metrics';\n\ntype DrawerVisibilityChange = (callback: (isVisible: boolean) => void) => void;\n\ninterface MountContentContext {\n  onVisibilityChange: DrawerVisibilityChange;\n}\n\nexport interface DrawerStateChangeParams {\n  isOpen: boolean;\n  initiatedByUserAction?: boolean;\n}\n\nexport interface DrawerConfig {\n  id: string;\n  type?: 'local' | 'global';\n  ariaLabels: {\n    content?: string;\n    closeButton?: string;\n    triggerButton?: string;\n    resizeHandle?: string;\n  };\n  badge?: boolean;\n  resizable?: boolean;\n  defaultSize?: number;\n  onResize?: NonCancelableEventHandler<{ size: number; id: string }>;\n  orderPriority?: number;\n  defaultActive?: boolean;\n  trigger?: {\n    iconSvg: string;\n  };\n  mountContent: (container: HTMLElement, mountContext: MountContentContext) => void;\n  unmountContent: (container: HTMLElement) => void;\n  preserveInactiveContent?: boolean;\n  onToggle?: NonCancelableEventHandler<DrawerStateChangeParams>;\n}\n\nconst updatableProperties = [\n  'badge',\n  'resizable',\n  'defaultSize',\n  'orderPriority',\n  'defaultActive',\n  'onResize',\n] as const;\n\nexport type UpdateDrawerConfig = { id: DrawerConfig['id'] } & Partial<\n  Pick<DrawerConfig, (typeof updatableProperties)[number]>\n>;\n\ntype DrawersRegistrationListener = (drawers: Array<DrawerConfig>) => void;\n\nexport type DrawersToggledListener = (drawerId: string, params?: OpenCloseDrawerParams) => void;\n\ninterface OpenCloseDrawerParams {\n  initiatedByUserAction: boolean;\n}\n\nexport interface DrawersApiPublic {\n  registerDrawer(config: DrawerConfig): void;\n  updateDrawer(config: UpdateDrawerConfig): void;\n  openDrawer(drawerId: string, params?: OpenCloseDrawerParams): void;\n  closeDrawer(drawerId: string, params?: OpenCloseDrawerParams): void;\n}\n\nexport interface DrawersApiInternal {\n  clearRegisteredDrawers(): void;\n  onDrawersRegistered(listener: DrawersRegistrationListener): () => void;\n  onDrawerOpened(listener: DrawersToggledListener): () => void;\n  onDrawerClosed(listener: DrawersToggledListener): () => void;\n}\n\nexport class DrawersController {\n  private drawers: Array<DrawerConfig> = [];\n  private drawersRegistrationListener: DrawersRegistrationListener | null = null;\n  private drawerOpenedListener: DrawersToggledListener | null = null;\n  private drawerClosedListener: DrawersToggledListener | null = null;\n\n  scheduleUpdate = debounce(() => {\n    this.drawersRegistrationListener?.(this.drawers);\n  }, 0);\n\n  registerDrawer = (config: DrawerConfig) => {\n    if (this.drawers.find(drawer => drawer.id === config.id)) {\n      reportRuntimeApiWarning('app-layout-drawers', `drawer with id \"${config.id}\" is already registered`);\n    }\n    this.drawers = this.drawers.concat(config);\n    this.scheduleUpdate();\n  };\n\n  updateDrawer = ({ id: drawerId, ...rest }: UpdateDrawerConfig) => {\n    const drawerIndex = this.drawers.findIndex(({ id }) => id === drawerId);\n    const oldDrawerConfig = this.drawers?.[drawerIndex];\n    if (!oldDrawerConfig) {\n      throw new Error(`[AwsUi] [runtime drawers] drawer with id ${drawerId} not found`);\n    }\n    const drawers = this.drawers.slice();\n    const updatedDrawer = { ...oldDrawerConfig };\n    for (const key of updatableProperties) {\n      if (key in rest) {\n        updatedDrawer[key] = (rest as any)[key];\n      }\n    }\n    drawers[drawerIndex] = updatedDrawer;\n    this.drawers = drawers;\n    this.scheduleUpdate();\n  };\n\n  onDrawersRegistered = (listener: DrawersRegistrationListener) => {\n    if (this.drawersRegistrationListener !== null) {\n      reportRuntimeApiWarning(\n        'app-layout-drawers',\n        'multiple app layout instances detected when calling onDrawersRegistered'\n      );\n    }\n    this.drawersRegistrationListener = listener;\n    this.scheduleUpdate();\n    return () => {\n      this.drawersRegistrationListener = null;\n    };\n  };\n\n  clearRegisteredDrawers = () => {\n    this.drawers = [];\n  };\n\n  onDrawerOpened = (listener: DrawersToggledListener) => {\n    if (this.drawerOpenedListener !== null) {\n      reportRuntimeApiWarning(\n        'app-layout-drawers',\n        'multiple app layout instances detected when calling onDrawerOpened'\n      );\n    }\n\n    this.drawerOpenedListener = listener;\n\n    return () => {\n      this.drawerOpenedListener = null;\n    };\n  };\n\n  onDrawerClosed = (listener: DrawersToggledListener) => {\n    if (this.drawerClosedListener !== null) {\n      reportRuntimeApiWarning(\n        'app-layout-drawers',\n        'multiple app layout instances detected when calling onDrawerClosed'\n      );\n    }\n\n    this.drawerClosedListener = listener;\n\n    return () => {\n      this.drawerClosedListener = null;\n    };\n  };\n\n  openDrawer = (drawerId: string, params?: OpenCloseDrawerParams) => {\n    this.drawerOpenedListener?.(drawerId, params);\n  };\n\n  closeDrawer = (drawerId: string, params?: OpenCloseDrawerParams) => {\n    this.drawerClosedListener?.(drawerId, params);\n  };\n\n  installPublic(api: Partial<DrawersApiPublic> = {}): DrawersApiPublic {\n    api.registerDrawer ??= this.registerDrawer;\n    api.updateDrawer ??= this.updateDrawer;\n    api.openDrawer ??= this.openDrawer;\n    api.closeDrawer ??= this.closeDrawer;\n    return api as DrawersApiPublic;\n  }\n\n  installInternal(internalApi: Partial<DrawersApiInternal> = {}): DrawersApiInternal {\n    internalApi.clearRegisteredDrawers ??= this.clearRegisteredDrawers;\n    internalApi.onDrawersRegistered ??= this.onDrawersRegistered;\n    internalApi.onDrawerOpened ??= this.onDrawerOpened;\n    internalApi.onDrawerClosed ??= this.onDrawerClosed;\n    return internalApi as DrawersApiInternal;\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nexport interface SharedReactContextsApiInternal {\n  createContext: <T>(ReactInstance: typeof React, contextName: string) => React.Context<T | undefined>;\n}\n\nexport class SharedReactContexts {\n  #registeredContexts = new WeakMap<typeof React, Map<string, React.Context<any>>>();\n\n  createContext = <T>(ReactInstance: typeof React, contextName: string) => {\n    let contexts = this.#registeredContexts.get(ReactInstance);\n    if (!contexts) {\n      contexts = new Map();\n      this.#registeredContexts.set(ReactInstance, contexts);\n    }\n\n    let cachedContext = contexts.get(contextName);\n\n    if (!cachedContext) {\n      cachedContext = ReactInstance.createContext<T>(undefined as T);\n      contexts.set(contextName, cachedContext);\n    }\n\n    return cachedContext;\n  };\n\n  installInternal(internalApi: Partial<SharedReactContextsApiInternal> = {}): SharedReactContextsApiInternal {\n    internalApi.createContext ??= this.createContext;\n    return internalApi as SharedReactContextsApiInternal;\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BreadcrumbGroupProps } from '../../breadcrumb-group/interfaces';\nimport { ActionButtonsController, ActionsApiInternal, ActionsApiPublic } from './controllers/action-buttons';\nimport {\n  AlertFlashContentApiInternal,\n  AlertFlashContentApiPublic,\n  AlertFlashContentController,\n} from './controllers/alert-flash-content';\nimport { AppLayoutWidgetApiInternal, AppLayoutWidgetController } from './controllers/app-layout-widget';\nimport { BreadcrumbsApiInternal, BreadcrumbsController } from './controllers/breadcrumbs';\nimport { DrawersApiInternal, DrawersApiPublic, DrawersController } from './controllers/drawers';\nimport { SharedReactContexts, SharedReactContextsApiInternal } from './controllers/shared-react-contexts';\nimport { reportRuntimeApiLoadMetric } from './helpers/metrics';\n\nconst storageKey = Symbol.for('awsui-plugin-api');\n\ninterface AwsuiApi {\n  awsuiPlugins: {\n    appLayout: DrawersApiPublic;\n    alert: ActionsApiPublic;\n    alertContent: AlertFlashContentApiPublic;\n    flashbar: ActionsApiPublic;\n    flashContent: AlertFlashContentApiPublic;\n  };\n  awsuiPluginsInternal: {\n    appLayout: DrawersApiInternal;\n    appLayoutWidget: AppLayoutWidgetApiInternal;\n    alert: ActionsApiInternal;\n    alertContent: AlertFlashContentApiInternal;\n    flashbar: ActionsApiInternal;\n    flashContent: AlertFlashContentApiInternal;\n    breadcrumbs: BreadcrumbsApiInternal<BreadcrumbGroupProps>;\n    sharedReactContexts: SharedReactContextsApiInternal;\n  };\n}\n\ninterface WindowWithApi extends Window {\n  [storageKey]: AwsuiApi;\n}\n\nfunction findUpApi(currentWindow: WindowWithApi): AwsuiApi | undefined {\n  try {\n    if (currentWindow?.[storageKey]) {\n      return currentWindow[storageKey];\n    }\n\n    if (!currentWindow || currentWindow.parent === currentWindow) {\n      // When the window has no more parents, it references itself\n      return undefined;\n    }\n\n    return findUpApi(currentWindow.parent as WindowWithApi);\n  } catch (ex) {\n    // Most likely a cross-origin access error\n    return undefined;\n  }\n}\n\nexport function loadApi() {\n  if (typeof window === 'undefined') {\n    return installApi({});\n  }\n  const win = window as unknown as WindowWithApi;\n  const existingApi = findUpApi(win);\n  if (!existingApi) {\n    reportRuntimeApiLoadMetric();\n  }\n  win[storageKey] = installApi(existingApi ?? {});\n  return win[storageKey];\n}\n\nexport const { awsuiPlugins, awsuiPluginsInternal } = loadApi();\n\ntype DeepPartial<T> = T extends (...args: any) => any ? T : { [P in keyof T]?: DeepPartial<T[P]> };\n\nfunction installApi(api: DeepPartial<AwsuiApi>): AwsuiApi {\n  api.awsuiPlugins ??= {};\n  api.awsuiPluginsInternal ??= {};\n\n  const appLayoutDrawers = new DrawersController();\n  api.awsuiPlugins.appLayout = appLayoutDrawers.installPublic(api.awsuiPlugins.appLayout);\n  api.awsuiPluginsInternal.appLayout = appLayoutDrawers.installInternal(api.awsuiPluginsInternal.appLayout);\n\n  const appLayoutController = new AppLayoutWidgetController();\n  api.awsuiPluginsInternal.appLayoutWidget = appLayoutController.installInternal(\n    api.awsuiPluginsInternal.appLayoutWidget\n  );\n\n  const alertActions = new ActionButtonsController();\n  api.awsuiPlugins.alert = alertActions.installPublic(api.awsuiPlugins.alert);\n  api.awsuiPluginsInternal.alert = alertActions.installInternal(api.awsuiPluginsInternal.alert);\n\n  const alertContent = new AlertFlashContentController();\n  api.awsuiPlugins.alertContent = alertContent.installPublic(api.awsuiPlugins.alertContent);\n  api.awsuiPluginsInternal.alertContent = alertContent.installInternal(api.awsuiPluginsInternal.alertContent);\n\n  const flashContent = new AlertFlashContentController();\n  api.awsuiPlugins.flashContent = flashContent.installPublic(api.awsuiPlugins.flashContent);\n  api.awsuiPluginsInternal.flashContent = flashContent.installInternal(api.awsuiPluginsInternal.flashContent);\n\n  const flashbarActions = new ActionButtonsController();\n  api.awsuiPlugins.flashbar = flashbarActions.installPublic(api.awsuiPlugins.flashbar);\n  api.awsuiPluginsInternal.flashbar = flashbarActions.installInternal(api.awsuiPluginsInternal.flashbar);\n\n  const breadcrumbs = new BreadcrumbsController<BreadcrumbGroupProps>();\n  api.awsuiPluginsInternal.breadcrumbs = breadcrumbs.installInternal(api.awsuiPluginsInternal.breadcrumbs);\n\n  const sharedReactContexts = new SharedReactContexts();\n  api.awsuiPluginsInternal.sharedReactContexts = sharedReactContexts.installInternal(\n    api.awsuiPluginsInternal.sharedReactContexts\n  );\n\n  return api as AwsuiApi;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { ActionButtonsController, ActionConfig, ActionContext } from '../controllers/action-buttons';\n\ninterface RuntimeActionWrapperProps {\n  context: ActionContext;\n  mountContent: ActionConfig['mountContent'];\n  unmountContent: ActionConfig['unmountContent'];\n}\n\nfunction RuntimeActionWrapper({ mountContent, unmountContent, context }: RuntimeActionWrapperProps) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const container = ref.current!;\n    mountContent(container, context);\n    return () => {\n      unmountContent(container);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div ref={ref}></div>;\n}\n\nfunction convertRuntimeAction(action: ActionConfig | null, context: ActionContext) {\n  if (!action) {\n    return null;\n  }\n  return (\n    <RuntimeActionWrapper\n      key={action.id + '-' + context.type}\n      context={context}\n      mountContent={action.mountContent}\n      unmountContent={action.unmountContent}\n    />\n  );\n}\n\nexport function createUseDiscoveredAction(onActionRegistered: ActionButtonsController['onActionRegistered']) {\n  return function useDiscoveredAction(type: string): {\n    discoveredActions: React.ReactNode[];\n    headerRef: React.Ref<HTMLDivElement>;\n    contentRef: React.Ref<HTMLDivElement>;\n  } {\n    const [discoveredActions, setDiscoveredActions] = useState<Array<React.ReactNode>>([]);\n    const headerRef = useRef<HTMLDivElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      return onActionRegistered(actions => {\n        setDiscoveredActions(actions.map(action => convertRuntimeAction(action, { type, headerRef, contentRef })));\n      });\n    }, [type]);\n\n    return { discoveredActions, headerRef, contentRef };\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ReactNode, useEffect, useRef, useState } from 'react';\n\nimport {\n  AlertFlashContentApiInternal,\n  AlertFlashContentResult,\n  ReplacementType,\n} from '../controllers/alert-flash-content';\nimport { reportRuntimeApiWarning } from './metrics';\n\nexport function createUseDiscoveredContent(componentName: string, controller: AlertFlashContentApiInternal) {\n  return function useDiscoveredContent({\n    type,\n    header,\n    children,\n  }: {\n    type: string;\n    header: ReactNode;\n    children: ReactNode;\n  }) {\n    const headerRef = useRef<HTMLDivElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const replacementHeaderRef = useRef<HTMLDivElement>(null);\n    const replacementContentRef = useRef<HTMLDivElement>(null);\n    const [initialHidden, setInitialHidden] = useState(() =>\n      controller.initialCheck({\n        type,\n        header,\n        content: children,\n      })\n    );\n    const [headerReplacementType, setFoundHeaderReplacement] = useState<ReplacementType>('original');\n    const [contentReplacementType, setFoundContentReplacement] = useState<ReplacementType>('original');\n    const mountedProvider = useRef<AlertFlashContentResult | undefined>();\n\n    useEffect(() => {\n      const context = { type, headerRef, contentRef };\n\n      setInitialHidden(false);\n\n      return controller.onContentRegistered(provider => {\n        let mounted = true;\n\n        function checkMounted(methodName: string) {\n          if (!mounted) {\n            reportRuntimeApiWarning(\n              `${componentName}-content-replacer`,\n              `\"${methodName}\" called after component unmounted`\n            );\n            return false;\n          }\n          return true;\n        }\n\n        mountedProvider.current = provider.runReplacer(context, {\n          hideHeader() {\n            if (checkMounted('hideHeader')) {\n              setFoundHeaderReplacement('remove');\n            }\n          },\n          restoreHeader() {\n            if (checkMounted('restoreHeader')) {\n              setFoundHeaderReplacement('original');\n            }\n          },\n          replaceHeader(replacer: (container: HTMLElement) => void) {\n            if (checkMounted('replaceHeader')) {\n              replacer(replacementHeaderRef.current!);\n              setFoundHeaderReplacement('replaced');\n            }\n          },\n          hideContent() {\n            if (checkMounted('hideContent')) {\n              setFoundContentReplacement('remove');\n            }\n          },\n          restoreContent() {\n            if (checkMounted('restoreContent')) {\n              setFoundContentReplacement('original');\n            }\n          },\n          replaceContent(replacer: (container: HTMLElement) => void) {\n            if (checkMounted('replaceContent')) {\n              replacer(replacementContentRef.current!);\n              setFoundContentReplacement('replaced');\n            }\n          },\n        });\n\n        return () => {\n          mountedProvider.current?.unmount({\n            replacementHeaderContainer: replacementHeaderRef.current!,\n            replacementContentContainer: replacementContentRef.current!,\n          });\n          mounted = false;\n        };\n      });\n    }, [type]);\n\n    useEffect(() => {\n      mountedProvider.current?.update();\n    }, [type, header, children]);\n\n    return {\n      initialHidden,\n      headerReplacementType,\n      contentReplacementType,\n      headerRef: headerRef as React.Ref<HTMLDivElement>,\n      replacementHeaderRef: replacementHeaderRef as React.Ref<HTMLDivElement>,\n      contentRef: contentRef as React.Ref<HTMLDivElement>,\n      replacementContentRef: replacementContentRef as React.Ref<HTMLDivElement>,\n    };\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalButton, { InternalButtonProps } from '../../button/internal';\nimport { GeneratedAnalyticsMetadataAlertButtonClick } from '../analytics-metadata/interfaces';\n\nimport styles from './styles.css.js';\n\nfunction createActionButton(\n  testUtilClasses: ActionsWrapperProps['testUtilClasses'],\n  action: React.ReactNode,\n  buttonText: React.ReactNode,\n  onButtonClick: InternalButtonProps['onClick']\n) {\n  if (!action && buttonText) {\n    action = (\n      <span\n        {...getAnalyticsMetadataAttribute({\n          action: 'buttonClick',\n        } as Partial<GeneratedAnalyticsMetadataAlertButtonClick>)}\n      >\n        <InternalButton className={testUtilClasses.actionButton} onClick={onButtonClick} formAction=\"none\">\n          {buttonText}\n        </InternalButton>\n      </span>\n    );\n  }\n  return action ? <div className={testUtilClasses.actionSlot}>{action}</div> : null;\n}\n\ninterface ActionsWrapperProps {\n  className: string;\n  testUtilClasses: { actionSlot: string; actionButton: string };\n  action: React.ReactNode;\n  discoveredActions: Array<React.ReactNode>;\n  buttonText: React.ReactNode;\n  onButtonClick: InternalButtonProps['onClick'];\n}\n\nexport const ActionsWrapper = ({\n  className,\n  testUtilClasses,\n  action,\n  discoveredActions,\n  buttonText,\n  onButtonClick,\n}: ActionsWrapperProps) => {\n  const actionButton = createActionButton(testUtilClasses, action, buttonText, onButtonClick);\n  if (!actionButton && discoveredActions.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={clsx(styles.root, className)}>\n      {actionButton}\n      {discoveredActions}\n    </div>\n  );\n};\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_37gf8_14wux_9\"\n};\n  ", "\n    import './styles.scoped.css';\n    export default {\n  \"header\": \"awsui_header_17427_1ns0c_5\"\n};\n  ", "\n    import './styles.scoped.css';\n    export default {\n  \"alert\": \"awsui_alert_mx3cw_1euw8_193\",\n  \"awsui-motion-fade-in\": \"awsui_awsui-motion-fade-in_mx3cw_1euw8_1\",\n  \"root\": \"awsui_root_mx3cw_1euw8_215\",\n  \"hidden\": \"awsui_hidden_mx3cw_1euw8_250\",\n  \"with-dismiss\": \"awsui_with-dismiss_mx3cw_1euw8_297\",\n  \"with-action\": \"awsui_with-action_mx3cw_1euw8_297\",\n  \"breakpoint-default\": \"awsui_breakpoint-default_mx3cw_1euw8_303\",\n  \"initial-hidden\": \"awsui_initial-hidden_mx3cw_1euw8_314\",\n  \"header\": \"awsui_header_mx3cw_1euw8_319\",\n  \"header-replacement\": \"awsui_header-replacement_mx3cw_1euw8_320\",\n  \"action\": \"awsui_action_mx3cw_1euw8_324\",\n  \"action-slot\": \"awsui_action-slot_mx3cw_1euw8_329\",\n  \"action-button\": \"awsui_action-button_mx3cw_1euw8_330\",\n  \"alert-focus-wrapper\": \"awsui_alert-focus-wrapper_mx3cw_1euw8_334\",\n  \"text\": \"awsui_text_mx3cw_1euw8_363\",\n  \"icon\": \"awsui_icon_mx3cw_1euw8_370\",\n  \"message\": \"awsui_message_mx3cw_1euw8_373\",\n  \"icon-size-medium\": \"awsui_icon-size-medium_mx3cw_1euw8_381\",\n  \"icon-size-big\": \"awsui_icon-size-big_mx3cw_1euw8_384\",\n  \"icon-size-normal\": \"awsui_icon-size-normal_mx3cw_1euw8_387\",\n  \"content\": \"awsui_content_mx3cw_1euw8_391\",\n  \"content-replacement\": \"awsui_content-replacement_mx3cw_1euw8_392\",\n  \"dismiss\": \"awsui_dismiss_mx3cw_1euw8_396\",\n  \"dismiss-button\": \"awsui_dismiss-button_mx3cw_1euw8_401\",\n  \"type-error\": \"awsui_type-error_mx3cw_1euw8_405\",\n  \"type-warning\": \"awsui_type-warning_mx3cw_1euw8_413\",\n  \"type-success\": \"awsui_type-success_mx3cw_1euw8_421\",\n  \"type-info\": \"awsui_type-info_mx3cw_1euw8_429\"\n};\n  "],
  "mappings": "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",
  "names": ["import_react", "import_react", "props", "React", "useDiscoveredAction", "import_react", "useDiscoveredContent", "import_react", "React", "internal_default", "styles_css_default", "styles_css_default", "React", "styles_css_default", "internal_default", "React", "_a", "styles_css_default", "internal_default"]
}
