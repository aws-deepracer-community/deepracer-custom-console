import {
  require_react_dom
} from "./chunk-HKXRFMQU.js";
import {
  require_react
} from "./chunk-WHMHD7EJ.js";
import {
  __commonJS,
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/balanced-match/index.js
var require_balanced_match = __commonJS({
  "node_modules/balanced-match/index.js"(exports, module) {
    "use strict";
    module.exports = balanced2;
    function balanced2(a, b, str) {
      if (a instanceof RegExp) a = maybeMatch(a, str);
      if (b instanceof RegExp) b = maybeMatch(b, str);
      var r2 = range(a, b, str);
      return r2 && {
        start: r2[0],
        end: r2[1],
        pre: str.slice(0, r2[0]),
        body: str.slice(r2[0] + a.length, r2[1]),
        post: str.slice(r2[1] + b.length)
      };
    }
    function maybeMatch(reg, str) {
      var m = str.match(reg);
      return m ? m[0] : null;
    }
    balanced2.range = range;
    function range(a, b, str) {
      var begs, beg, left, right, result;
      var ai = str.indexOf(a);
      var bi = str.indexOf(b, ai + 1);
      var i = ai;
      if (ai >= 0 && bi > 0) {
        if (a === b) {
          return [ai, bi];
        }
        begs = [];
        left = str.length;
        while (i >= 0 && !result) {
          if (i == ai) {
            begs.push(i);
            ai = str.indexOf(a, i + 1);
          } else if (begs.length == 1) {
            result = [begs.pop(), bi];
          } else {
            beg = begs.pop();
            if (beg < left) {
              left = beg;
              right = bi;
            }
            bi = str.indexOf(b, i + 1);
          }
          i = ai < bi && ai >= 0 ? ai : bi;
        }
        if (begs.length) {
          result = [left, right];
        }
      }
      return result;
    }
  }
});

// node_modules/tslib/tslib.es6.mjs
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

// node_modules/@cloudscape-design/components/button/index.js
var import_react22 = __toESM(require_react());

// node_modules/@cloudscape-design/component-toolkit/lib/internal/base-component/component-metadata.js
var import_react = __toESM(require_react());
var COMPONENT_METADATA_KEY = "__awsuiMetadata__";
function useComponentMetadata(componentName, packageVersion) {
  var elementRef = (0, import_react.useRef)(null);
  (0, import_react.useEffect)(function() {
    if (elementRef.current) {
      var node = elementRef.current;
      var metadata = { name: componentName, version: packageVersion };
      Object.freeze(metadata);
      Object.defineProperty(node, COMPONENT_METADATA_KEY, { value: metadata, writable: false, configurable: true });
    }
  });
  return elementRef;
}

// node_modules/@cloudscape-design/component-toolkit/lib/internal/base-component/component-metrics.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/component-toolkit/lib/internal/base-component/metrics/log-clients.js
function validateLength(value, maxLength) {
  return !value || value.length <= maxLength;
}
var CLogClient = (
  /** @class */
  function() {
    function CLogClient2() {
    }
    CLogClient2.prototype.sendMetric = function(metricName, value, detail) {
      if (!metricName || !/^[a-zA-Z0-9_-]+$/.test(metricName)) {
        console.error("Invalid metric name: ".concat(metricName));
        return;
      }
      if (!validateLength(metricName, 1e3)) {
        console.error("Metric name ".concat(metricName, " is too long"));
        return;
      }
      if (!validateLength(detail, 4e3)) {
        console.error("Detail for metric ".concat(metricName, " is too long: ").concat(detail));
        return;
      }
      var AWSC = this.findAWSC(window);
      if (typeof AWSC === "object" && typeof AWSC.Clog === "object" && typeof AWSC.Clog.log === "function") {
        AWSC.Clog.log(metricName, value, detail);
      }
    };
    CLogClient2.prototype.findAWSC = function(currentWindow) {
      try {
        if (typeof (currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.AWSC) === "object") {
          return currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.AWSC;
        }
        if (!currentWindow || currentWindow.parent === currentWindow) {
          return void 0;
        }
        return this.findAWSC(currentWindow.parent);
      } catch (ex) {
        return void 0;
      }
    };
    return CLogClient2;
  }()
);
var PanoramaClient = (
  /** @class */
  function() {
    function PanoramaClient2() {
    }
    PanoramaClient2.prototype.sendMetric = function(metric) {
      if (typeof metric.eventDetail === "object") {
        metric.eventDetail = JSON.stringify(metric.eventDetail);
      }
      if (typeof metric.eventValue === "object") {
        metric.eventValue = JSON.stringify(metric.eventValue);
      }
      if (!validateLength(metric.eventDetail, 4e3)) {
        console.error("Event detail for metric is too long: ".concat(metric.eventDetail));
        return;
      }
      if (!validateLength(metric.eventValue, 4e3)) {
        console.error("Event value for metric is too long: ".concat(metric.eventValue));
        return;
      }
      if (!validateLength(metric.eventContext, 4e3)) {
        console.error("Event context for metric is too long: ".concat(metric.eventContext));
        return;
      }
      if (!validateLength(metric.eventType, 50)) {
        console.error("Event type for metric is too long: ".concat(metric.eventType));
        return;
      }
      var panorama = this.findPanorama(window);
      if (typeof panorama === "function") {
        panorama("trackCustomEvent", __assign(__assign({}, metric), { timestamp: Date.now() }));
      }
    };
    PanoramaClient2.prototype.findPanorama = function(currentWindow) {
      try {
        if (typeof (currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.panorama) === "function") {
          return currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow.panorama;
        }
        if (!currentWindow || currentWindow.parent === currentWindow) {
          return void 0;
        }
        return this.findPanorama(currentWindow.parent);
      } catch (ex) {
        return void 0;
      }
    };
    return PanoramaClient2;
  }()
);

// node_modules/@cloudscape-design/component-toolkit/lib/internal/base-component/metrics/formatters.js
var framework = "react";
function buildMetricHash(_a2) {
  var source = _a2.source, action = _a2.action;
  return ["src".concat(source), "action".concat(action)].join("_");
}
function buildMetricDetail(_a2, theme2) {
  var source = _a2.source, action = _a2.action, version = _a2.version;
  var metricOrigin = typeof AWSUI_METRIC_ORIGIN !== "undefined" ? AWSUI_METRIC_ORIGIN : "main";
  var detailObject = {
    o: metricOrigin,
    s: source,
    t: theme2,
    a: action,
    f: framework,
    v: formatMajorVersionForMetricDetail(version)
  };
  return JSON.stringify(detailObject);
}
function buildMetricName(_a2, theme2) {
  var source = _a2.source, version = _a2.version;
  return ["awsui", source, "".concat(formatVersionForMetricName(theme2, version))].join("_");
}
function formatMajorVersionForMetricDetail(version) {
  return version.replace(/\s/g, "");
}
function formatVersionForMetricName(theme2, version) {
  return "".concat(theme2.charAt(0)).concat(getMajorVersion(version).replace(".", ""));
}
function getMajorVersion(versionString) {
  var majorVersionMatch = versionString.match(/^(\d+\.\d+)/);
  return majorVersionMatch ? majorVersionMatch[1] : "";
}

// node_modules/@cloudscape-design/component-toolkit/lib/internal/base-component/metrics/metrics.js
var oneTimeMetrics = /* @__PURE__ */ new Set();
var theme = "";
function setTheme(newTheme) {
  theme = newTheme;
}
var Metrics = (
  /** @class */
  function() {
    function Metrics2(source, packageVersion) {
      this.clog = new CLogClient();
      this.panorama = new PanoramaClient();
      this.source = source;
      this.packageVersion = packageVersion;
    }
    Metrics2.prototype.initMetrics = function(theme2) {
      setTheme(theme2);
    };
    Metrics2.prototype.sendMetric = function(metricName, value, detail) {
      if (!theme) {
        console.error("Metrics need to be initialized first.");
        return;
      }
      this.clog.sendMetric(metricName, value, detail);
    };
    Metrics2.prototype.sendPanoramaMetric = function(metric) {
      this.panorama.sendMetric(metric);
    };
    Metrics2.prototype.sendMetricObject = function(metric, value) {
      this.sendMetric(buildMetricName(metric, theme), value, buildMetricDetail(metric, theme));
    };
    Metrics2.prototype.sendMetricObjectOnce = function(metric, value) {
      var metricHash = buildMetricHash(metric);
      if (!oneTimeMetrics.has(metricHash)) {
        this.sendMetricObject(metric, value);
        oneTimeMetrics.add(metricHash);
      }
    };
    Metrics2.prototype.sendMetricOnce = function(metricName, value, detail) {
      if (!oneTimeMetrics.has(metricName)) {
        this.sendMetric(metricName, value, detail);
        oneTimeMetrics.add(metricName);
      }
    };
    Metrics2.prototype.logComponentLoaded = function() {
      this.sendMetricObjectOnce({ source: this.source, action: "loaded", version: this.packageVersion }, 1);
    };
    Metrics2.prototype.logComponentUsed = function(componentName) {
      this.sendMetricObjectOnce({
        source: componentName,
        action: "used",
        version: this.packageVersion
      }, 1);
    };
    return Metrics2;
  }()
);
var MetricsTestHelper = (
  /** @class */
  function() {
    function MetricsTestHelper2() {
    }
    MetricsTestHelper2.prototype.resetOneTimeMetricsCache = function() {
      oneTimeMetrics.clear();
    };
    return MetricsTestHelper2;
  }()
);

// node_modules/@cloudscape-design/component-toolkit/lib/internal/base-component/component-metrics.js
function useComponentMetrics(componentName, _a2) {
  var packageSource = _a2.packageSource, packageVersion = _a2.packageVersion, theme2 = _a2.theme;
  (0, import_react2.useEffect)(function() {
    var metrics = new Metrics(packageSource, packageVersion);
    metrics.initMetrics(theme2);
    if (typeof window !== "undefined") {
      metrics.sendMetricOnce("awsui-viewport-width", window.innerWidth || 0);
      metrics.sendMetricOnce("awsui-viewport-height", window.innerHeight || 0);
    }
    metrics.logComponentLoaded();
    metrics.logComponentUsed(componentName.toLowerCase());
  }, []);
}

// node_modules/@cloudscape-design/component-toolkit/lib/internal/base-component/init-awsui-versions.js
function initAwsUiVersions(source, packageVersion) {
  if (typeof window !== "undefined") {
    if (!window.awsuiVersions) {
      window.awsuiVersions = {};
    }
    if (!window.awsuiVersions[source]) {
      window.awsuiVersions[source] = [];
    }
    window.awsuiVersions[source].push(packageVersion);
  }
}

// node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js
var resizeObservers = [];

// node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js
var hasActiveObservations = function() {
  return resizeObservers.some(function(ro) {
    return ro.activeTargets.length > 0;
  });
};

// node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js
var hasSkippedObservations = function() {
  return resizeObservers.some(function(ro) {
    return ro.skippedTargets.length > 0;
  });
};

// node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js
var msg = "ResizeObserver loop completed with undelivered notifications.";
var deliverResizeLoopError = function() {
  var event;
  if (typeof ErrorEvent === "function") {
    event = new ErrorEvent("error", {
      message: msg
    });
  } else {
    event = document.createEvent("Event");
    event.initEvent("error", false, false);
    event.message = msg;
  }
  window.dispatchEvent(event);
};

// node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js
var ResizeObserverBoxOptions;
(function(ResizeObserverBoxOptions2) {
  ResizeObserverBoxOptions2["BORDER_BOX"] = "border-box";
  ResizeObserverBoxOptions2["CONTENT_BOX"] = "content-box";
  ResizeObserverBoxOptions2["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));

// node_modules/@juggle/resize-observer/lib/utils/freeze.js
var freeze = function(obj) {
  return Object.freeze(obj);
};

// node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js
var ResizeObserverSize = /* @__PURE__ */ function() {
  function ResizeObserverSize2(inlineSize, blockSize) {
    this.inlineSize = inlineSize;
    this.blockSize = blockSize;
    freeze(this);
  }
  return ResizeObserverSize2;
}();

// node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js
var DOMRectReadOnly = function() {
  function DOMRectReadOnly2(x, y, width, height) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
    this.top = this.y;
    this.left = this.x;
    this.bottom = this.top + this.height;
    this.right = this.left + this.width;
    return freeze(this);
  }
  DOMRectReadOnly2.prototype.toJSON = function() {
    var _a2 = this, x = _a2.x, y = _a2.y, top = _a2.top, right = _a2.right, bottom = _a2.bottom, left = _a2.left, width = _a2.width, height = _a2.height;
    return { x, y, top, right, bottom, left, width, height };
  };
  DOMRectReadOnly2.fromRect = function(rectangle) {
    return new DOMRectReadOnly2(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
  };
  return DOMRectReadOnly2;
}();

// node_modules/@juggle/resize-observer/lib/utils/element.js
var isSVG = function(target) {
  return target instanceof SVGElement && "getBBox" in target;
};
var isHidden = function(target) {
  if (isSVG(target)) {
    var _a2 = target.getBBox(), width = _a2.width, height = _a2.height;
    return !width && !height;
  }
  var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
  return !(offsetWidth || offsetHeight || target.getClientRects().length);
};
var isElement = function(obj) {
  var _a2;
  if (obj instanceof Element) {
    return true;
  }
  var scope = (_a2 = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a2 === void 0 ? void 0 : _a2.defaultView;
  return !!(scope && obj instanceof scope.Element);
};
var isReplacedElement = function(target) {
  switch (target.tagName) {
    case "INPUT":
      if (target.type !== "image") {
        break;
      }
    case "VIDEO":
    case "AUDIO":
    case "EMBED":
    case "OBJECT":
    case "CANVAS":
    case "IFRAME":
    case "IMG":
      return true;
  }
  return false;
};

// node_modules/@juggle/resize-observer/lib/utils/global.js
var global = typeof window !== "undefined" ? window : {};

// node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js
var cache = /* @__PURE__ */ new WeakMap();
var scrollRegexp = /auto|scroll/;
var verticalRegexp = /^tb|vertical/;
var IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);
var parseDimension = function(pixel) {
  return parseFloat(pixel || "0");
};
var size = function(inlineSize, blockSize, switchSizes) {
  if (inlineSize === void 0) {
    inlineSize = 0;
  }
  if (blockSize === void 0) {
    blockSize = 0;
  }
  if (switchSizes === void 0) {
    switchSizes = false;
  }
  return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
};
var zeroBoxes = freeze({
  devicePixelContentBoxSize: size(),
  borderBoxSize: size(),
  contentBoxSize: size(),
  contentRect: new DOMRectReadOnly(0, 0, 0, 0)
});
var calculateBoxSizes = function(target, forceRecalculation) {
  if (forceRecalculation === void 0) {
    forceRecalculation = false;
  }
  if (cache.has(target) && !forceRecalculation) {
    return cache.get(target);
  }
  if (isHidden(target)) {
    cache.set(target, zeroBoxes);
    return zeroBoxes;
  }
  var cs = getComputedStyle(target);
  var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();
  var removePadding = !IE && cs.boxSizing === "border-box";
  var switchSizes = verticalRegexp.test(cs.writingMode || "");
  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || "");
  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || "");
  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
  var horizontalPadding = paddingLeft + paddingRight;
  var verticalPadding = paddingTop + paddingBottom;
  var horizontalBorderArea = borderLeft + borderRight;
  var verticalBorderArea = borderTop + borderBottom;
  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
  var boxes = freeze({
    devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
    contentBoxSize: size(contentWidth, contentHeight, switchSizes),
    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
  });
  cache.set(target, boxes);
  return boxes;
};
var calculateBoxSize = function(target, observedBox, forceRecalculation) {
  var _a2 = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a2.borderBoxSize, contentBoxSize = _a2.contentBoxSize, devicePixelContentBoxSize = _a2.devicePixelContentBoxSize;
  switch (observedBox) {
    case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
      return devicePixelContentBoxSize;
    case ResizeObserverBoxOptions.BORDER_BOX:
      return borderBoxSize;
    default:
      return contentBoxSize;
  }
};

// node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js
var ResizeObserverEntry = /* @__PURE__ */ function() {
  function ResizeObserverEntry2(target) {
    var boxes = calculateBoxSizes(target);
    this.target = target;
    this.contentRect = boxes.contentRect;
    this.borderBoxSize = freeze([boxes.borderBoxSize]);
    this.contentBoxSize = freeze([boxes.contentBoxSize]);
    this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);
  }
  return ResizeObserverEntry2;
}();

// node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js
var calculateDepthForNode = function(node) {
  if (isHidden(node)) {
    return Infinity;
  }
  var depth = 0;
  var parent = node.parentNode;
  while (parent) {
    depth += 1;
    parent = parent.parentNode;
  }
  return depth;
};

// node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js
var broadcastActiveObservations = function() {
  var shallowestDepth = Infinity;
  var callbacks2 = [];
  resizeObservers.forEach(function processObserver(ro) {
    if (ro.activeTargets.length === 0) {
      return;
    }
    var entries = [];
    ro.activeTargets.forEach(function processTarget(ot) {
      var entry = new ResizeObserverEntry(ot.target);
      var targetDepth = calculateDepthForNode(ot.target);
      entries.push(entry);
      ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);
      if (targetDepth < shallowestDepth) {
        shallowestDepth = targetDepth;
      }
    });
    callbacks2.push(function resizeObserverCallback() {
      ro.callback.call(ro.observer, entries, ro.observer);
    });
    ro.activeTargets.splice(0, ro.activeTargets.length);
  });
  for (var _i = 0, callbacks_1 = callbacks2; _i < callbacks_1.length; _i++) {
    var callback = callbacks_1[_i];
    callback();
  }
  return shallowestDepth;
};

// node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js
var gatherActiveObservationsAtDepth = function(depth) {
  resizeObservers.forEach(function processObserver(ro) {
    ro.activeTargets.splice(0, ro.activeTargets.length);
    ro.skippedTargets.splice(0, ro.skippedTargets.length);
    ro.observationTargets.forEach(function processTarget(ot) {
      if (ot.isActive()) {
        if (calculateDepthForNode(ot.target) > depth) {
          ro.activeTargets.push(ot);
        } else {
          ro.skippedTargets.push(ot);
        }
      }
    });
  });
};

// node_modules/@juggle/resize-observer/lib/utils/process.js
var process2 = function() {
  var depth = 0;
  gatherActiveObservationsAtDepth(depth);
  while (hasActiveObservations()) {
    depth = broadcastActiveObservations();
    gatherActiveObservationsAtDepth(depth);
  }
  if (hasSkippedObservations()) {
    deliverResizeLoopError();
  }
  return depth > 0;
};

// node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js
var trigger;
var callbacks = [];
var notify = function() {
  return callbacks.splice(0).forEach(function(cb) {
    return cb();
  });
};
var queueMicroTask = function(callback) {
  if (!trigger) {
    var toggle_1 = 0;
    var el_1 = document.createTextNode("");
    var config = { characterData: true };
    new MutationObserver(function() {
      return notify();
    }).observe(el_1, config);
    trigger = function() {
      el_1.textContent = "".concat(toggle_1 ? toggle_1-- : toggle_1++);
    };
  }
  callbacks.push(callback);
  trigger();
};

// node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js
var queueResizeObserver = function(cb) {
  queueMicroTask(function ResizeObserver2() {
    requestAnimationFrame(cb);
  });
};

// node_modules/@juggle/resize-observer/lib/utils/scheduler.js
var watching = 0;
var isWatching = function() {
  return !!watching;
};
var CATCH_PERIOD = 250;
var observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };
var events = [
  "resize",
  "load",
  "transitionend",
  "animationend",
  "animationstart",
  "animationiteration",
  "keyup",
  "keydown",
  "mouseup",
  "mousedown",
  "mouseover",
  "mouseout",
  "blur",
  "focus"
];
var time = function(timeout) {
  if (timeout === void 0) {
    timeout = 0;
  }
  return Date.now() + timeout;
};
var scheduled = false;
var Scheduler = function() {
  function Scheduler2() {
    var _this = this;
    this.stopped = true;
    this.listener = function() {
      return _this.schedule();
    };
  }
  Scheduler2.prototype.run = function(timeout) {
    var _this = this;
    if (timeout === void 0) {
      timeout = CATCH_PERIOD;
    }
    if (scheduled) {
      return;
    }
    scheduled = true;
    var until = time(timeout);
    queueResizeObserver(function() {
      var elementsHaveResized = false;
      try {
        elementsHaveResized = process2();
      } finally {
        scheduled = false;
        timeout = until - time();
        if (!isWatching()) {
          return;
        }
        if (elementsHaveResized) {
          _this.run(1e3);
        } else if (timeout > 0) {
          _this.run(timeout);
        } else {
          _this.start();
        }
      }
    });
  };
  Scheduler2.prototype.schedule = function() {
    this.stop();
    this.run();
  };
  Scheduler2.prototype.observe = function() {
    var _this = this;
    var cb = function() {
      return _this.observer && _this.observer.observe(document.body, observerConfig);
    };
    document.body ? cb() : global.addEventListener("DOMContentLoaded", cb);
  };
  Scheduler2.prototype.start = function() {
    var _this = this;
    if (this.stopped) {
      this.stopped = false;
      this.observer = new MutationObserver(this.listener);
      this.observe();
      events.forEach(function(name) {
        return global.addEventListener(name, _this.listener, true);
      });
    }
  };
  Scheduler2.prototype.stop = function() {
    var _this = this;
    if (!this.stopped) {
      this.observer && this.observer.disconnect();
      events.forEach(function(name) {
        return global.removeEventListener(name, _this.listener, true);
      });
      this.stopped = true;
    }
  };
  return Scheduler2;
}();
var scheduler = new Scheduler();
var updateCount = function(n) {
  !watching && n > 0 && scheduler.start();
  watching += n;
  !watching && scheduler.stop();
};

// node_modules/@juggle/resize-observer/lib/ResizeObservation.js
var skipNotifyOnElement = function(target) {
  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === "inline";
};
var ResizeObservation = function() {
  function ResizeObservation2(target, observedBox) {
    this.target = target;
    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;
    this.lastReportedSize = {
      inlineSize: 0,
      blockSize: 0
    };
  }
  ResizeObservation2.prototype.isActive = function() {
    var size2 = calculateBoxSize(this.target, this.observedBox, true);
    if (skipNotifyOnElement(this.target)) {
      this.lastReportedSize = size2;
    }
    if (this.lastReportedSize.inlineSize !== size2.inlineSize || this.lastReportedSize.blockSize !== size2.blockSize) {
      return true;
    }
    return false;
  };
  return ResizeObservation2;
}();

// node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js
var ResizeObserverDetail = /* @__PURE__ */ function() {
  function ResizeObserverDetail2(resizeObserver, callback) {
    this.activeTargets = [];
    this.skippedTargets = [];
    this.observationTargets = [];
    this.observer = resizeObserver;
    this.callback = callback;
  }
  return ResizeObserverDetail2;
}();

// node_modules/@juggle/resize-observer/lib/ResizeObserverController.js
var observerMap = /* @__PURE__ */ new WeakMap();
var getObservationIndex = function(observationTargets, target) {
  for (var i = 0; i < observationTargets.length; i += 1) {
    if (observationTargets[i].target === target) {
      return i;
    }
  }
  return -1;
};
var ResizeObserverController = function() {
  function ResizeObserverController2() {
  }
  ResizeObserverController2.connect = function(resizeObserver, callback) {
    var detail = new ResizeObserverDetail(resizeObserver, callback);
    observerMap.set(resizeObserver, detail);
  };
  ResizeObserverController2.observe = function(resizeObserver, target, options) {
    var detail = observerMap.get(resizeObserver);
    var firstObservation = detail.observationTargets.length === 0;
    if (getObservationIndex(detail.observationTargets, target) < 0) {
      firstObservation && resizeObservers.push(detail);
      detail.observationTargets.push(new ResizeObservation(target, options && options.box));
      updateCount(1);
      scheduler.schedule();
    }
  };
  ResizeObserverController2.unobserve = function(resizeObserver, target) {
    var detail = observerMap.get(resizeObserver);
    var index = getObservationIndex(detail.observationTargets, target);
    var lastObservation = detail.observationTargets.length === 1;
    if (index >= 0) {
      lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);
      detail.observationTargets.splice(index, 1);
      updateCount(-1);
    }
  };
  ResizeObserverController2.disconnect = function(resizeObserver) {
    var _this = this;
    var detail = observerMap.get(resizeObserver);
    detail.observationTargets.slice().forEach(function(ot) {
      return _this.unobserve(resizeObserver, ot.target);
    });
    detail.activeTargets.splice(0, detail.activeTargets.length);
  };
  return ResizeObserverController2;
}();

// node_modules/@juggle/resize-observer/lib/ResizeObserver.js
var ResizeObserver = function() {
  function ResizeObserver2(callback) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (typeof callback !== "function") {
      throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
    }
    ResizeObserverController.connect(this, callback);
  }
  ResizeObserver2.prototype.observe = function(target, options) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (!isElement(target)) {
      throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
    }
    ResizeObserverController.observe(this, target, options);
  };
  ResizeObserver2.prototype.unobserve = function(target) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (!isElement(target)) {
      throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
    }
    ResizeObserverController.unobserve(this, target);
  };
  ResizeObserver2.prototype.disconnect = function() {
    ResizeObserverController.disconnect(this);
  };
  ResizeObserver2.toString = function() {
    return "function ResizeObserver () { [polyfill code] }";
  };
  return ResizeObserver2;
}();

// node_modules/@cloudscape-design/component-toolkit/lib/internal/container-queries/use-resize-observer.js
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/component-toolkit/lib/internal/stable-callback/index.js
var import_react3 = __toESM(require_react());
function useStableCallback(fn) {
  var ref = (0, import_react3.useRef)();
  (0, import_react3.useEffect)(function() {
    ref.current = fn;
  });
  return (0, import_react3.useCallback)(function() {
    var _a2;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return (_a2 = ref.current) === null || _a2 === void 0 ? void 0 : _a2.apply(void 0, args);
  }, []);
}

// node_modules/@cloudscape-design/component-toolkit/lib/internal/container-queries/use-resize-observer.js
function useResizeObserver(elementRef, onObserve) {
  var stableOnObserve = useStableCallback(onObserve);
  (0, import_react4.useLayoutEffect)(
    function() {
      var element = typeof elementRef === "function" ? elementRef() : elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;
      if (element) {
        onObserve(convertResizeObserverEntry(new ResizeObserverEntry(element)));
      }
    },
    // This effect is only needed for the first render to provide a synchronous update.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );
  (0, import_react4.useEffect)(function() {
    var element = typeof elementRef === "function" ? elementRef() : elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;
    if (element) {
      var connected_1 = true;
      var observer_1 = new ResizeObserver(function(entries) {
        if (connected_1) {
          stableOnObserve(convertResizeObserverEntry(entries[0]));
        }
      });
      observer_1.observe(element);
      return function() {
        connected_1 = false;
        observer_1.disconnect();
      };
    }
  }, [elementRef, stableOnObserve]);
}
function convertResizeObserverEntry(entry) {
  return {
    target: entry.target,
    contentBoxWidth: entry.contentBoxSize[0].inlineSize,
    contentBoxHeight: entry.contentBoxSize[0].blockSize,
    borderBoxWidth: entry.borderBoxSize[0].inlineSize,
    borderBoxHeight: entry.borderBoxSize[0].blockSize
  };
}

// node_modules/@cloudscape-design/component-toolkit/lib/internal/singleton-handler/index.js
var import_react5 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
function createSingletonHandler(factory) {
  var listeners = [];
  var callback = function(value) {
    (0, import_react_dom.unstable_batchedUpdates)(function() {
      for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {
        var listener = listeners_1[_i];
        listener(value);
      }
    });
  };
  var cleanup;
  return function useSingleton(listener) {
    (0, import_react5.useEffect)(function() {
      if (listeners.length === 0) {
        cleanup = factory(callback);
      }
      listeners.push(listener);
      return function() {
        listeners.splice(listeners.indexOf(listener), 1);
        if (listeners.length === 0) {
          cleanup();
          cleanup = void 0;
        }
      };
    }, []);
  };
}
function createSingletonState(_a2) {
  var factory = _a2.factory, initialState = _a2.initialState;
  var useSingleton = createSingletonHandler(factory);
  var value = initialState;
  return function useSingletonState() {
    var _a3 = (0, import_react5.useState)(value), state = _a3[0], setState = _a3[1];
    useSingleton(function(newValue) {
      value = newValue;
      setState(newValue);
    });
    return state;
  };
}

// node_modules/@cloudscape-design/component-toolkit/lib/internal/visual-mode/index.js
var import_react6 = __toESM(require_react());

// node_modules/@cloudscape-design/component-toolkit/lib/dom/find-up-until.js
function findUpUntil(from, test) {
  var current = from;
  while (current && !test(current)) {
    current = current.parentElement;
    while (current && !(current instanceof HTMLElement)) {
      current = current.parentElement;
    }
  }
  return current;
}

// node_modules/@cloudscape-design/component-toolkit/lib/dom/node-contains.js
function nodeContains(parent, descendant) {
  if (!parent || !descendant || !("nodeType" in descendant)) {
    return false;
  }
  return parent.contains(descendant);
}

// node_modules/@cloudscape-design/component-toolkit/lib/internal/is-development.js
var isDevelopment = true;

// node_modules/@cloudscape-design/component-toolkit/lib/internal/logging.js
var messageCache = /* @__PURE__ */ new Set();
function warnOnce(component, message) {
  if (isDevelopment) {
    var warning = "[AwsUi] [".concat(component, "] ").concat(message);
    if (!messageCache.has(warning)) {
      messageCache.add(warning);
      console.warn(warning);
    }
  }
}

// node_modules/@cloudscape-design/component-toolkit/lib/internal/visual-mode/index.js
var awsuiVisualRefreshFlag = Symbol["for"]("awsui-visual-refresh-flag");
function isMotionDisabled(element) {
  var _a2, _b;
  return !!findUpUntil(element, function(node) {
    return node.classList.contains("awsui-motion-disabled");
  }) || ((_b = (_a2 = window.matchMedia) === null || _a2 === void 0 ? void 0 : _a2.call(window, "(prefers-reduced-motion: reduce)").matches) !== null && _b !== void 0 ? _b : false);
}
function useCurrentMode(elementRef) {
  var _a2 = (0, import_react6.useState)("light"), value = _a2[0], setValue = _a2[1];
  useMutationObserver(elementRef, function(node) {
    var darkModeParent = findUpUntil(node, function(node2) {
      return node2.classList.contains("awsui-polaris-dark-mode") || node2.classList.contains("awsui-dark-mode");
    });
    setValue(darkModeParent ? "dark" : "light");
  });
  return value;
}
function useDensityMode(elementRef) {
  var _a2 = (0, import_react6.useState)("comfortable"), value = _a2[0], setValue = _a2[1];
  useMutationObserver(elementRef, function(node) {
    var compactModeParent = findUpUntil(node, function(node2) {
      return node2.classList.contains("awsui-polaris-compact-mode") || node2.classList.contains("awsui-compact-mode");
    });
    setValue(compactModeParent ? "compact" : "comfortable");
  });
  return value;
}
function useReducedMotion(elementRef) {
  var _a2 = (0, import_react6.useState)(false), value = _a2[0], setValue = _a2[1];
  useMutationObserver(elementRef, function(node) {
    setValue(isMotionDisabled(node));
  });
  return value;
}
var useMutationSingleton = createSingletonHandler(function(handler) {
  var observer = new MutationObserver(function() {
    return handler();
  });
  observer.observe(document.body, { attributes: true, subtree: true });
  return function() {
    return observer.disconnect();
  };
});
function useMutationObserver(elementRef, onChange) {
  var handler = useStableCallback(function() {
    if (elementRef.current) {
      onChange(elementRef.current);
    }
  });
  useMutationSingleton(handler);
  (0, import_react6.useEffect)(function() {
    handler();
  }, [handler]);
}
var visualRefreshState = void 0;
function detectVisualRefresh() {
  return typeof document !== "undefined" && !!document.querySelector(".awsui-visual-refresh");
}
function useRuntimeVisualRefresh() {
  var _a2;
  if (visualRefreshState === void 0) {
    visualRefreshState = detectVisualRefresh();
    if (!visualRefreshState && typeof window !== "undefined" && ((_a2 = window[awsuiVisualRefreshFlag]) === null || _a2 === void 0 ? void 0 : _a2.call(window))) {
      document.body.classList.add("awsui-visual-refresh");
      visualRefreshState = true;
    }
  }
  if (isDevelopment) {
    var newVisualRefreshState = detectVisualRefresh();
    if (newVisualRefreshState !== visualRefreshState) {
      warnOnce("Visual Refresh", "Dynamic visual refresh change detected. This is not supported. Make sure `awsui-visual-refresh` is attached to the `<body>` element before initial React render");
    }
  }
  return visualRefreshState;
}

// node_modules/@cloudscape-design/components/internal/environment.js
var PACKAGE_SOURCE = "components";
var PACKAGE_VERSION = "3.0.0 (171737fc)";
var THEME = "open-source-visual-refresh";
var ALWAYS_VISUAL_REFRESH = true;

// node_modules/@cloudscape-design/components/internal/base-component/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/internal/base-component/styles.scoped.css";

// node_modules/@cloudscape-design/components/internal/base-component/index.js
initAwsUiVersions(PACKAGE_SOURCE, PACKAGE_VERSION);
function getBaseProps(props) {
  const baseProps = {};
  Object.keys(props).forEach((prop) => {
    if (prop === "id" || prop === "className" || prop.match(/^data-/)) {
      baseProps[prop] = props[prop];
    }
  });
  return baseProps;
}
function getAnalyticsMetadataProps(props) {
  return props.__analyticsMetadata;
}

// node_modules/clsx/dist/clsx.m.js
function r(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e) n += e;
  else if ("object" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
  else for (t in e) e[t] && (n && (n += " "), n += t);
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = ""; f < arguments.length; ) (e = arguments[f++]) && (t = r(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_m_default = clsx;

// node_modules/@cloudscape-design/components/button/internal.js
var import_react20 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/events/index.js
var CustomEventStub = class {
  constructor(cancelable = false, detail = null) {
    this.cancelable = cancelable;
    this.detail = detail;
    this.defaultPrevented = false;
    this.cancelBubble = false;
  }
  preventDefault() {
    this.defaultPrevented = true;
  }
  stopPropagation() {
    this.cancelBubble = true;
  }
};
function createCustomEvent({ cancelable, detail }) {
  return new CustomEventStub(cancelable, detail);
}
function fireNonCancelableEvent(handler, detail) {
  if (!handler) {
    return;
  }
  const event = createCustomEvent({ cancelable: false, detail });
  handler(event);
}
function fireCancelableEvent(handler, detail, sourceEvent) {
  if (!handler) {
    return false;
  }
  const event = createCustomEvent({ cancelable: true, detail });
  handler(event);
  if (event.defaultPrevented && sourceEvent) {
    sourceEvent.preventDefault();
  }
  if (event.cancelBubble && sourceEvent) {
    sourceEvent.stopPropagation();
  }
  return event.defaultPrevented;
}
function fireKeyboardEvent(handler, reactEvent) {
  return fireCancelableEvent(handler, {
    keyCode: reactEvent.keyCode,
    key: reactEvent.key,
    ctrlKey: reactEvent.ctrlKey,
    shiftKey: reactEvent.shiftKey,
    altKey: reactEvent.altKey,
    metaKey: reactEvent.metaKey
  }, reactEvent);
}
var isMouseEvent = (e) => {
  return e.button !== void 0;
};
function hasModifierKeys(event) {
  return event.ctrlKey || event.altKey || event.shiftKey || event.metaKey;
}
function isPlainLeftClick(event) {
  return event && (!isMouseEvent(event) || event.button === 0) && !hasModifierKeys(event);
}

// node_modules/@cloudscape-design/components/internal/hooks/forward-focus/index.js
var import_react7 = __toESM(require_react());
function useForwardFocus(mainRef, controlRef) {
  (0, import_react7.useImperativeHandle)(mainRef, () => ({
    focus(...args) {
      var _a2;
      (_a2 = controlRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus(...args);
    }
  }), [controlRef]);
}

// node_modules/@cloudscape-design/components/button/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/button/styles.scoped.css";
var styles_css_default = {
  "content": "awsui_content_vjswe_12tek_103",
  "button": "awsui_button_vjswe_12tek_107",
  "variant-normal": "awsui_variant-normal_vjswe_12tek_158",
  "variant-icon": "awsui_variant-icon_vjswe_12tek_201",
  "variant-modal-dismiss": "awsui_variant-modal-dismiss_vjswe_12tek_201",
  "variant-flashbar-icon": "awsui_variant-flashbar-icon_vjswe_12tek_201",
  "variant-inline-icon": "awsui_variant-inline-icon_vjswe_12tek_222",
  "disabled": "awsui_disabled_vjswe_12tek_243",
  "variant-primary": "awsui_variant-primary_vjswe_12tek_251",
  "variant-link": "awsui_variant-link_vjswe_12tek_344",
  "variant-inline-link": "awsui_variant-inline-link_vjswe_12tek_623",
  "variant-breadcrumb-group": "awsui_variant-breadcrumb-group_vjswe_12tek_906",
  "variant-menu-trigger": "awsui_variant-menu-trigger_vjswe_12tek_1004",
  "button-no-text": "awsui_button-no-text_vjswe_12tek_1097",
  "button-no-wrap": "awsui_button-no-wrap_vjswe_12tek_1101",
  "full-width": "awsui_full-width_vjswe_12tek_1104",
  "icon-left": "awsui_icon-left_vjswe_12tek_1123",
  "icon-right": "awsui_icon-right_vjswe_12tek_1128",
  "icon": "awsui_icon_vjswe_12tek_1123"
};

// node_modules/@cloudscape-design/components/button/icon-helper.js
var React3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/icon/internal.js
var import_react9 = __toESM(require_react());

// node_modules/@cloudscape-design/components/icon/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/icon/styles.scoped.css";
var styles_css_default2 = {
  "icon": "awsui_icon_h11ix_1l964_104",
  "icon-flex-height": "awsui_icon-flex-height_h11ix_1l964_110",
  "size-small": "awsui_size-small_h11ix_1l964_135",
  "size-small-mapped-height": "awsui_size-small-mapped-height_h11ix_1l964_139",
  "size-normal": "awsui_size-normal_h11ix_1l964_154",
  "size-normal-mapped-height": "awsui_size-normal-mapped-height_h11ix_1l964_158",
  "size-medium": "awsui_size-medium_h11ix_1l964_173",
  "size-medium-mapped-height": "awsui_size-medium-mapped-height_h11ix_1l964_177",
  "size-big": "awsui_size-big_h11ix_1l964_192",
  "size-big-mapped-height": "awsui_size-big-mapped-height_h11ix_1l964_196",
  "size-large": "awsui_size-large_h11ix_1l964_211",
  "size-large-mapped-height": "awsui_size-large-mapped-height_h11ix_1l964_215",
  "variant-normal": "awsui_variant-normal_h11ix_1l964_230",
  "variant-disabled": "awsui_variant-disabled_h11ix_1l964_233",
  "variant-inverted": "awsui_variant-inverted_h11ix_1l964_236",
  "variant-subtle": "awsui_variant-subtle_h11ix_1l964_239",
  "variant-warning": "awsui_variant-warning_h11ix_1l964_242",
  "variant-error": "awsui_variant-error_h11ix_1l964_245",
  "variant-success": "awsui_variant-success_h11ix_1l964_248",
  "variant-link": "awsui_variant-link_h11ix_1l964_251",
  "name-angle-left-double": "awsui_name-angle-left-double_h11ix_1l964_254",
  "name-angle-left": "awsui_name-angle-left_h11ix_1l964_254",
  "name-angle-right-double": "awsui_name-angle-right-double_h11ix_1l964_256",
  "name-angle-right": "awsui_name-angle-right_h11ix_1l964_256",
  "name-arrow-left": "awsui_name-arrow-left_h11ix_1l964_258",
  "name-caret-left-filled": "awsui_name-caret-left-filled_h11ix_1l964_259",
  "name-caret-right-filled": "awsui_name-caret-right-filled_h11ix_1l964_260",
  "name-audio-full": "awsui_name-audio-full_h11ix_1l964_261",
  "name-audio-half": "awsui_name-audio-half_h11ix_1l964_262",
  "name-audio-off": "awsui_name-audio-off_h11ix_1l964_263",
  "name-external": "awsui_name-external_h11ix_1l964_264",
  "name-redo": "awsui_name-redo_h11ix_1l964_265",
  "name-shrink": "awsui_name-shrink_h11ix_1l964_266",
  "name-undo": "awsui_name-undo_h11ix_1l964_267",
  "name-view-vertical": "awsui_name-view-vertical_h11ix_1l964_268",
  "badge": "awsui_badge_h11ix_1l964_272"
};

// node_modules/@cloudscape-design/components/icon/icons.js
var icons_default = {
  "add-plus": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M8 1v14M15 8H1"/></svg>',
  "anchor-link": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linecap-round" d="M11 8H5"/><path d="M7 4H5a4 4 0 0 0 0 8h2M9 4h2a4 4 0 0 1 0 8H9"/></svg>',
  "angle-down": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m1 4 7 7 7-7"/></svg>',
  "angle-left-double": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M14 1 7 8l7 7"/><path d="M9 1 2 8l7 7"/></svg>',
  "angle-left": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M12 1 5 8l7 7"/></svg>',
  "angle-right-double": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m2 1 7 7-7 7"/><path d="m7 1 7 7-7 7"/></svg>',
  "angle-right": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m4 1 7 7-7 7"/></svg>',
  "angle-up": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m1 12 7-7 7 7"/></svg>',
  "arrow-left": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M9 1 2 8l7 7M2 8h13"/></svg>',
  "audio-full": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M7 15V1L1 6v4l6 5ZM15 3v10M11 5v6"/></svg>',
  "audio-half": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M7 15V1L1 6v4l6 5ZM11 5v6"/></svg>',
  "audio-off": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M7 15V1L1 6v4l6 5Z"/><path d="m15.01 5.75-4.5 4.5M15.01 10.25l-4.5-4.5"/></svg>',
  "bug": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M5 5h6a1 1 0 0 1 1 1v5.5A3.5 3.5 0 0 1 8.5 15h-1A3.5 3.5 0 0 1 4 11.5V6a1 1 0 0 1 1-1ZM5 5a3 3 0 0 1 6 0"/><path d="M12 9h3M1 9h3M12 12h2l1 2M4 12H2l-1 2M12 6h2l1-2M4 6H2L1 4"/></svg>',
  "calendar": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 2h12v12H2z"/><path d="M4.99 8H5v.01h-.01zM7.99 8H8v.01h-.01zM10.99 8H11v.01h-.01zM4.99 5H5v.01h-.01zM7.99 5H8v.01h-.01zM10.99 5H11v.01h-.01zM4.99 11H5v.01h-.01zM7.99 11H8v.01h-.01z"/></svg>',
  "call": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M9 2c2.8 0 5 2.2 5 5M7.9 13c1.3 1.3 3.5 1.3 4.8 0l1-1c.4-.4.4-1 0-1.4l-1.5-1.5c-.3-.3-1-.2-1.3.1l-.1.1c-.5.5-1.4.5-2 0L6.6 7.2c-.5-.5-.5-1.4 0-2l.1-.1c.3-.3.4-1 .1-1.3L5.3 2.3c-.3-.4-1-.4-1.3 0l-1 1C1.7 4.6 1.7 6.7 3 8.1L7.9 13z"/></svg>',
  "caret-down-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M4 5h8l-4 6-4-6z"/></svg>',
  "caret-down": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M4 5h8l-4 6-4-6z"/></svg>',
  "caret-left-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M11 4v8L5 8l6-4z"/></svg>',
  "caret-right-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M5 4v8l6-4-6-4z"/></svg>',
  "caret-up-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M4 11h8L8 5l-4 6z"/></svg>',
  "caret-up": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M4 11h8L8 5l-4 6z"/></svg>',
  "check": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="m14.254 4.254-8.25 8.25L6 12.5l-.004.004-4.25-4.25.008-.008L6 12.493l8.246-8.247.008.008Z"/></svg>',
  "close": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m2 2 12 12M14 2 2 14"/></svg>',
  "contact": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round stroke-linecap-round" d="M2 12.286h5.143L8.857 14l1.714-1.714H14V2H2v10.286z"/><path class="stroke-linecap-round" d="M4.99 7H5v.01h-.01zM7.99 7H8v.01h-.01zM10.99 7H11v.01h-.01z"/></svg>',
  "copy": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 5h9v9H2z"/><path class="stroke-linejoin-round" d="M5 5V2h9v9h-3"/></svg>',
  "delete-marker": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M3 7V1h6l5 5v9H9"/><path class="stroke-linejoin-round" d="M8 1v6h6M1 15l6-6M7 15 1 9"/></svg>',
  "download": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M11 2h3v12H2V2h3"/><path d="m4 6 4 4 4-4M8 1v9"/></svg>',
  "drag-indicator": '<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><circle cx="5.5" cy="2.5" r=".5" class="filled"/><circle cx="5.5" cy="13.5" r=".5" class="filled"/><circle cx="5.5" cy="8" r=".5" class="filled"/><circle cx="10.5" cy="2.5" r=".5" class="filled"/><circle cx="10.5" cy="13.5" r=".5" class="filled"/><circle cx="10.5" cy="8" r=".5" class="filled"/></svg>',
  "edit": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled" d="M8.2 13.9H14v.1H8.1l.1-.1Zm2.37-9.17.7.7-5.3 5.3-.7-.7 5.3-5.3Zm2.71-2.7a.1.1 0 0 1 .14 0l.57.57a.1.1 0 0 1 0 .14l-.58.58-.71-.71.58-.58ZM3.15 12.15l.7.71-.24.24a1 1 0 0 1-.43.26l-.74.2.21-.73a1 1 0 0 1 .26-.44l.24-.24Z"/></svg>',
  "ellipsis": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="filled" cx="8" cy="2.5" r=".5"/><circle class="filled" cx="8" cy="8" r=".5"/><circle class="filled" cx="8" cy="13.5" r=".5"/></svg>',
  "envelope": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M1 2h14v12H1z"/><path class="stroke-linejoin-round" d="m1 4 7 6 7-6"/></svg>',
  "expand": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M9 2h5v5M7 2H2v5M7 14H2V9M9 14h5V9M2 2l12 12M14 2 2 14"/></svg>',
  "external": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linecap-square" d="M10 2h4v4"/><path d="m6 10 8-8"/><path class="stroke-linejoin-round" d="M14 9.048V14H2V2h5"/></svg>',
  "file-open": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M8 1v4a1 1 0 0 0 1 1h4"/><path class="stroke-linejoin-round" d="M3 15h10V5L9 1H3v14z"/><path d="m3 8 7 7"/></svg>',
  "file": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M8 1v5h5"/><path class="stroke-linejoin-round" d="M3 15V1h6l4 4v10H3z"/></svg>',
  "filter": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M14.986 2.016A.01.01 0 0 0 14.98 2H1.02a.01.01 0 0 0-.007.016l4.984 5.981A.01.01 0 0 1 6 8.004v6.98a.01.01 0 0 0 .014.009l3.98-1.99a.01.01 0 0 0 .006-.01v-4.99c0-.002 0-.004.002-.006l4.984-5.98Z"/></svg>',
  "flag": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m2.71 9.18 1.11-.39C5.2 8.3 6.74 8.44 8 9.18c1.27.74 2.8.89 4.18.39l1.11-.39v-6l-1.11.39c-1.38.49-2.92.35-4.18-.39-1.27-.74-2.8-.89-4.18-.39l-1.11.39v11.83"/></svg>',
  "folder-open": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 7V2h7l1 2h5v9a1 1 0 0 1-1 1H3L1 7h10l2.006 7"/></svg>',
  "folder": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M14 14H2V2h5.143L9 5h5v9z"/></svg>',
  "gen-ai": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="M7.981 1.047a.02.02 0 0 1 .038 0l1.96 4.973 4.974 1.961a.02.02 0 0 1 0 .038L9.98 9.979l-1.961 4.974a.02.02 0 0 1-.038 0L6.021 9.98 1.046 8.019a.02.02 0 0 1 0-.038l4.973-1.96 1.961-4.974Z"/><path d="m2.5 2.65.045-.095.095-.045-.095-.045L2.5 2.37l-.045.095-.095.045.095.045.045.095Z" class="filled"/></svg>',
  "group-active": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M14 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM9 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z"/><path class="filled stroke-linejoin-round" d="M6 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM1 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z"/></svg>',
  "group": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M14 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM9 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3ZM6 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM1 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z"/></svg>',
  "heart": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M13.92 3.061a3.729 3.729 0 0 0-5.21 0L8 3.76l-.71-.699a3.729 3.729 0 0 0-5.21 0 3.58 3.58 0 0 0 0 5.123l5.21 5.124.003-.004L8 14l.707-.696.004.004 5.21-5.124a3.58 3.58 0 0 0 0-5.123Z"/></svg>',
  "insert-row": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M15 6V3H1v9h5M16 11H8M12 15V7"/></svg>',
  "key": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M9 10a5.023 5.023 0 0 1 0 1 3.996 3.996 0 1 1-3-3.874L13 1h2v5h-2v2h-2l.016 1.983Z"/><path d="M4.99 11H5v.01h-.01z"/></svg>',
  "keyboard": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M15 2H1v12h14V2Z"/><path d="M6 5H4M9 5H7M12 5h-2M6 8H4M12 11H4M9 8H7M12 8h-2"/></svg>',
  "lock-private": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 7h12v7H2z"/><path d="M4 7V5a4 4 0 0 1 8 0v2"/></svg>',
  "menu": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M15 8H1M15 3H1M15 13H1"/></svg>',
  "microphone-off": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M13.76 1.34 2.11 12.98M4.75 10.8A5.002 5.002 0 0 0 13 7V6M8 15v-3M3 15h10"/><path class="filled" d="M8 1c-1.1 0-2 .9-2 2v1.09l2.88-2.88C8.61 1.08 8.32 1 8 1ZM6.64 8.46A2 2 0 0 0 8 9c1.1 0 2-.9 2-2V5.09L6.64 8.45v.01Z"/><path class="stroke-linejoin-round" d="M3.37 8.53C3.024 8.184 3 7.537 3 7V6"/></svg>',
  "microphone": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><rect class="stroke-linejoin-round" x="6" y="1" width="4" height="8" rx="2"/><path class="stroke-linejoin-round" d="M3 6v1a5 5 0 0 0 10 0V6M8 12v3M3 15h10"/></svg>',
  "multiscreen": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M11 5H1v7h10V5Z"/><path class="stroke-linejoin-round" d="M11 8.229h4v-7H5V5M1 15h10M6 15v-3"/></svg>',
  "notification": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M8 2.167c-3.5 0-3.5 4.666-3.5 4.666L1 11.5h14l-3.5-4.667s0-4.666-3.5-4.666ZM5.667 11.5v1.167a2.333 2.333 0 0 0 4.666 0V11.5"/><path class="stroke-linecap-round" d="M8 1v1.167"/></svg>',
  "redo": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M12 5H6.38c-4.5 0-4.5 8 0 8H13"/><path class="stroke-linejoin-round" d="m10 8 3-3-3-3"/></svg>',
  "refresh": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M10 5h5V0"/><path d="M15 8a6.957 6.957 0 0 1-7 7 6.957 6.957 0 0 1-7-7 6.957 6.957 0 0 1 7-7 6.87 6.87 0 0 1 6.3 4"/></svg>',
  "remove": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m3 3 1 11h8l1-11H3ZM1 3h14M10 2H6v1h4V2Z"/></svg>',
  "resize-area": '<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="m9.5 14.5 5-5M4 14.5 14.5 4"/></svg>',
  "script": '<svg viewBox="0 0 16 17" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m9.53 4.397-3.06 7.4M4.5 11.597 1 8.097l3.5-3.5M11.5 11.597l3.5-3.5-3.5-3.5"/></svg>',
  "search": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle cx="7" cy="7" r="5"/><path d="m15 15-4.5-4.5"/></svg>',
  "security": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M8 14.83s-6-1.925-6-6.74V3.265c3.31 0 5.99-1.916 5.99-1.916s2.7 1.916 6.01 1.916V8.09c0 4.815-6 6.74-6 6.74Z"/><path d="M2 8.09V3.265c3.31 0 5.99-1.916 5.99-1.916M13.99 8.09V3.265C10.68 3.265 8 1.35 8 1.35"/><path class="stroke-linejoin-round" d="M8 4v5M8 10v2"/></svg>',
  "settings": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M13.33 5.792a1.942 1.942 0 0 1 .287-1.97 6.984 6.984 0 0 0-1.44-1.439 1.943 1.943 0 0 1-3.159-1.308 6.965 6.965 0 0 0-2.037 0 1.943 1.943 0 0 1-3.158 1.308 6.962 6.962 0 0 0-1.44 1.44 1.943 1.943 0 0 1-1.308 3.158 6.972 6.972 0 0 0 0 2.037 1.943 1.943 0 0 1 1.308 3.159 6.952 6.952 0 0 0 1.44 1.44 1.942 1.942 0 0 1 3.159 1.308 6.962 6.962 0 0 0 2.036 0 1.942 1.942 0 0 1 3.159-1.308 6.974 6.974 0 0 0 1.44-1.44 1.943 1.943 0 0 1 1.308-3.159 6.974 6.974 0 0 0 0-2.037 1.942 1.942 0 0 1-1.596-1.189Z"/><circle cx="8" cy="8" r="2"/></svg>',
  "share": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle cx="11" cy="4" r="2"/><circle cx="4" cy="8" r="2"/><circle cx="11" cy="12" r="2"/><path d="M9.2 4.9 5.8 7.1M9.2 11.1 5.8 8.9"/></svg>',
  "shrink": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="M10 1v5h5M10 6l5-5M6 15v-5H1M6 10l-5 5"/></svg>',
  "star-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round stroke-linecap-round" d="m8 1 2.16 4.61 4.84.74-3.5 3.58.83 5.07L8 12.61 3.67 15l.83-5.07L1 6.35l4.84-.74L8 1z"/></svg>',
  "star-half": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m8 1 2.16 4.61 4.84.74-3.5 3.58.83 5.07L8 12.61 3.67 15l.83-5.07L1 6.35l4.84-.74L8 1z"/><path class="filled" d="M8 12.61 3.67 15l.83-5.07L1 6.35l4.84-.74L8 1v11.61z"/></svg>',
  "star": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round stroke-linecap-round" d="m8 1 2.16 4.61 4.84.74-3.5 3.58.83 5.07L8 12.61 3.67 15l.83-5.07L1 6.35l4.84-.74L8 1z"/></svg>',
  "status-in-progress": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path class="stroke-linecap-round" d="M4.99 7.995H5v.01h-.01zM7.99 7.995H8v.01h-.01zM10.99 7.995H11v.01h-.01z"/></svg>',
  "status-info": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path d="M8 11V8H6"/><path class="stroke-linejoin-round" d="M10 11H6"/><path d="M7.99 5H8v.01h-.01z"/></svg>',
  "status-negative": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path d="m10.828 5.172-5.656 5.656M10.828 10.828 5.172 5.172"/></svg>',
  "status-pending": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path class="stroke-linecap-square" d="M8 5v4H5"/></svg>',
  "status-positive": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path class="stroke-linecap-square" d="m5 8 2 2 3.521-3.521"/></svg>',
  "status-stopped": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path class="stroke-linecap-square" d="M11 8H5"/></svg>',
  "status-warning": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m8 1 7 14H1L8 1z"/><path d="M7.99 12H8v.01h-.01zM8 6v4"/></svg>',
  "suggestions": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M6 14h4"/><path d="M8 11h1c0-1.53 3-2.46 3-5.24.02-1.36-.61-2.4-1.57-3.09a4.208 4.208 0 0 0-4.86 0C4.61 3.36 3.98 4.4 4 5.76 4 8.54 7 9.47 7 11h1Z"/></svg>',
  "thumbs-down-filled": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M6 9.58c0 .27.06.55.19.79l1.64 3.28c.1.21.32.34.55.34.34 0 .62-.28.62-.62v-3.33h3.44a2 2 0 0 0 1.94-2.48l-1.01-4.05a2 2 0 0 0-1.94-1.52H6v7.59Z"/><path class="stroke-linejoin-round" d="M6 2H2v7h4"/></svg>',
  "thumbs-down": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M6 9.58c0 .27.06.55.19.79l1.64 3.28c.1.21.32.34.55.34.34 0 .62-.28.62-.62v-3.33h3.44a2 2 0 0 0 1.94-2.48l-1.01-4.05a2 2 0 0 0-1.94-1.52H6v7.59ZM6 2H2v7h4"/></svg>',
  "thumbs-up-filled": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M6 6.42c0-.27.06-.55.19-.79l1.64-3.28c.1-.21.32-.34.55-.34.34 0 .62.28.62.62v3.33h3.44a2 2 0 0 1 1.94 2.48l-1.01 4.05a2 2 0 0 1-1.94 1.52H6V6.42Z"/><path class="stroke-linejoin-round" d="M6 14H2V7h4"/></svg>',
  "thumbs-up": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M6 6.42c0-.27.06-.55.19-.79l1.64-3.28c.1-.21.32-.34.55-.34.34 0 .62.28.62.62v3.33h3.44a2 2 0 0 1 1.94 2.48l-1.01 4.05a2 2 0 0 1-1.94 1.52H6V6.42ZM6 14H2V7h4"/></svg>',
  "ticket": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M8 4.275a2 2 0 0 1-2-2H3v12h3a2 2 0 1 1 4 0h3v-12h-3a2 2 0 0 1-2 2Z"/></svg>',
  "treeview-collapse": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M5 8h6M2 2h12v12H2z"/></svg>',
  "treeview-expand": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M5 8h6M8 11V5M2 2h12v12H2z"/></svg>',
  "undo": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M4 13h5.625c4.5 0 4.5-8 0-8H3"/><path class="stroke-linejoin-round" d="M6 2 3 5l3 3"/></svg>',
  "unlocked": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 7h12v7H2z"/><path d="M11.874 4A4 4 0 0 0 4 5v2"/></svg>',
  "upload-download": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="M11 13.701v-10M8 6.702l3-3 3 3M4.98 2.662v10.04M7.98 9.662l-3 3-3-3"/></svg>',
  "upload": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M5 14H2V2h12v12h-3"/><path d="M12 10 8 6l-4 4M8 6v9"/></svg>',
  "user-profile-active": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M4.61 4.39C4.61 2.52 6.13 1 8 1s3.39 1.52 3.39 3.39S9.87 7.78 8 7.78 4.61 6.26 4.61 4.39M2.05 14.08h11.91c0-2.25-1.17-4.23-2.9-5.3A5.77 5.77 0 0 0 8 7.91c-3.29 0-5.95 2.76-5.95 6.17z"/></svg>',
  "user-profile": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M4.61 4.39C4.61 2.52 6.13 1 8 1s3.39 1.52 3.39 3.39S9.87 7.78 8 7.78 4.61 6.26 4.61 4.39M2.05 14.08h11.91c0-2.25-1.17-4.23-2.9-5.3A5.77 5.77 0 0 0 8 7.91c-3.29 0-5.95 2.76-5.95 6.17z"/></svg>',
  "video-off": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10ZM6 5l4 4M10 5 6 9"/></svg>',
  "video-on": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10Z"/><path class="stroke-linejoin-round" d="M8 8a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"/></svg>',
  "video-unavailable": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10ZM5.5 7h5"/></svg>',
  "view-full": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled" d="M5 5h6v6H5z"/><path class="stroke-linejoin-round" d="M2 2h12v12H2z"/></svg>',
  "view-horizontal": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled" d="M5 9h6v2H5z"/><path class="stroke-linejoin-round" d="M2 2h12v12H2z"/></svg>',
  "view-vertical": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled" d="M11 5v6H9V5z"/><path class="stroke-linejoin-round" d="M2 2h12v12H2z"/></svg>',
  "zoom-in": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle cx="6.885" cy="6.885" r="5.385"/><path d="m14.5 14.5-3.846-3.846M7 4v6M10 7H4"/></svg>',
  "zoom-out": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle cx="6.885" cy="6.885" r="5.385"/><path d="m14.5 14.5-3.846-3.846M10 7H4"/></svg>',
  "zoom-to-fit": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="M14 11v3h-4M2 11v3h4M2 5V2h4M14 5V2h-4M10 6H6v4h4V6Z"/></svg>'
};

// node_modules/@cloudscape-design/components/internal/hooks/use-merge-refs/index.js
var import_react8 = __toESM(require_react());
function useMergeRefs(...refs) {
  return (0, import_react8.useMemo)(() => {
    if (refs.every((ref) => ref === null || ref === void 0)) {
      return null;
    }
    return (value) => {
      refs.forEach((ref) => {
        if (typeof ref === "function") {
          ref(value);
        } else if (ref !== null && ref !== void 0) {
          ref.current = value;
        }
      });
    };
  }, refs);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-visual-mode/index.js
var useVisualRefresh = ALWAYS_VISUAL_REFRESH ? () => true : useRuntimeVisualRefresh;

// node_modules/@cloudscape-design/components/icon/internal.js
function iconSizeMap(height) {
  if (height === null) {
    return "normal";
  }
  if (height >= 50) {
    return "large";
  } else if (height >= 36) {
    return "big";
  } else if (height >= 24) {
    return "medium";
  } else if (height <= 16) {
    return "small";
  } else {
    return "normal";
  }
}
var InternalIcon = (_a2) => {
  var { name, size: size2 = "normal", variant = "normal", url, alt, svg, badge, __internalRootRef = null } = _a2, props = __rest(_a2, ["name", "size", "variant", "url", "alt", "svg", "badge", "__internalRootRef"]);
  const iconRef = (0, import_react9.useRef)(null);
  useVisualRefresh();
  const [parentHeight, setParentHeight] = (0, import_react9.useState)(null);
  const contextualSize = size2 === "inherit";
  const iconSize = contextualSize ? iconSizeMap(parentHeight) : size2;
  const inlineStyles = contextualSize && parentHeight !== null ? { height: `${parentHeight}px` } : {};
  const baseProps = getBaseProps(props);
  baseProps.className = clsx_m_default(baseProps.className, styles_css_default2.icon, contextualSize && styles_css_default2["icon-flex-height"], badge && styles_css_default2.badge, !contextualSize && styles_css_default2[`size-${iconSize}-mapped-height`], styles_css_default2[`size-${iconSize}`], styles_css_default2[`variant-${variant}`], styles_css_default2[`name-${name}`]);
  (0, import_react9.useLayoutEffect)(() => {
    if (!contextualSize || !iconRef.current) {
      return;
    }
    const { lineHeight } = getComputedStyle(iconRef.current);
    const newParentHeight = parseInt(lineHeight, 10);
    setParentHeight(newParentHeight);
  });
  const mergedRef = useMergeRefs(iconRef, __internalRootRef);
  if (svg) {
    if (url) {
      warnOnce("Icon", "You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.");
    }
    return import_react9.default.createElement("span", Object.assign({}, baseProps, { ref: mergedRef, "aria-hidden": "true", style: inlineStyles }), svg);
  }
  if (url) {
    return import_react9.default.createElement(
      "span",
      Object.assign({}, baseProps, { ref: mergedRef, style: inlineStyles }),
      import_react9.default.createElement("img", { src: url, alt })
    );
  }
  const validIcon = name && Object.prototype.hasOwnProperty.call(icons_default, name);
  function iconMap(name2) {
    const genAiFilledIcon = `<svg
        width="12"
        height="12"
        viewBox="0 0 16 16"
        xmlns="http://www.w3.org/2000/svg"
        focusable="false"
        aria-hidden="true"
        data-testid="gen-ai-filled"
      >
        <path d="m8 4.4 1.018 2.582L11.6 8 9.018 9.018 8 11.6 6.982 9.018 4.4 8l2.582-1.018L8 4.4ZM2.405 2.41l.002-.003.003-.002-.003-.002-.002-.003-.002.003-.003.002.003.002.002.003Z" class="filled"></path>
      </svg>`;
    if (name2 === "gen-ai" && iconSize === "small") {
      return genAiFilledIcon;
    } else {
      return icons_default[name2];
    }
  }
  return import_react9.default.createElement("span", Object.assign({}, baseProps, {
    // dangerouslySetInnerHTML is safe here, as we control the content coming from `icons`
    // eslint-disable-next-line react/no-danger
    dangerouslySetInnerHTML: validIcon ? { __html: iconMap(name) } : void 0,
    ref: mergedRef,
    style: inlineStyles
  }));
};
var internal_default = InternalIcon;

// node_modules/@cloudscape-design/components/spinner/internal.js
var import_react10 = __toESM(require_react());

// node_modules/@cloudscape-design/components/spinner/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/spinner/styles.scoped.css";
var styles_css_default3 = {
  "root": "awsui_root_1612d_wzftr_133",
  "spinner-rotator": "awsui_spinner-rotator_1612d_wzftr_1",
  "size-normal": "awsui_size-normal_1612d_wzftr_147",
  "size-big": "awsui_size-big_1612d_wzftr_155",
  "size-large": "awsui_size-large_1612d_wzftr_163",
  "variant-normal": "awsui_variant-normal_1612d_wzftr_171",
  "variant-disabled": "awsui_variant-disabled_1612d_wzftr_174",
  "variant-inverted": "awsui_variant-inverted_1612d_wzftr_177",
  "circle": "awsui_circle_1612d_wzftr_189",
  "circle-left": "awsui_circle-left_1612d_wzftr_217",
  "spinner-line-left": "awsui_spinner-line-left_1612d_wzftr_1",
  "circle-right": "awsui_circle-right_1612d_wzftr_222",
  "spinner-line-right": "awsui_spinner-line-right_1612d_wzftr_1"
};

// node_modules/@cloudscape-design/components/spinner/internal.js
function InternalSpinner(_a2) {
  var { size: size2 = "normal", variant = "normal", __internalRootRef } = _a2, props = __rest(_a2, ["size", "variant", "__internalRootRef"]);
  const baseProps = getBaseProps(props);
  return import_react10.default.createElement(
    "span",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default3.root, styles_css_default3[`size-${size2}`], styles_css_default3[`variant-${variant}`]), ref: __internalRootRef }),
    import_react10.default.createElement("span", { className: clsx_m_default(styles_css_default3.circle, styles_css_default3["circle-left"]) }),
    import_react10.default.createElement("span", { className: clsx_m_default(styles_css_default3.circle, styles_css_default3["circle-right"]) })
  );
}

// node_modules/@cloudscape-design/components/button/icon-helper.js
function getIconAlign(props) {
  const standalone = props.variant === "icon" || props.variant === "inline-icon";
  return standalone ? "left" : props.iconAlign;
}
function IconWrapper(_a2) {
  var { iconName, iconUrl, iconAlt, iconSvg, iconSize, badge } = _a2, props = __rest(_a2, ["iconName", "iconUrl", "iconAlt", "iconSvg", "iconSize", "badge"]);
  if (!iconName && !iconUrl && !iconSvg) {
    return null;
  }
  return React3.createElement(internal_default, { className: clsx_m_default(styles_css_default.icon, styles_css_default[`icon-${getIconAlign(props)}`], props.iconClass), name: iconName, url: iconUrl, svg: iconSvg, alt: iconAlt, size: iconSize, badge });
}
function LeftIcon(props) {
  if (props.loading) {
    return React3.createElement(InternalSpinner, { className: clsx_m_default(styles_css_default.icon, styles_css_default["icon-left"]) });
  } else if (getIconAlign(props) === "left") {
    return React3.createElement(IconWrapper, Object.assign({}, props));
  }
  return null;
}
function RightIcon(props) {
  if (getIconAlign(props) === "right") {
    return React3.createElement(IconWrapper, Object.assign({}, props));
  }
  return null;
}

// node_modules/@cloudscape-design/components/internal/utils/check-safe-url.js
var allowedJavascriptUrls = ["javascript:void(0)", "javascript:void(0);", "javascript:;"];
function checkSafeUrl(component, url) {
  if (!url) {
    return;
  }
  if (allowedJavascriptUrls.indexOf(url.toLowerCase()) !== -1) {
    return;
  }
  let parsedUrl;
  try {
    parsedUrl = new URL(url);
  } catch (e) {
    return;
  }
  if (parsedUrl.protocol === "javascript:") {
    warnOnce(component, `A javascript: URL was blocked as a security precaution. The URL was "${url}".`);
    throw new Error(`A javascript: URL was blocked as a security precaution.`);
  }
  return;
}

// node_modules/@cloudscape-design/components/internal/components/live-region/index.js
var import_react12 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/screenreader-only/index.js
var import_react11 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/screenreader-only/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/internal/components/screenreader-only/styles.scoped.css";
var styles_css_default4 = {
  "root": "awsui_root_xttbq_pgwjg_99"
};

// node_modules/@cloudscape-design/components/internal/components/screenreader-only/index.js
function ScreenreaderOnly(props) {
  return import_react11.default.createElement("span", Object.assign({}, props, { className: clsx_m_default(styles_css_default4.root, props.className) }));
}

// node_modules/@cloudscape-design/components/internal/components/live-region/styles.css.js
import "/home/a171157/personal-repos/deep-racer/community-contributions/deepracer-custom-console/new/node_modules/@cloudscape-design/components/internal/components/live-region/styles.scoped.css";
var styles_css_default5 = {
  "root": "awsui_root_3bgfn_im8v7_5"
};

// node_modules/@cloudscape-design/components/internal/components/live-region/index.js
var live_region_default = (0, import_react12.memo)(LiveRegion);
function LiveRegion(_a2) {
  var { assertive = false, delay = 10, visible = false, tagName: TagName = "span", children, id, source } = _a2, restProps = __rest(_a2, ["assertive", "delay", "visible", "tagName", "children", "id", "source"]);
  const sourceRef = (0, import_react12.useRef)(null);
  const targetRef = (0, import_react12.useRef)(null);
  (0, import_react12.useEffect)(() => {
    function getSourceContent() {
      if (source) {
        return source.map((item) => {
          if (!item) {
            return void 0;
          }
          if (typeof item === "string") {
            return item;
          }
          if (item.current) {
            return extractInnerText(item.current);
          }
        }).filter(Boolean).join(" ");
      }
      if (sourceRef.current) {
        return extractInnerText(sourceRef.current);
      }
    }
    function updateLiveRegion() {
      const sourceContent = getSourceContent();
      if (targetRef.current && sourceContent) {
        const targetContent = extractInnerText(targetRef.current);
        if (targetContent !== sourceContent) {
          targetRef.current.innerText = sourceContent;
        }
      }
    }
    let timeoutId;
    if (delay) {
      timeoutId = setTimeout(updateLiveRegion, delay);
    } else {
      updateLiveRegion();
    }
    return () => {
      if (timeoutId) {
        clearTimeout(timeoutId);
      }
    };
  });
  return import_react12.default.createElement(
    import_react12.default.Fragment,
    null,
    visible && !source && import_react12.default.createElement(TagName, { ref: sourceRef, id }, children),
    import_react12.default.createElement(
      ScreenreaderOnly,
      Object.assign({}, restProps, { className: clsx_m_default(styles_css_default5.root, restProps.className) }),
      !visible && !source && import_react12.default.createElement(TagName, { ref: sourceRef, "aria-hidden": "true" }, children),
      import_react12.default.createElement("span", { ref: targetRef, "aria-atomic": "true", "aria-live": assertive ? "assertive" : "polite" })
    )
  );
}
function extractInnerText(node) {
  return (node.innerText || "").replace(/\s+/g, " ").trim();
}

// node_modules/@cloudscape-design/components/internal/context/button-context.js
var import_react13 = __toESM(require_react());
var ButtonContext = (0, import_react13.createContext)({
  onClick: () => {
  }
});
function useButtonContext() {
  return (0, import_react13.useContext)(ButtonContext);
}

// node_modules/@cloudscape-design/components/internal/analytics/hooks/use-funnel.js
var import_react15 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/analytics/context/analytics-context.js
var import_react14 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/analytics/selectors.js
var DATA_ATTR_FUNNEL = "data-analytics-funnel";
var DATA_ATTR_FUNNEL_INTERACTION_ID = `${DATA_ATTR_FUNNEL}-interaction-id`;
var DATA_ATTR_FUNNEL_KEY = `${DATA_ATTR_FUNNEL}-key`;
var DATA_ATTR_FUNNEL_VALUE = `${DATA_ATTR_FUNNEL}-value`;
var DATA_ATTR_FUNNEL_STEP = `${DATA_ATTR_FUNNEL}-step`;
var DATA_ATTR_FUNNEL_SUBSTEP = `${DATA_ATTR_FUNNEL}-substep`;
var DATA_ATTR_FIELD_LABEL = "data-analytics-field-label";
var DATA_ATTR_FIELD_ERROR = "data-analytics-field-error";
var DATA_ATTR_ANALYTICS_ALERT = "data-analytics-alert";
var DATA_ATTR_ANALYTICS_FLASHBAR = "data-analytics-flashbar";
var FUNNEL_KEY_FUNNEL_NAME = "funnel-name";
var FUNNEL_KEY_STEP_NAME = "step-name";
var FUNNEL_KEY_SUBSTEP_NAME = "substep-name";
var getFunnelNameSelector = () => `[${DATA_ATTR_FUNNEL_KEY}="${FUNNEL_KEY_FUNNEL_NAME}"]`;
var getFunnelValueSelector = (value) => `[${DATA_ATTR_FUNNEL_VALUE}="${value}"]`;
var getSubStepAllSelector = () => `[${DATA_ATTR_FUNNEL_SUBSTEP}]`;
var getSubStepSelector = (subStepId) => `[${DATA_ATTR_FUNNEL_SUBSTEP}="${subStepId}"]`;
var getSubStepNameSelector = (subStepId) => [subStepId ? getSubStepSelector(subStepId) : "", `[${DATA_ATTR_FUNNEL_KEY}="${FUNNEL_KEY_SUBSTEP_NAME}"]`].join(" ");
var getFieldSlotSeletor = (id) => id ? `[id="${id}"]` : void 0;
var getNameFromSelector = (selector) => {
  var _a2, _b;
  return selector ? (_b = (_a2 = document.querySelector(selector)) === null || _a2 === void 0 ? void 0 : _a2.innerText) === null || _b === void 0 ? void 0 : _b.trim() : void 0;
};

// node_modules/@cloudscape-design/components/internal/analytics/context/analytics-context.js
var FunnelContext = (0, import_react14.createContext)({
  funnelInteractionId: void 0,
  funnelNameSelector: getFunnelNameSelector(),
  setFunnelInteractionId: () => {
  },
  funnelType: "single-page",
  optionalStepNumbers: [],
  totalFunnelSteps: 0,
  funnelSubmit: () => {
  },
  funnelCancel: () => {
  },
  submissionAttempt: 0,
  funnelNextOrSubmitAttempt: () => {
  },
  funnelState: { current: "default" },
  errorCount: { current: 0 },
  loadingButtonCount: { current: 0 },
  latestFocusCleanupFunction: { current: void 0 },
  isInFunnel: false,
  wizardCount: { current: 0 }
});
var FunnelStepContext = (0, import_react14.createContext)({
  stepNameSelector: "",
  stepNumber: 0,
  subStepCount: { current: 0 },
  isInStep: false,
  funnelInteractionId: void 0,
  onStepChange: () => {
  },
  subStepConfiguration: { current: /* @__PURE__ */ new Map() }
});
var FunnelSubStepContext = (0, import_react14.createContext)({
  subStepId: "",
  subStepSelector: "",
  subStepNameSelector: "",
  subStepRef: { current: null },
  isNestedSubStep: false,
  mousePressed: { current: false },
  isFocusedSubStep: { current: false },
  focusCleanupFunction: { current: void 0 }
});
var FunnelNameSelectorContext = (0, import_react14.createContext)(void 0);

// node_modules/@cloudscape-design/components/internal/analytics/index.js
var FunnelMetrics = {
  funnelStart() {
    return "";
  },
  funnelError() {
  },
  funnelComplete() {
  },
  funnelSuccessful() {
  },
  funnelCancelled() {
  },
  funnelChange() {
  },
  funnelStepStart() {
  },
  funnelStepComplete() {
  },
  funnelStepNavigation() {
  },
  funnelStepError() {
  },
  funnelStepChange() {
  },
  funnelSubStepStart() {
  },
  funnelSubStepComplete() {
  },
  funnelSubStepError() {
  },
  helpPanelInteracted() {
  },
  externalLinkInteracted() {
  }
};

// node_modules/@cloudscape-design/components/internal/utils/dom.js
var import_balanced_match = __toESM(require_balanced_match());

// node_modules/@cloudscape-design/components/internal/utils/calculate-once.js
function calculateOnce(callback) {
  let result = void 0;
  return () => {
    if (result === void 0) {
      result = callback();
    }
    return result;
  };
}

// node_modules/@cloudscape-design/components/internal/utils/dom.js
function findUpUntil2(node, callback) {
  let current = node;
  while (current && !callback(current)) {
    current = current.parentElement;
    while (current && !(current instanceof HTMLElement)) {
      current = current.parentElement;
    }
  }
  return current;
}
function supportsStickyPosition() {
  var _a2, _b, _c;
  if (typeof window === "undefined") {
    return false;
  }
  return (_c = (_b = (_a2 = window.CSS) === null || _a2 === void 0 ? void 0 : _a2.supports) === null || _b === void 0 ? void 0 : _b.call(_a2, "position", "sticky")) !== null && _c !== void 0 ? _c : false;
}
var supportsContainingBlockPositioning = calculateOnce(() => {
  const parent = document.createElement("div");
  parent.style.transform = "translateY(5px)";
  document.body.appendChild(parent);
  const child = document.createElement("div");
  child.style.position = "fixed";
  child.style.top = "0";
  parent.appendChild(child);
  const result = parent.getBoundingClientRect().top === child.getBoundingClientRect().top;
  document.body.removeChild(parent);
  return result;
});
function getContainingBlock(startElement) {
  if (!startElement.parentElement) {
    return null;
  }
  return supportsContainingBlockPositioning() ? findUpUntil2(startElement.parentElement, (element) => {
    const computedStyle = getComputedStyle(element);
    return !!computedStyle.transform && computedStyle.transform !== "none" || !!computedStyle.perspective && computedStyle.perspective !== "none";
  }) : null;
}
var cssVariableExpression = /--.+?\s*,\s*(.+)/;
function parseCssVariable(value) {
  var _a2, _b, _c;
  if ((_c = (_b = (_a2 = window.CSS) === null || _a2 === void 0 ? void 0 : _a2.supports) === null || _b === void 0 ? void 0 : _b.call(_a2, "color", "var(--dummy, #000)")) !== null && _c !== void 0 ? _c : false) {
    return value;
  }
  const varIndex = value.lastIndexOf("var(");
  if (varIndex === -1) {
    return value;
  }
  const expr = (0, import_balanced_match.default)("(", ")", value.substr(varIndex));
  if (!expr) {
    return value;
  }
  const match = expr.body.match(cssVariableExpression);
  return match ? match[1] : value;
}

// node_modules/@cloudscape-design/components/internal/utils/node-belongs.js
function nodeBelongs(container, target) {
  var _a2;
  if (!(target instanceof Node)) {
    return false;
  }
  const portal = findUpUntil2(target, (node) => node === container || node instanceof HTMLElement && !!node.dataset.awsuiReferrerId);
  if (portal && portal === container) {
    return true;
  }
  const referrer = portal instanceof HTMLElement ? document.getElementById((_a2 = portal.dataset.awsuiReferrerId) !== null && _a2 !== void 0 ? _a2 : "") : null;
  return referrer ? nodeContains(container, referrer) : nodeContains(container, target);
}

// node_modules/@cloudscape-design/components/internal/analytics/hooks/use-funnel.js
var useFunnelSubStep = () => {
  const context = (0, import_react15.useContext)(FunnelSubStepContext);
  const { funnelInteractionId, funnelState, latestFocusCleanupFunction } = useFunnel();
  const { stepNumber, stepNameSelector, subStepConfiguration } = useFunnelStep();
  const { instanceIdentifier, subStepId, subStepSelector, subStepNameSelector, subStepRef, isNestedSubStep, mousePressed, isFocusedSubStep, focusCleanupFunction } = context;
  if (isNestedSubStep) {
    return context;
  }
  const onFocus = (event) => __awaiter(void 0, void 0, void 0, function* () {
    var _a2, _b, _c, _d;
    const element = event.target;
    yield new Promise((r2) => setTimeout(r2, 1));
    if (document.activeElement !== element) {
      return;
    }
    if (isFocusedSubStep.current) {
      return;
    }
    isFocusedSubStep.current = true;
    if (funnelInteractionId && subStepId) {
      (_a2 = latestFocusCleanupFunction.current) === null || _a2 === void 0 ? void 0 : _a2.call(latestFocusCleanupFunction);
      const subStepName = getNameFromSelector(subStepNameSelector);
      const stepName = getNameFromSelector(stepNameSelector);
      const subStepNumber = (_d = (_c = (_b = subStepConfiguration.current) === null || _b === void 0 ? void 0 : _b.get(stepNumber)) === null || _c === void 0 ? void 0 : _c.find((step) => step.name === subStepName)) === null || _d === void 0 ? void 0 : _d.number;
      FunnelMetrics.funnelSubStepStart({
        instanceIdentifier,
        funnelInteractionId,
        subStepSelector,
        subStepNameSelector,
        subStepName,
        subStepNumber,
        stepNumber,
        stepName,
        stepNameSelector,
        subStepAllSelector: getSubStepAllSelector()
      });
      let cleanupFunctionHasBeenRun = false;
      focusCleanupFunction.current = () => {
        var _a3, _b2, _c2;
        if (cleanupFunctionHasBeenRun) {
          return;
        }
        cleanupFunctionHasBeenRun = true;
        const subStepNumber2 = (_c2 = (_b2 = (_a3 = subStepConfiguration.current) === null || _a3 === void 0 ? void 0 : _a3.get(stepNumber)) === null || _b2 === void 0 ? void 0 : _b2.find((s) => s.name === subStepName)) === null || _c2 === void 0 ? void 0 : _c2.number;
        if (funnelState.current !== "cancelled") {
          FunnelMetrics.funnelSubStepComplete({
            instanceIdentifier,
            funnelInteractionId,
            subStepSelector,
            subStepNameSelector,
            subStepName,
            subStepNumber: subStepNumber2,
            stepNumber,
            stepName,
            stepNameSelector,
            subStepAllSelector: getSubStepAllSelector()
          });
        }
      };
      latestFocusCleanupFunction.current = focusCleanupFunction.current;
    }
  });
  const onBlur = (event) => {
    var _a2;
    if (mousePressed.current) {
      return;
    }
    if (!subStepRef.current || !event.relatedTarget || !nodeBelongs(subStepRef.current, event.relatedTarget)) {
      isFocusedSubStep.current = false;
      if (funnelInteractionId && subStepId && funnelState.current !== "cancelled") {
        (_a2 = focusCleanupFunction.current) === null || _a2 === void 0 ? void 0 : _a2.call(focusCleanupFunction);
      }
    }
  };
  const funnelSubStepProps = funnelInteractionId ? {
    [DATA_ATTR_FUNNEL_SUBSTEP]: subStepId,
    onFocus,
    onBlur
  } : {};
  return Object.assign({ funnelSubStepProps }, context);
};
var useFunnelStep = () => {
  const context = (0, import_react15.useContext)(FunnelStepContext);
  return context;
};
var useFunnel = () => {
  const context = (0, import_react15.useContext)(FunnelContext);
  const funnelProps = context.funnelInteractionId ? {
    [DATA_ATTR_FUNNEL_INTERACTION_ID]: context.funnelInteractionId
  } : {};
  return Object.assign({ funnelProps }, context);
};
var useFunnelNameSelector = () => {
  const context = (0, import_react15.useContext)(FunnelNameSelectorContext);
  return context;
};

// node_modules/@cloudscape-design/components/internal/hooks/use-unique-id/index.js
var import_react16 = __toESM(require_react());
var _a;
var counter = 0;
var useIdFallback = () => {
  const idRef = (0, import_react16.useRef)(null);
  if (!idRef.current) {
    idRef.current = `${counter++}-${Date.now()}-${Math.round(Math.random() * 1e4)}`;
  }
  return idRef.current;
};
var useId = (_a = import_react16.default.useId) !== null && _a !== void 0 ? _a : useIdFallback;
function useUniqueId(prefix) {
  return `${prefix ? prefix : ""}` + useId();
}

// node_modules/@cloudscape-design/components/internal/hooks/use-performance-marks.js
var import_react18 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/use-effect-on-update.js
var import_react17 = __toESM(require_react());
function useEffectOnUpdate(callback, deps) {
  const isFirstRender = (0, import_react17.useRef)(true);
  (0, import_react17.useEffect)(() => {
    if (isFirstRender.current) {
      isFirstRender.current = false;
    } else {
      return callback();
    }
  }, deps);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-performance-marks.js
function usePerformanceMarks(name, enabled, elementRef, getDetails, dependencies) {
  const id = useUniqueId();
  (0, import_react18.useEffect)(() => {
    if (!enabled || !elementRef.current) {
      return;
    }
    const elementVisible = elementRef.current.offsetWidth > 0 && elementRef.current.offsetHeight > 0 && getComputedStyle(elementRef.current).visibility !== "hidden";
    if (!elementVisible) {
      return;
    }
    const renderedMarkName = `${name}Rendered`;
    performance.mark(renderedMarkName, {
      detail: Object.assign({ source: "awsui", instanceIdentifier: id }, getDetails())
    });
  }, []);
  useEffectOnUpdate(() => {
    if (!enabled || !elementRef.current) {
      return;
    }
    const elementVisible = elementRef.current.offsetWidth > 0 && elementRef.current.offsetHeight > 0 && getComputedStyle(elementRef.current).visibility !== "hidden";
    if (!elementVisible) {
      return;
    }
    const updatedMarkName = `${name}Updated`;
    performance.mark(updatedMarkName, {
      detail: Object.assign({ source: "awsui", instanceIdentifier: id }, getDetails())
    });
  }, dependencies);
}

// node_modules/@cloudscape-design/components/internal/context/single-tab-stop-navigation-context.js
var import_react19 = __toESM(require_react());
var defaultValue = {
  navigationActive: false,
  registerFocusable: () => () => {
  }
};
var SingleTabStopNavigationContext = (0, import_react19.createContext)(defaultValue);
function useSingleTabStopNavigation(focusable, options) {
  var _a2;
  const { navigationActive: contextNavigationActive, registerFocusable } = (0, import_react19.useContext)(SingleTabStopNavigationContext);
  const [focusTargetActive, setFocusTargetActive] = (0, import_react19.useState)(false);
  const navigationDisabled = (options === null || options === void 0 ? void 0 : options.tabIndex) && (options === null || options === void 0 ? void 0 : options.tabIndex) < 0;
  const navigationActive = contextNavigationActive && !navigationDisabled;
  (0, import_react19.useEffect)(() => {
    if (navigationActive && focusable && focusable.current) {
      const unregister = registerFocusable(focusable.current, (isFocusable) => setFocusTargetActive(isFocusable));
      return () => unregister();
    }
  });
  let tabIndex = options === null || options === void 0 ? void 0 : options.tabIndex;
  if (navigationActive) {
    tabIndex = !focusTargetActive ? -1 : (_a2 = options === null || options === void 0 ? void 0 : options.tabIndex) !== null && _a2 !== void 0 ? _a2 : 0;
  }
  return { navigationActive, tabIndex };
}

// node_modules/@cloudscape-design/components/button/internal.js
var InternalButton = import_react20.default.forwardRef((_a2, ref) => {
  var { children, iconName, __iconClass, onClick, onFollow, iconAlign = "left", iconUrl, iconSvg, iconAlt, variant = "normal", loading = false, loadingText, disabled = false, wrapText = true, href, target, rel, download, formAction = "submit", ariaLabel, ariaDescribedby, ariaExpanded, ariaControls, fullWidth, badge, __nativeAttributes, __internalRootRef = null, __focusable = false } = _a2, props = __rest(_a2, ["children", "iconName", "__iconClass", "onClick", "onFollow", "iconAlign", "iconUrl", "iconSvg", "iconAlt", "variant", "loading", "loadingText", "disabled", "wrapText", "href", "target", "rel", "download", "formAction", "ariaLabel", "ariaDescribedby", "ariaExpanded", "ariaControls", "fullWidth", "badge", "__nativeAttributes", "__internalRootRef", "__focusable"]);
  checkSafeUrl("Button", href);
  const isAnchor = Boolean(href);
  const isNotInteractive = loading || disabled;
  const hasAriaDisabled = loading && !disabled || disabled && __focusable;
  const shouldHaveContent = children && ["icon", "inline-icon", "flashbar-icon", "modal-dismiss"].indexOf(variant) === -1;
  const buttonRef = (0, import_react20.useRef)(null);
  useForwardFocus(ref, buttonRef);
  const buttonContext = useButtonContext();
  const uniqueId = useUniqueId("button");
  const { funnelInteractionId } = useFunnel();
  const { stepNumber, stepNameSelector } = useFunnelStep();
  const { subStepSelector, subStepNameSelector } = useFunnelSubStep();
  usePerformanceMarks("primaryButton", variant === "primary", buttonRef, () => {
    var _a3;
    return {
      loading,
      disabled,
      text: (_a3 = buttonRef.current) === null || _a3 === void 0 ? void 0 : _a3.innerText
    };
  }, [loading, disabled]);
  const handleClick = (event) => {
    if (isNotInteractive) {
      return event.preventDefault();
    }
    if (isAnchor && isPlainLeftClick(event)) {
      fireCancelableEvent(onFollow, { href, target }, event);
      if ((iconName === "external" || target === "_blank") && funnelInteractionId) {
        const stepName = getNameFromSelector(stepNameSelector);
        const subStepName = getNameFromSelector(subStepNameSelector);
        FunnelMetrics.externalLinkInteracted({
          funnelInteractionId,
          stepNumber,
          stepName,
          stepNameSelector,
          subStepSelector,
          subStepName,
          subStepNameSelector,
          elementSelector: getFunnelValueSelector(uniqueId),
          subStepAllSelector: getSubStepAllSelector()
        });
      }
    }
    const { altKey, button, ctrlKey, metaKey, shiftKey } = event;
    fireCancelableEvent(onClick, { altKey, button, ctrlKey, metaKey, shiftKey }, event);
    buttonContext.onClick({ variant });
  };
  const buttonClass = clsx_m_default(props.className, styles_css_default.button, styles_css_default[`variant-${variant}`], {
    [styles_css_default.disabled]: isNotInteractive,
    [styles_css_default["button-no-wrap"]]: !wrapText,
    [styles_css_default["button-no-text"]]: !shouldHaveContent,
    [styles_css_default["full-width"]]: shouldHaveContent && fullWidth
  });
  const explicitTabIndex = __nativeAttributes && "tabIndex" in __nativeAttributes ? __nativeAttributes.tabIndex : void 0;
  const { tabIndex } = useSingleTabStopNavigation(buttonRef, {
    tabIndex: isAnchor && isNotInteractive ? -1 : explicitTabIndex
  });
  const buttonProps = Object.assign(Object.assign(Object.assign({}, props), __nativeAttributes), {
    tabIndex,
    // https://github.com/microsoft/TypeScript/issues/36659
    ref: useMergeRefs(buttonRef, __internalRootRef),
    "aria-label": ariaLabel,
    "aria-describedby": ariaDescribedby,
    "aria-expanded": ariaExpanded,
    "aria-controls": ariaControls,
    // add ariaLabel as `title` as visible hint text
    title: ariaLabel,
    className: buttonClass,
    onClick: handleClick,
    [DATA_ATTR_FUNNEL_VALUE]: uniqueId
  });
  const iconProps = {
    loading,
    iconName,
    iconAlign,
    iconUrl,
    iconSvg,
    iconAlt,
    variant,
    badge,
    iconClass: __iconClass,
    iconSize: variant === "modal-dismiss" ? "medium" : "normal"
  };
  const buttonContent = import_react20.default.createElement(
    import_react20.default.Fragment,
    null,
    import_react20.default.createElement(LeftIcon, Object.assign({}, iconProps)),
    shouldHaveContent && import_react20.default.createElement("span", { className: styles_css_default.content }, children),
    import_react20.default.createElement(RightIcon, Object.assign({}, iconProps))
  );
  const { loadingButtonCount } = useFunnel();
  (0, import_react20.useEffect)(() => {
    if (loading) {
      loadingButtonCount.current++;
      return () => {
        loadingButtonCount.current--;
      };
    }
  }, [loading, loadingButtonCount]);
  if (isAnchor) {
    return (
      // https://github.com/yannickcr/eslint-plugin-react/issues/2962
      // eslint-disable-next-line react/jsx-no-target-blank
      import_react20.default.createElement(
        import_react20.default.Fragment,
        null,
        import_react20.default.createElement("a", Object.assign({}, buttonProps, {
          href,
          target,
          // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target
          rel: rel !== null && rel !== void 0 ? rel : target === "_blank" ? "noopener noreferrer" : void 0,
          "aria-disabled": isNotInteractive ? true : void 0,
          download
        }), buttonContent),
        loading && loadingText && import_react20.default.createElement(live_region_default, null, loadingText)
      )
    );
  }
  return import_react20.default.createElement(
    import_react20.default.Fragment,
    null,
    import_react20.default.createElement("button", Object.assign({}, buttonProps, { type: formAction === "none" ? "button" : "submit", disabled: disabled && !__focusable, "aria-disabled": hasAriaDisabled ? true : void 0 }), buttonContent),
    loading && loadingText && import_react20.default.createElement(live_region_default, null, loadingText)
  );
});
var internal_default2 = InternalButton;

// node_modules/@cloudscape-design/components/internal/utils/apply-display-name.js
function applyDisplayName(component, displayName) {
  component.displayName = displayName;
}

// node_modules/@cloudscape-design/components/internal/hooks/use-telemetry/index.js
function useTelemetry(componentName, config) {
  const theme2 = useVisualRefresh() ? "vr" : THEME;
  useComponentMetrics(componentName, { packageSource: PACKAGE_SOURCE, packageVersion: PACKAGE_VERSION, theme: theme2 }, config);
}

// node_modules/@cloudscape-design/components/internal/hooks/focus-visible/index.js
var import_react21 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/keycode.js
var KeyCode;
(function(KeyCode2) {
  KeyCode2[KeyCode2["pageUp"] = 33] = "pageUp";
  KeyCode2[KeyCode2["pageDown"] = 34] = "pageDown";
  KeyCode2[KeyCode2["end"] = 35] = "end";
  KeyCode2[KeyCode2["home"] = 36] = "home";
  KeyCode2[KeyCode2["backspace"] = 8] = "backspace";
  KeyCode2[KeyCode2["space"] = 32] = "space";
  KeyCode2[KeyCode2["down"] = 40] = "down";
  KeyCode2[KeyCode2["left"] = 37] = "left";
  KeyCode2[KeyCode2["right"] = 39] = "right";
  KeyCode2[KeyCode2["up"] = 38] = "up";
  KeyCode2[KeyCode2["escape"] = 27] = "escape";
  KeyCode2[KeyCode2["enter"] = 13] = "enter";
  KeyCode2[KeyCode2["tab"] = 9] = "tab";
  KeyCode2[KeyCode2["shift"] = 16] = "shift";
  KeyCode2[KeyCode2["control"] = 17] = "control";
  KeyCode2[KeyCode2["alt"] = 18] = "alt";
  KeyCode2[KeyCode2["meta"] = 91] = "meta";
})(KeyCode || (KeyCode = {}));

// node_modules/@cloudscape-design/components/internal/hooks/focus-visible/index.js
function isModifierKey(event) {
  return [KeyCode.shift, KeyCode.alt, KeyCode.control, KeyCode.meta].indexOf(event.keyCode) > -1;
}
function setIsKeyboard(active) {
  if (active) {
    document.body.setAttribute("data-awsui-focus-visible", "true");
  } else {
    document.body.removeAttribute("data-awsui-focus-visible");
  }
}
function handleMousedown() {
  return setIsKeyboard(false);
}
function handleKeydown(event) {
  if (!isModifierKey(event)) {
    setIsKeyboard(true);
  }
}
var componentsCount = 0;
function addListeners() {
  document.addEventListener("mousedown", handleMousedown);
  document.addEventListener("keydown", handleKeydown);
}
function removeListeners() {
  document.removeEventListener("mousedown", handleMousedown);
  document.removeEventListener("keydown", handleKeydown);
}
function useFocusVisible() {
  (0, import_react21.useEffect)(() => {
    if (componentsCount === 0) {
      addListeners();
    }
    componentsCount++;
    return () => {
      componentsCount--;
      if (componentsCount === 0) {
        removeListeners();
      }
    };
  }, []);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-base-component/index.js
function useBaseComponent(componentName, config, analyticsMetadata) {
  useTelemetry(componentName, config);
  useFocusVisible();
  const elementRef = useComponentMetadata(componentName, PACKAGE_VERSION, Object.assign({}, analyticsMetadata));
  return { __internalRootRef: elementRef };
}

// node_modules/@cloudscape-design/components/button/index.js
var Button = import_react22.default.forwardRef((_a2, ref) => {
  var { children, iconName, iconAlign = "left", iconUrl, iconSvg, iconAlt, variant = "normal", loading = false, loadingText, disabled = false, wrapText = true, href, target, rel, download, formAction = "submit", ariaLabel, ariaDescribedby, onClick, onFollow, ariaExpanded, ariaControls, fullWidth, form } = _a2, props = __rest(_a2, ["children", "iconName", "iconAlign", "iconUrl", "iconSvg", "iconAlt", "variant", "loading", "loadingText", "disabled", "wrapText", "href", "target", "rel", "download", "formAction", "ariaLabel", "ariaDescribedby", "onClick", "onFollow", "ariaExpanded", "ariaControls", "fullWidth", "form"]);
  const baseComponentProps = useBaseComponent("Button", {
    props: { formAction, fullWidth, iconAlign, iconName, rel, target, variant, wrapText }
  });
  const baseProps = getBaseProps(props);
  return import_react22.default.createElement(InternalButton, Object.assign({}, baseProps, baseComponentProps, { ref, iconName, iconAlign, iconUrl, iconSvg, iconAlt, variant, loading, loadingText, disabled, wrapText, href, target, rel, download, formAction, ariaLabel, ariaDescribedby, onClick, onFollow, ariaExpanded, ariaControls, fullWidth, form }), children);
});
applyDisplayName(Button, "Button");
var button_default = Button;

export {
  __rest,
  __awaiter,
  useComponentMetadata,
  Metrics,
  ResizeObserver,
  useStableCallback,
  useResizeObserver,
  createSingletonHandler,
  createSingletonState,
  findUpUntil,
  nodeContains,
  warnOnce,
  isMotionDisabled,
  useCurrentMode,
  useDensityMode,
  useReducedMotion,
  PACKAGE_SOURCE,
  PACKAGE_VERSION,
  getBaseProps,
  getAnalyticsMetadataProps,
  clsx_m_default,
  fireNonCancelableEvent,
  fireCancelableEvent,
  fireKeyboardEvent,
  hasModifierKeys,
  isPlainLeftClick,
  useForwardFocus,
  useMergeRefs,
  useVisualRefresh,
  internal_default,
  InternalSpinner,
  checkSafeUrl,
  ScreenreaderOnly,
  live_region_default,
  ButtonContext,
  DATA_ATTR_FUNNEL_KEY,
  DATA_ATTR_FUNNEL_VALUE,
  DATA_ATTR_FUNNEL_STEP,
  DATA_ATTR_FIELD_LABEL,
  DATA_ATTR_FIELD_ERROR,
  DATA_ATTR_ANALYTICS_ALERT,
  DATA_ATTR_ANALYTICS_FLASHBAR,
  FUNNEL_KEY_FUNNEL_NAME,
  FUNNEL_KEY_STEP_NAME,
  FUNNEL_KEY_SUBSTEP_NAME,
  getFunnelNameSelector,
  getFunnelValueSelector,
  getSubStepAllSelector,
  getSubStepSelector,
  getSubStepNameSelector,
  getFieldSlotSeletor,
  getNameFromSelector,
  FunnelContext,
  FunnelStepContext,
  FunnelSubStepContext,
  FunnelNameSelectorContext,
  FunnelMetrics,
  calculateOnce,
  findUpUntil2,
  supportsStickyPosition,
  getContainingBlock,
  parseCssVariable,
  nodeBelongs,
  useFunnelSubStep,
  useFunnelStep,
  useFunnel,
  useFunnelNameSelector,
  useUniqueId,
  useEffectOnUpdate,
  usePerformanceMarks,
  defaultValue,
  SingleTabStopNavigationContext,
  useSingleTabStopNavigation,
  InternalButton,
  internal_default2,
  applyDisplayName,
  useTelemetry,
  KeyCode,
  isModifierKey,
  useBaseComponent,
  button_default
};
//# sourceMappingURL=chunk-OSVEXHCO.js.map
