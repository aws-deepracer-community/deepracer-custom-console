{
  "version": 3,
  "sources": ["../../src/internal/utils/strings/join-strings.ts", "../../src/internal/utils/strings/pad-left-zeros.ts", "../../src/status-indicator/internal.tsx", "../../@cloudscape-design/components/status-indicator/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Joins strings with a whitespace, discarding empty strings. Useful to combine multiple aria-labels.\n */\nexport function joinStrings(...strings: Array<string | undefined>): string | undefined {\n  return strings.filter(Boolean).join(' ') || undefined;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Prefixes given text with zeros until it reaches the target length.\n */\nexport function padLeftZeros(text: string, length: number): string {\n  while (text.length < length) {\n    text = `0${text}`;\n  }\n  return text;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { IconProps } from '../icon/interfaces';\nimport InternalIcon from '../icon/internal';\nimport { BaseComponentProps, getBaseProps } from '../internal/base-component';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { SomeRequired } from '../internal/types';\nimport InternalSpinner from '../spinner/internal';\n\nimport styles from './styles.css.js';\n\nconst typeToIcon: (size: IconProps.Size) => Record<StatusIndicatorProps.Type, JSX.Element> = size => ({\n  error: <InternalIcon name=\"status-negative\" size={size} />,\n  warning: <InternalIcon name=\"status-warning\" size={size} />,\n  success: <InternalIcon name=\"status-positive\" size={size} />,\n  info: <InternalIcon name=\"status-info\" size={size} />,\n  stopped: <InternalIcon name=\"status-stopped\" size={size} />,\n  pending: <InternalIcon name=\"status-pending\" size={size} />,\n  'in-progress': <InternalIcon name=\"status-in-progress\" size={size} />,\n  loading: <InternalSpinner />,\n});\n\nexport interface StatusIndicatorProps extends BaseComponentProps {\n  /**\n   * Specifies the status type.\n   */\n  type?: StatusIndicatorProps.Type;\n  /**\n   * A text fragment that communicates the status.\n   */\n  children?: React.ReactNode;\n  /**\n   * Specifies an `aria-label` for the icon. If the status text alone does not fully describe the status,\n   * use this to communicate additional context.\n   */\n  iconAriaLabel?: string;\n  /**\n   * Specifies an override for the status indicator color.\n   */\n  colorOverride?: StatusIndicatorProps.Color;\n  /**\n   * Specifies if the text content should wrap. If you set it to false, it prevents the text from wrapping\n   * and truncates it with an ellipsis.\n   */\n  wrapText?: boolean;\n}\n\nexport interface InternalStatusIndicatorProps\n  extends SomeRequired<StatusIndicatorProps, 'type'>,\n    InternalBaseComponentProps {\n  /**\n   * Play an animation on the error icon when first rendered\n   */\n  __animate?: boolean;\n\n  /**\n   * Size of icon.\n   */\n  __size?: IconProps.Size;\n\n  /**\n   * The CSS behavior of the status indicator container element.\n   */\n  __display?: 'inline' | 'inline-block';\n}\n\nexport namespace StatusIndicatorProps {\n  // Why not enums? Explained there\n  // https://stackoverflow.com/questions/52393730/typescript-string-literal-union-type-from-enum\n  export type Type = 'error' | 'warning' | 'success' | 'info' | 'stopped' | 'pending' | 'in-progress' | 'loading';\n  export type Color = 'blue' | 'grey' | 'green' | 'red' | 'yellow';\n}\n\nexport default function StatusIndicator({\n  type,\n  children,\n  iconAriaLabel,\n  colorOverride,\n  wrapText = true,\n  __animate = false,\n  __internalRootRef,\n  __size = 'normal',\n  __display = 'inline-block',\n  ...rest\n}: InternalStatusIndicatorProps) {\n  const baseProps = getBaseProps(rest);\n  return (\n    <span\n      {...baseProps}\n      className={clsx(\n        styles.root,\n        styles[`status-${type}`],\n        {\n          [styles[`color-override-${colorOverride}`]]: colorOverride,\n        },\n        baseProps.className\n      )}\n      ref={__internalRootRef}\n    >\n      <span\n        className={clsx(\n          styles.container,\n          styles[`display-${__display}`],\n          wrapText === false && styles['overflow-ellipsis'],\n          __animate && styles['container-fade-in']\n        )}\n      >\n        <span\n          className={clsx(styles.icon, __animate && styles['icon-shake'])}\n          aria-label={iconAriaLabel}\n          role={iconAriaLabel ? 'img' : undefined}\n        >\n          {typeToIcon(__size)[type]}\n          {__display === 'inline' && <>&nbsp;</>}\n        </span>\n        {children}\n      </span>\n    </span>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"icon-shake\": \"awsui_icon-shake_1cbgc_1n36j_153\",\n  \"awsui-motion-shake-horizontally\": \"awsui_awsui-motion-shake-horizontally_1cbgc_1n36j_1\",\n  \"container-fade-in\": \"awsui_container-fade-in_1cbgc_1n36j_181\",\n  \"awsui-motion-fade-in-0\": \"awsui_awsui-motion-fade-in-0_1cbgc_1n36j_1\",\n  \"root\": \"awsui_root_1cbgc_1n36j_203\",\n  \"status-error\": \"awsui_status-error_1cbgc_1n36j_212\",\n  \"status-warning\": \"awsui_status-warning_1cbgc_1n36j_215\",\n  \"status-success\": \"awsui_status-success_1cbgc_1n36j_218\",\n  \"status-info\": \"awsui_status-info_1cbgc_1n36j_221\",\n  \"status-stopped\": \"awsui_status-stopped_1cbgc_1n36j_224\",\n  \"status-pending\": \"awsui_status-pending_1cbgc_1n36j_227\",\n  \"status-in-progress\": \"awsui_status-in-progress_1cbgc_1n36j_230\",\n  \"status-loading\": \"awsui_status-loading_1cbgc_1n36j_233\",\n  \"color-override-red\": \"awsui_color-override-red_1cbgc_1n36j_236\",\n  \"color-override-grey\": \"awsui_color-override-grey_1cbgc_1n36j_239\",\n  \"color-override-blue\": \"awsui_color-override-blue_1cbgc_1n36j_242\",\n  \"color-override-green\": \"awsui_color-override-green_1cbgc_1n36j_245\",\n  \"color-override-yellow\": \"awsui_color-override-yellow_1cbgc_1n36j_248\",\n  \"container\": \"awsui_container_1cbgc_1n36j_181\",\n  \"display-inline\": \"awsui_display-inline_1cbgc_1n36j_252\",\n  \"icon\": \"awsui_icon_1cbgc_1n36j_153\",\n  \"display-inline-block\": \"awsui_display-inline-block_1cbgc_1n36j_260\",\n  \"overflow-ellipsis\": \"awsui_overflow-ellipsis_1cbgc_1n36j_269\"\n};\n  "],
  "mappings": ";;;;;;;;;;;;;;;;;AAMM,SAAU,eAAe,SAAkC;AAC/D,SAAO,QAAQ,OAAO,OAAO,EAAE,KAAK,GAAG,KAAK;AAC9C;;;ACFM,SAAU,aAAa,MAAc,QAAc;AACvD,SAAO,KAAK,SAAS,QAAQ;AAC3B,WAAO,IAAI,IAAI;;AAEjB,SAAO;AACT;;;ACTA,mBAAkB;;;ACDd,OAAO;AACP,IAAO,qBAAQ;AAAA,EACjB,cAAc;AAAA,EACd,mCAAmC;AAAA,EACnC,qBAAqB;AAAA,EACrB,0BAA0B;AAAA,EAC1B,QAAQ;AAAA,EACR,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,sBAAsB;AAAA,EACtB,kBAAkB;AAAA,EAClB,sBAAsB;AAAA,EACtB,uBAAuB;AAAA,EACvB,uBAAuB;AAAA,EACvB,wBAAwB;AAAA,EACxB,yBAAyB;AAAA,EACzB,aAAa;AAAA,EACb,kBAAkB;AAAA,EAClB,QAAQ;AAAA,EACR,wBAAwB;AAAA,EACxB,qBAAqB;AACvB;;;ADZA,IAAM,aAAuF,WAAS;EACpG,OAAO,aAAAA,QAAA,cAAC,kBAAY,EAAC,MAAK,mBAAkB,KAAU,CAAA;EACtD,SAAS,aAAAA,QAAA,cAAC,kBAAY,EAAC,MAAK,kBAAiB,KAAU,CAAA;EACvD,SAAS,aAAAA,QAAA,cAAC,kBAAY,EAAC,MAAK,mBAAkB,KAAU,CAAA;EACxD,MAAM,aAAAA,QAAA,cAAC,kBAAY,EAAC,MAAK,eAAc,KAAU,CAAA;EACjD,SAAS,aAAAA,QAAA,cAAC,kBAAY,EAAC,MAAK,kBAAiB,KAAU,CAAA;EACvD,SAAS,aAAAA,QAAA,cAAC,kBAAY,EAAC,MAAK,kBAAiB,KAAU,CAAA;EACvD,eAAe,aAAAA,QAAA,cAAC,kBAAY,EAAC,MAAK,sBAAqB,KAAU,CAAA;EACjE,SAAS,aAAAA,QAAA,cAAC,iBAAe,IAAA;;AAsDb,SAAP,gBAAiC,IAWT;MAXS,EACtC,MACA,UACA,eACA,eACA,WAAW,MACX,YAAY,OACZ,mBACA,SAAS,UACT,YAAY,eAAc,IAAA,IACvB,OAAI,OAAA,IAV+B,CAAA,QAAA,YAAA,iBAAA,iBAAA,YAAA,aAAA,qBAAA,UAAA,WAAA,CAWvC;AACC,QAAM,YAAY,aAAa,IAAI;AACnC,SACE,aAAAA,QAAA;IAAA;IAAA,OAAA,OAAA,CAAA,GACM,WAAS,EACb,WAAW,eACT,mBAAO,MACP,mBAAO,UAAU,IAAI,EAAE,GACvB;MACE,CAAC,mBAAO,kBAAkB,aAAa,EAAE,CAAC,GAAG;OAE/C,UAAU,SAAS,GAErB,KAAK,kBAAiB,CAAA;IAEtB,aAAAA,QAAA;MAAA;MAAA,EACE,WAAW,eACT,mBAAO,WACP,mBAAO,WAAW,SAAS,EAAE,GAC7B,aAAa,SAAS,mBAAO,mBAAmB,GAChD,aAAa,mBAAO,mBAAmB,CAAC,EACzC;MAED,aAAAA,QAAA;QAAA;QAAA,EACE,WAAW,eAAK,mBAAO,MAAM,aAAa,mBAAO,YAAY,CAAC,GAAC,cACnD,eACZ,MAAM,gBAAgB,QAAQ,OAAS;QAEtC,WAAW,MAAM,EAAE,IAAI;QACvB,cAAc,YAAY,aAAAA,QAAA,cAAA,aAAAA,QAAA,UAAA,MAAA,GAAA;MAAW;MAEvC;IAAQ;EACJ;AAGb;",
  "names": ["React"]
}
