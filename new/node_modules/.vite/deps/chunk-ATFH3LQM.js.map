{
  "version": 3,
  "sources": ["../../src/internal/hooks/use-mobile/index.ts", "../../src/container/use-sticky-header.ts", "../../src/internal/context/app-layout-context.ts", "../../src/internal/utils/scrollable-containers.ts", "../../src/internal/generated/custom-css-properties/index.ts", "../../@cloudscape-design/components/header/styles.css.js", "../../src/internal/context/collection-label-context.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createSingletonState } from '@cloudscape-design/component-toolkit/internal';\nimport { getMatchingBreakpoint, mobileBreakpoint } from '../../breakpoints';\n\nfunction getIsMobile() {\n  if (typeof window === 'undefined') {\n    // assume desktop in server-rendering\n    return false;\n  }\n\n  if (window.matchMedia) {\n    /**\n     * Some browsers include the scrollbar width in their media query calculations, but\n     * some browsers don't. Thus we can't use `window.innerWidth` or\n     * `document.documentElement.clientWidth` to get a very accurate result (since we\n     * wouldn't know which one of them to use).\n     * Instead, we use the media query here in JS too.\n     */\n    return window.matchMedia(`(max-width: ${mobileBreakpoint}px)`).matches;\n  }\n\n  return getMatchingBreakpoint(window.innerWidth, ['xs']) !== 'xs';\n}\n\nexport const useMobile = createSingletonState<boolean>({\n  initialState: () => getIsMobile(),\n  factory: handler => {\n    const listener = () => handler(getIsMobile());\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  },\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RefObject, useState, useLayoutEffect, useCallback, useEffect, createContext } from 'react';\nimport { useAppLayoutContext } from '../internal/context/app-layout-context';\nimport { findUpUntil, supportsStickyPosition } from '../internal/utils/dom';\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport customCssProps from '../internal/generated/custom-css-properties';\nimport { useMobile } from '../internal/hooks/use-mobile';\ninterface StickyHeaderContextProps {\n  isStuck: boolean;\n}\n\ninterface ComputeOffsetProps {\n  isMobile: boolean;\n  isVisualRefresh: boolean;\n  customCssProps: Record<string, string>;\n  __stickyOffset?: number;\n  __mobileStickyOffset?: number;\n  mobileBarHeight?: number;\n  stickyOffsetTop: number;\n  hasInnerOverflowParents: boolean;\n}\n\nexport function computeOffset({\n  isMobile,\n  isVisualRefresh,\n  customCssProps,\n  __stickyOffset,\n  __mobileStickyOffset,\n  mobileBarHeight = 0,\n  stickyOffsetTop,\n  hasInnerOverflowParents,\n}: ComputeOffsetProps) {\n  const effectiveStickyOffset = __stickyOffset ?? (hasInnerOverflowParents ? 0 : stickyOffsetTop);\n  /**\n   * The AppLayout refactor removed the need for passing the sticky offset in px all the time through the\n   * AppLayoutDomContext provider because that information already exists on the DOM in a custom property\n   * on the Layout subcomponent. Thus, if the Container header is sticky, we are in Visual Refresh and use\n   * body scroll then we will use that property. When a component is used outside AppLayout, we fall back\n   * to the default offset calculated in AppLayoutDomContext.\n   */\n  let computedOffset = `${effectiveStickyOffset}px`;\n  if (isMobile) {\n    // This mobile offset is only relevant for full page tables in the mobile viewport.\n    // It is obtained by the sum of stickyOffsetTop (AppLayout header height), mobileBarHeight (AppLayout mobile bar height) and\n    // __stickyOffset (value of the stickyHeaderVerticalOffset, set by users), from which we subtract __mobileStickyOffset (which is the table tools header height).\n\n    // Classic offset is calculated using the AppLayout context\n    const classicOffset = `${\n      stickyOffsetTop + mobileBarHeight + (__stickyOffset ?? 0) - (__mobileStickyOffset ?? 0)\n    }px`;\n\n    // VR offset is calculated using CSS custom properties\n    const visualRefreshOffset = `calc(var(${customCssProps.offsetTop}, 0px) + var(${\n      customCssProps.mobileBarHeight\n    }, 0px) + ${(__stickyOffset ?? 0) - (__mobileStickyOffset ?? 0)}px)`;\n\n    computedOffset = isVisualRefresh ? visualRefreshOffset : classicOffset;\n  } else if (isVisualRefresh && !hasInnerOverflowParents) {\n    computedOffset = `var(${customCssProps.offsetTopWithNotifications}, ${computedOffset})`;\n  }\n  return computedOffset;\n}\n\nexport const StickyHeaderContext = createContext<StickyHeaderContextProps>({\n  isStuck: false,\n});\n\nexport const useStickyHeader = (\n  rootRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  __stickyHeader?: boolean,\n  __stickyOffset?: number,\n  __mobileStickyOffset?: number,\n  __disableMobile = true\n) => {\n  const isMobile = useMobile();\n  // We reach into AppLayoutContext in case sticky header needs to be offset down by the height\n  // of other sticky elements positioned on top of the view.\n  const { stickyOffsetTop, mobileBarHeight } = useAppLayoutContext();\n  const disableSticky = isMobile && __disableMobile;\n  const isSticky = supportsStickyPosition() && !disableSticky && !!__stickyHeader;\n  const isVisualRefresh = useVisualRefresh();\n\n  // If it has overflow parents inside the app layout, we shouldn't apply a sticky offset.\n  const [hasInnerOverflowParents, setHasInnerOverflowParents] = useState(false);\n  const [isStuck, setIsStuck] = useState(false);\n  useLayoutEffect(() => {\n    if (rootRef.current) {\n      const overflowParents = getOverflowParents(rootRef.current);\n      const mainElement = findUpUntil(rootRef.current, elem => elem.tagName === 'MAIN');\n      // In both versions of the app layout, the scrolling element for disableBodyScroll\n      // is the <main>. If the closest overflow parent is also the closest <main> and we have\n      // offset values, it's safe to assume that it's the app layout scroll root and we\n      // should stop there.\n      setHasInnerOverflowParents(overflowParents.length > 0 && overflowParents[0] !== mainElement);\n    }\n  }, [rootRef]);\n\n  const computedOffset = computeOffset({\n    isMobile,\n    isVisualRefresh,\n    customCssProps,\n    __stickyOffset,\n    __mobileStickyOffset,\n    mobileBarHeight,\n    stickyOffsetTop,\n    hasInnerOverflowParents,\n  });\n\n  const stickyStyles = isSticky\n    ? {\n        style: {\n          top: computedOffset,\n        },\n      }\n    : {};\n\n  // \"stuck\" state, when the header has moved from its original posititon has a\n  // box-shadow, applied here by a \"header-stuck\" className\n  const checkIfStuck = useCallback(() => {\n    if (rootRef.current && headerRef.current) {\n      const rootTopBorderWidth = parseFloat(getComputedStyle(rootRef.current).borderTopWidth) || 0;\n      const rootTop = rootRef.current.getBoundingClientRect().top + rootTopBorderWidth;\n      const headerTop = headerRef.current.getBoundingClientRect().top;\n\n      if (rootTop < headerTop) {\n        setIsStuck(true);\n      } else {\n        setIsStuck(false);\n      }\n    }\n  }, [rootRef, headerRef]);\n  useEffect(() => {\n    if (isSticky) {\n      window.addEventListener('scroll', checkIfStuck, true);\n      window.addEventListener('resize', checkIfStuck);\n      return () => {\n        window.removeEventListener('scroll', checkIfStuck, true);\n        window.removeEventListener('resize', checkIfStuck);\n      };\n    }\n  }, [isSticky, checkIfStuck]);\n  return {\n    isSticky,\n    isStuck,\n    stickyStyles,\n  };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useContext, createContext } from 'react';\n\nexport interface AppLayoutContextProps {\n  stickyOffsetBottom: number;\n  stickyOffsetTop: number;\n  mobileBarHeight?: number;\n  setHasStickyBackground?: (hasBackground: boolean) => void;\n}\n\nexport const defaultValue: AppLayoutContextProps = {\n  stickyOffsetTop: 0,\n  stickyOffsetBottom: 0,\n  mobileBarHeight: 0,\n};\n\nexport const AppLayoutContext = createContext(defaultValue);\n\nexport function useAppLayoutContext() {\n  return useContext(AppLayoutContext);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { findUpUntil } from './dom';\nexport interface BoundingBox {\n  blockSize: number;\n  inlineSize: number;\n  insetBlockStart: number;\n  insetInlineStart: number;\n}\n\nexport const getOverflowParents = (element: HTMLElement): HTMLElement[] => {\n  const parents = [];\n  let node: HTMLElement | null = element;\n\n  while ((node = node.parentElement) && node !== document.body) {\n    getComputedStyle(node).overflow !== 'visible' && parents.push(node);\n  }\n  return parents;\n};\n\nexport const getOverflowParentDimensions = ({\n  element,\n  excludeClosestParent = false,\n  expandToViewport = false,\n  canExpandOutsideViewport = false,\n}: {\n  element: HTMLElement;\n  excludeClosestParent: boolean;\n  expandToViewport: boolean;\n  canExpandOutsideViewport: boolean;\n}): BoundingBox[] => {\n  const parents = expandToViewport\n    ? []\n    : getOverflowParents(element).map(el => {\n        const { height, width, top, left } = el.getBoundingClientRect();\n        return {\n          // Treat the whole scrollable area as the available height\n          // if we're allowed to expand past the viewport.\n          blockSize: canExpandOutsideViewport ? el.scrollHeight : height,\n          inlineSize: width,\n          insetBlockStart: top,\n          insetInlineStart: left,\n        };\n      });\n\n  if (canExpandOutsideViewport && !expandToViewport) {\n    const documentDimensions = document.documentElement.getBoundingClientRect();\n    parents.push({\n      inlineSize: Math.max(documentDimensions.width, document.documentElement.clientWidth),\n      blockSize: Math.max(documentDimensions.height, document.documentElement.clientHeight),\n      insetBlockStart: documentDimensions.top,\n      insetInlineStart: documentDimensions.left,\n    });\n  } else {\n    parents.push({\n      blockSize: window.innerHeight,\n      inlineSize: window.innerWidth,\n      insetBlockStart: 0,\n      insetInlineStart: 0,\n    });\n  }\n\n  if (excludeClosestParent && !expandToViewport) {\n    parents.shift();\n  }\n\n  return parents;\n};\n\ntype ScrollIntoViewOptions = Parameters<HTMLElement['scrollIntoView']>[0];\n\n/**\n * Calls `scrollIntoView` on the provided element with sensible defaults. If\n * the element does not exist or does not support the `scrollIntoView`\n * method, it will do nothing. This wrapper is created to support environments\n * where the native function is not available like JSDom (feature request:\n * https://github.com/jsdom/jsdom/issues/1422).\n *\n * @param element to be scrolled into view\n * @param options native options for `scrollIntoView`\n */\nexport function scrollElementIntoView(\n  element: HTMLElement | undefined,\n  options: ScrollIntoViewOptions = { block: 'nearest', inline: 'nearest' }\n) {\n  element?.scrollIntoView?.(options);\n}\n\nexport function calculateScroll({ insetBlockStart, blockSize }: BoundingBox) {\n  if (insetBlockStart < 0) {\n    return insetBlockStart;\n  } else if (insetBlockStart + blockSize > window.innerHeight) {\n    if (blockSize > window.innerHeight) {\n      return insetBlockStart;\n    } else {\n      return insetBlockStart + blockSize - window.innerHeight;\n    }\n  }\n  return 0;\n}\n\n/**\n * For elements with fixed position, the browser's native scrollIntoView API doesn't work,\n * so we need to manually scroll to the element's position.\n * Supports only vertical scrolling.\n */\nexport function scrollRectangleIntoView(box: BoundingBox, scrollableParent?: HTMLElement) {\n  const scrollAmount = calculateScroll(box);\n  if (scrollAmount) {\n    (scrollableParent || window).scrollBy(0, scrollAmount);\n  }\n}\n\nexport function getFirstScrollableParent(element: HTMLElement): HTMLElement | undefined {\n  return (\n    findUpUntil(element, el => {\n      const overflows = el.scrollHeight > el.clientHeight;\n      return overflows && ['scroll', 'auto'].includes(getComputedStyle(el).overflowY);\n    }) || undefined\n  );\n}\n", "const customCSSPropertiesMap: Record<string, string> = {\n  breadcrumbsGap: '--awsui-breadcrumbs-gap-lgosor',\n  contentGapLeft: '--awsui-content-gap-left-lgosor',\n  contentGapRight: '--awsui-content-gap-right-lgosor',\n  contentHeight: '--awsui-content-height-lgosor',\n  defaultMaxContentWidth: '--awsui-default-max-content-width-lgosor',\n  defaultMinContentWidth: '--awsui-default-min-content-width-lgosor',\n  drawerSize: '--awsui-drawer-size-lgosor',\n  footerHeight: '--awsui-footer-height-lgosor',\n  headerGap: '--awsui-header-gap-lgosor',\n  headerHeight: '--awsui-header-height-lgosor',\n  layoutWidth: '--awsui-layout-width-lgosor',\n  mainGap: '--awsui-main-gap-lgosor',\n  mainOffsetLeft: '--awsui-main-offset-left-lgosor',\n  mainTemplateRows: '--awsui-main-template-rows-lgosor',\n  maxContentWidth: '--awsui-max-content-width-lgosor',\n  minContentWidth: '--awsui-min-content-width-lgosor',\n  mobileBarHeight: '--awsui-mobile-bar-height-lgosor',\n  notificationsGap: '--awsui-notifications-gap-lgosor',\n  notificationsHeight: '--awsui-notifications-height-lgosor',\n  offsetTop: '--awsui-offset-top-lgosor',\n  offsetTopWithNotifications: '--awsui-offset-top-with-notifications-lgosor',\n  overlapHeight: '--awsui-overlap-height-lgosor',\n  navigationWidth: '--awsui-navigation-width-lgosor',\n  splitPanelReportedHeaderSize: '--awsui-split-panel-reported-header-size-lgosor',\n  splitPanelReportedSize: '--awsui-split-panel-reported-size-lgosor',\n  splitPanelHeight: '--awsui-split-panel-height-lgosor',\n  splitPanelMinWidth: '--awsui-split-panel-min-width-lgosor',\n  splitPanelMaxWidth: '--awsui-split-panel-max-width-lgosor',\n  toolsMaxWidth: '--awsui-tools-max-width-lgosor',\n  toolsWidth: '--awsui-tools-width-lgosor',\n  toolsAnimationStartingOpacity: '--awsui-tools-animation-starting-opacity-lgosor',\n  contentScrollMargin: '--awsui-content-scroll-margin-lgosor',\n  flashbarStackDepth: '--awsui-flashbar-stack-depth-lgosor',\n  flashbarStackIndex: '--awsui-flashbar-stack-index-lgosor',\n  flashbarStickyBottomMargin: '--awsui-flashbar-sticky-bottom-margin-lgosor',\n  stackedNotificationsBottomMargin: '--awsui-stacked-notifications-bottom-margin-lgosor',\n  stackedNotificationsDefaultBottomMargin: '--awsui-stacked-notifications-default-bottom-margin-lgosor',\n  dropdownDefaultMaxWidth: '--awsui-dropdown-default-max-width-lgosor',\n  spinnerRotatorFrom: '--awsui-spinner-rotator-from-lgosor',\n  spinnerRotatorTo: '--awsui-spinner-rotator-to-lgosor',\n  spinnerLineLeftFrom: '--awsui-spinner-line-left-from-lgosor',\n  spinnerLineLeftTo: '--awsui-spinner-line-left-to-lgosor',\n  spinnerLineRightFrom: '--awsui-spinner-line-right-from-lgosor',\n  spinnerLineRightTo: '--awsui-spinner-line-right-to-lgosor',\n};\nexport default customCSSPropertiesMap;\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_2qdw9_1bpgx_99\",\n  \"refresh\": \"awsui_refresh_2qdw9_1bpgx_138\",\n  \"root-no-actions\": \"awsui_root-no-actions_2qdw9_1bpgx_138\",\n  \"root-variant-h2\": \"awsui_root-variant-h2_2qdw9_1bpgx_141\",\n  \"root-variant-h3\": \"awsui_root-variant-h3_2qdw9_1bpgx_141\",\n  \"root-has-description\": \"awsui_root-has-description_2qdw9_1bpgx_141\",\n  \"root-variant-h1\": \"awsui_root-variant-h1_2qdw9_1bpgx_150\",\n  \"main\": \"awsui_main_2qdw9_1bpgx_160\",\n  \"no-wrap\": \"awsui_no-wrap_2qdw9_1bpgx_170\",\n  \"main-variant-h1\": \"awsui_main-variant-h1_2qdw9_1bpgx_176\",\n  \"actions\": \"awsui_actions_2qdw9_1bpgx_184\",\n  \"actions-centered\": \"awsui_actions-centered_2qdw9_1bpgx_189\",\n  \"actions-variant-h1\": \"awsui_actions-variant-h1_2qdw9_1bpgx_192\",\n  \"actions-variant-h2\": \"awsui_actions-variant-h2_2qdw9_1bpgx_196\",\n  \"actions-variant-h3\": \"awsui_actions-variant-h3_2qdw9_1bpgx_200\",\n  \"title\": \"awsui_title_2qdw9_1bpgx_216\",\n  \"title-variant-h1\": \"awsui_title-variant-h1_2qdw9_1bpgx_221\",\n  \"title-variant-h2\": \"awsui_title-variant-h2_2qdw9_1bpgx_228\",\n  \"title-variant-h3\": \"awsui_title-variant-h3_2qdw9_1bpgx_234\",\n  \"virtual-space\": \"awsui_virtual-space_2qdw9_1bpgx_259\",\n  \"info\": \"awsui_info_2qdw9_1bpgx_265\",\n  \"description\": \"awsui_description_2qdw9_1bpgx_269\",\n  \"description-variant-h1\": \"awsui_description-variant-h1_2qdw9_1bpgx_276\",\n  \"description-variant-h2\": \"awsui_description-variant-h2_2qdw9_1bpgx_280\",\n  \"description-variant-h3\": \"awsui_description-variant-h3_2qdw9_1bpgx_287\",\n  \"heading\": \"awsui_heading_2qdw9_1bpgx_296\",\n  \"heading-variant-h1\": \"awsui_heading-variant-h1_2qdw9_1bpgx_307\",\n  \"heading-variant-h2\": \"awsui_heading-variant-h2_2qdw9_1bpgx_312\",\n  \"heading-variant-h3\": \"awsui_heading-variant-h3_2qdw9_1bpgx_317\",\n  \"heading-text\": \"awsui_heading-text_2qdw9_1bpgx_327\",\n  \"heading-text-variant-h1\": \"awsui_heading-text-variant-h1_2qdw9_1bpgx_330\",\n  \"heading-text-variant-h2\": \"awsui_heading-text-variant-h2_2qdw9_1bpgx_338\",\n  \"heading-text-variant-h3\": \"awsui_heading-text-variant-h3_2qdw9_1bpgx_346\",\n  \"counter\": \"awsui_counter_2qdw9_1bpgx_355\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext } from 'react';\n\ninterface CollectionLabellingInterface {\n  assignId?: (id: string) => void;\n}\n\nexport const CollectionLabelContext = createContext<CollectionLabellingInterface>({});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAKA,SAAS,cAAW;AAClB,MAAI,OAAO,WAAW,aAAa;AAEjC,WAAO;;AAGT,MAAI,OAAO,YAAY;AAQrB,WAAO,OAAO,WAAW,eAAe,gBAAgB,KAAK,EAAE;;AAGjE,SAAO,sBAAsB,OAAO,YAAY,CAAC,IAAI,CAAC,MAAM;AAC9D;AAEO,IAAM,YAAY,qBAA8B;EACrD,cAAc,MAAM,YAAW;EAC/B,SAAS,aAAU;AACjB,UAAM,WAAW,MAAM,QAAQ,YAAW,CAAE;AAC5C,WAAO,iBAAiB,UAAU,QAAQ;AAC1C,WAAO,MAAK;AACV,aAAO,oBAAoB,UAAU,QAAQ;IAC/C;EACF;CACD;;;AChCD,IAAAA,gBAA4F;;;ACA5F,mBAA0C;AASnC,IAAM,eAAsC;EACjD,iBAAiB;EACjB,oBAAoB;EACpB,iBAAiB;;AAGZ,IAAM,uBAAmB,4BAAc,YAAY;AAEpD,SAAU,sBAAmB;AACjC,aAAO,yBAAW,gBAAgB;AACpC;;;ACVO,IAAM,qBAAqB,CAAC,YAAuC;AACxE,QAAM,UAAU,CAAA;AAChB,MAAI,OAA2B;AAE/B,UAAQ,OAAO,KAAK,kBAAkB,SAAS,SAAS,MAAM;AAC5D,qBAAiB,IAAI,EAAE,aAAa,aAAa,QAAQ,KAAK,IAAI;;AAEpE,SAAO;AACT;AAEO,IAAM,8BAA8B,CAAC,EAC1C,SACA,uBAAuB,OACvB,mBAAmB,OACnB,2BAA2B,MAAK,MAMd;AAClB,QAAM,UAAU,mBACZ,CAAA,IACA,mBAAmB,OAAO,EAAE,IAAI,QAAK;AACnC,UAAM,EAAE,QAAQ,OAAO,KAAK,KAAI,IAAK,GAAG,sBAAqB;AAC7D,WAAO;;;MAGL,WAAW,2BAA2B,GAAG,eAAe;MACxD,YAAY;MACZ,iBAAiB;MACjB,kBAAkB;;EAEtB,CAAC;AAEL,MAAI,4BAA4B,CAAC,kBAAkB;AACjD,UAAM,qBAAqB,SAAS,gBAAgB,sBAAqB;AACzE,YAAQ,KAAK;MACX,YAAY,KAAK,IAAI,mBAAmB,OAAO,SAAS,gBAAgB,WAAW;MACnF,WAAW,KAAK,IAAI,mBAAmB,QAAQ,SAAS,gBAAgB,YAAY;MACpF,iBAAiB,mBAAmB;MACpC,kBAAkB,mBAAmB;KACtC;SACI;AACL,YAAQ,KAAK;MACX,WAAW,OAAO;MAClB,YAAY,OAAO;MACnB,iBAAiB;MACjB,kBAAkB;KACnB;;AAGH,MAAI,wBAAwB,CAAC,kBAAkB;AAC7C,YAAQ,MAAK;;AAGf,SAAO;AACT;AAcM,SAAU,sBACd,SACA,UAAiC,EAAE,OAAO,WAAW,QAAQ,UAAS,GAAE;;AAExE,GAAA,KAAA,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,oBAAc,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,SAAG,OAAO;AACnC;AAEM,SAAU,gBAAgB,EAAE,iBAAiB,UAAS,GAAe;AACzE,MAAI,kBAAkB,GAAG;AACvB,WAAO;aACE,kBAAkB,YAAY,OAAO,aAAa;AAC3D,QAAI,YAAY,OAAO,aAAa;AAClC,aAAO;WACF;AACL,aAAO,kBAAkB,YAAY,OAAO;;;AAGhD,SAAO;AACT;AAOM,SAAU,wBAAwB,KAAkB,kBAA8B;AACtF,QAAM,eAAe,gBAAgB,GAAG;AACxC,MAAI,cAAc;AAChB,KAAC,oBAAoB,QAAQ,SAAS,GAAG,YAAY;;AAEzD;AAEM,SAAU,yBAAyB,SAAoB;AAC3D,SACE,YAAY,SAAS,QAAK;AACxB,UAAM,YAAY,GAAG,eAAe,GAAG;AACvC,WAAO,aAAa,CAAC,UAAU,MAAM,EAAE,SAAS,iBAAiB,EAAE,EAAE,SAAS;EAChF,CAAC,KAAK;AAEV;;;ACzHA,IAAM,yBAAiD;EACrD,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,eAAe;EACf,wBAAwB;EACxB,wBAAwB;EACxB,YAAY;EACZ,cAAc;EACd,WAAW;EACX,cAAc;EACd,aAAa;EACb,SAAS;EACT,gBAAgB;EAChB,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,kBAAkB;EAClB,qBAAqB;EACrB,WAAW;EACX,4BAA4B;EAC5B,eAAe;EACf,iBAAiB;EACjB,8BAA8B;EAC9B,wBAAwB;EACxB,kBAAkB;EAClB,oBAAoB;EACpB,oBAAoB;EACpB,eAAe;EACf,YAAY;EACZ,+BAA+B;EAC/B,qBAAqB;EACrB,oBAAoB;EACpB,oBAAoB;EACpB,4BAA4B;EAC5B,kCAAkC;EAClC,yCAAyC;EACzC,yBAAyB;EACzB,oBAAoB;EACpB,kBAAkB;EAClB,qBAAqB;EACrB,mBAAmB;EACnB,sBAAsB;EACtB,oBAAoB;;AAEtB,IAAA,gCAAe;;;AHtBT,SAAU,cAAc,EAC5B,UACA,iBACA,gBACA,gBACA,sBACA,kBAAkB,GAClB,iBACA,wBAAuB,GACJ;AACnB,QAAM,wBAAwB,mBAAc,QAAd,mBAAc,SAAd,iBAAmB,0BAA0B,IAAI;AAQ/E,MAAI,iBAAiB,GAAG,qBAAqB;AAC7C,MAAI,UAAU;AAMZ,UAAM,gBAAgB,GACpB,kBAAkB,mBAAmB,mBAAc,QAAd,mBAAc,SAAd,iBAAkB,MAAM,yBAAoB,QAApB,yBAAoB,SAApB,uBAAwB,EACvF;AAGA,UAAM,sBAAsB,YAAY,eAAe,SAAS,gBAC9D,eAAe,eACjB,aAAa,mBAAc,QAAd,mBAAc,SAAd,iBAAkB,MAAM,yBAAoB,QAApB,yBAAoB,SAApB,uBAAwB,EAAE;AAE/D,qBAAiB,kBAAkB,sBAAsB;aAChD,mBAAmB,CAAC,yBAAyB;AACtD,qBAAiB,OAAO,eAAe,0BAA0B,KAAK,cAAc;;AAEtF,SAAO;AACT;AAEO,IAAM,0BAAsB,6BAAwC;EACzE,SAAS;CACV;AAEM,IAAM,kBAAkB,CAC7B,SACA,WACA,gBACA,gBACA,sBACA,kBAAkB,SAChB;AACF,QAAM,WAAW,UAAS;AAG1B,QAAM,EAAE,iBAAiB,gBAAe,IAAK,oBAAmB;AAChE,QAAM,gBAAgB,YAAY;AAClC,QAAM,WAAW,uBAAsB,KAAM,CAAC,iBAAiB,CAAC,CAAC;AACjE,QAAM,kBAAkB,iBAAgB;AAGxC,QAAM,CAAC,yBAAyB,0BAA0B,QAAI,wBAAS,KAAK;AAC5E,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,KAAK;AAC5C,qCAAgB,MAAK;AACnB,QAAI,QAAQ,SAAS;AACnB,YAAM,kBAAkB,mBAAmB,QAAQ,OAAO;AAC1D,YAAM,cAAc,YAAY,QAAQ,SAAS,UAAQ,KAAK,YAAY,MAAM;AAKhF,iCAA2B,gBAAgB,SAAS,KAAK,gBAAgB,CAAC,MAAM,WAAW;;EAE/F,GAAG,CAAC,OAAO,CAAC;AAEZ,QAAM,iBAAiB,cAAc;IACnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;GACD;AAED,QAAM,eAAe,WACjB;IACE,OAAO;MACL,KAAK;;MAGT,CAAA;AAIJ,QAAM,mBAAe,2BAAY,MAAK;AACpC,QAAI,QAAQ,WAAW,UAAU,SAAS;AACxC,YAAM,qBAAqB,WAAW,iBAAiB,QAAQ,OAAO,EAAE,cAAc,KAAK;AAC3F,YAAM,UAAU,QAAQ,QAAQ,sBAAqB,EAAG,MAAM;AAC9D,YAAM,YAAY,UAAU,QAAQ,sBAAqB,EAAG;AAE5D,UAAI,UAAU,WAAW;AACvB,mBAAW,IAAI;aACV;AACL,mBAAW,KAAK;;;EAGtB,GAAG,CAAC,SAAS,SAAS,CAAC;AACvB,+BAAU,MAAK;AACb,QAAI,UAAU;AACZ,aAAO,iBAAiB,UAAU,cAAc,IAAI;AACpD,aAAO,iBAAiB,UAAU,YAAY;AAC9C,aAAO,MAAK;AACV,eAAO,oBAAoB,UAAU,cAAc,IAAI;AACvD,eAAO,oBAAoB,UAAU,YAAY;MACnD;;EAEJ,GAAG,CAAC,UAAU,YAAY,CAAC;AAC3B,SAAO;IACL;IACA;IACA;;AAEJ;;;AIpJI,OAAO;AACP,IAAO,qBAAQ;AAAA,EACjB,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,wBAAwB;AAAA,EACxB,mBAAmB;AAAA,EACnB,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,WAAW;AAAA,EACX,oBAAoB;AAAA,EACpB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,SAAS;AAAA,EACT,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,iBAAiB;AAAA,EACjB,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,0BAA0B;AAAA,EAC1B,0BAA0B;AAAA,EAC1B,0BAA0B;AAAA,EAC1B,WAAW;AAAA,EACX,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,gBAAgB;AAAA,EAChB,2BAA2B;AAAA,EAC3B,2BAA2B;AAAA,EAC3B,2BAA2B;AAAA,EAC3B,WAAW;AACb;;;ACnCA,IAAAC,gBAA8B;AAMvB,IAAM,6BAAyB,6BAA4C,CAAA,CAAE;",
  "names": ["import_react", "import_react"]
}
